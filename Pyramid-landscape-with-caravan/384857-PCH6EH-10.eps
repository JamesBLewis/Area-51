%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Egypt Pyramids Landscape with Caravan of Camels-3 up-02.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Ayib
%%CreationDate: 26/07/18
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Egypt Pyramids Landscape with Caravan of Camels-2</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-07-26T20:16:07+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-07-26T20:16:07+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-07-26T20:16:07+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8ATAzkXvFwGKtgYFbAxVum&#xA;Kt0xVumKupgV1MVdTFXUwq1TFWqYq0RirRGKtEYVWkYqtIxVaRirRGFVpGKrSMKrSMVWkYVWnFVh&#xA;wqtOKrThQtOKrThVYcVaxVkAGUpXAYFbAxVcBirdMCt0xV1MVbpirqYq6mKtUxVqmKupiq0jCrRG&#xA;KrSMVaIwqtIxVaRiq0jFVpGFVpGKrThVacVWnCq04qsOFVpxQtOFVpxVYcKrTirIgMoS2Biq4DFV&#xA;wGBW6Yq3TFW6YFdTFXUxV1MVdTCrVMVapiq0jFWiMKrSMVWkYq0RhVaRiqwjFVpGFVpGKrThVacV&#xA;WnCqw4qtOFVpxVacKFhxVacKrTirIgMoSuAxVcBgVsDFVwGBW6Yq3TFW6Yq6mKupirVMVaIxVojF&#xA;VpGFWiMVWkYVWkYqtIxVaRhVacVWHFVpwqtOKrThVacVWHCq04qtOFVhwoWnFVpwqsOKskAyhK4D&#xA;ArYGKrgMCrgMVbAxVumBW6Yq3xOKtUxVqmKtEYVaIxVaRiq0jCq0jFVpGFVpxVacKrTiq04qsOFV&#xA;pxVacKrDiq04VWnFVhwqtOKrThQsOKrThVkgzHSuGKrgMCrgMVXAYquVScCqyQE9cBKLV1tvbI2i&#xA;131b2xtbWNbe2Nrag8BGSBTaiRhStIwq0Riq0jCq0jFVhxVacKrTiq04VWHFVpxVacKrDhVacVWn&#xA;Cqw4qtOFVpxQsOFVpxVYcKslGY6VwxVcMCrgMVXqtTgVFwwZAliSjYoMiSxtELB7ZG0Wu9D2xtbW&#xA;PBja2hpYPbJAptBTQ0yYLMFCkZJK04VWnFVpwqsOKrThVacVWHCq04qtOKrDhVacVWnCqw4VWnFV&#xA;hwqtOKFpwqsOKrThVkgzHSvGBVwxVcMCom3jqa4CUFMoIsrJYEo2KLIEsbRKQ5G0Wv8ARxtbU3hx&#xA;tbQssWSBZIGeLrkwWQS2ZKHLAyCicKVpwqsOFVpxVacKrDiq04VWnFVhxVacKrDiq04VWHFVpwqt&#xA;OFVhxVacKFhxVacKslGY6VwwKvGKrhgVH2y9MgWJTOBemVlgUfEmQLEopEyNsV/p4LVSkTCFQkyZ&#xA;MMggJ1yQZBK7leuWhmEIckyWHCq04qtOFVhwqtOKrDhVacVWHFVpwqsOKrThVacVWHCq04qsOFVp&#xA;wqtOKFhwqyUZjpXDAq8YqvXrgVMLbtlZYFNIMrLEo+HIFgUXHTIlCptTAhRkwhKDmyYZBAT98mGQ&#xA;Su575YGYQJybJacKrDiq04VWHCq04qsOFVpxVacVWHCqw4qtOFVpxVYcKrTiqw4VWnChacVWHCrJ&#xA;RmOlcMCrxiq4YFR9s3TIFiUzgbplZYFHRPkCxKKR8jTFU9TBSqUj4QEoSZ8mEhATtkgyCV3LdctD&#xA;MIQ5JksOFVpxVYcKrThVacVWHCq04qsOKrThVYcVWnCq04qsOFVpxVYcKrThVacULDhVkgzHSvGB&#xA;VwxVcMCoiCShpgIQUyglyshgUdFLkCGKISbI0il/rY0tKbzY0tIaWXJAMkBPLkwGQCXTPU5YGQUT&#xA;hStOFVhwqtOKrThVYcVWnCq04qsOKtOjqFZlIDiqEigIqRUfSMUKZwpWnCqw4qtOFVpwqsOKrThQ&#xA;sOKrThVkgzHSuGKrgcCrgcVXqaHAqKhnyJDEhGxT++QIY0iFnyNIpf6/vjS0pvPjS0hpZ8kAyAQU&#xA;01cmAyAQxOSStOFVpxVacKrDiq04VWnFVhwqtOKpr5d0KTVbv4qraREGd/H/ACR7nK8mThHm15J8&#xA;IZh5i0O2u9MWJFEZtxSEgfZHSnyzGxzILjY5kF5tPDJDK0Uq8XQ0YHM4G3MBtSOFKw4VWnFVhwqt&#xA;OKrThQsOKrThVkYzHSuGKrgcCrgcVXA4quDEYFVUnI64KRSutz75GkUu+s++NLSxrn3w0tKDzE4Q&#xA;E0pE4UrScKrScVaJwqsJxVacVWnCq04qtOFUTpmm3Go3iW0A3bd37Ko6scjKQiLYykALemadYW9h&#xA;aJawCiINz3Y92PucwZSJNlwZSJNohlDKVYVBFCPY5FiwPzLpBaR+P9/F9k/zr1AzMxTcrHNiTVGx&#xA;65kOQtOFVhxVacKrTihYcKrTiqw4VZGDlCVwOBWwcVXA4FXA4q2DirdcCt1xV1cVdXFWq4q1XCrR&#xA;OKrScVWk4VWk4qtJwqtJxVaThVuGCWeZIYVLyyEKijuTiTSCaekaDo0GlWYTZriShnk8T4D2GYOS&#xA;fEXCyT4imDSgZCmFKbT++NJpJ9ci9SITr9pNm+Ry3GWcCwrV7KpNxGN/92KP+Jf1zKhLo5MJdEnO&#xA;Wti04qsOFVpxVacKFhxVacKshByhK4HFVwOBWwcVXA4FbrirdcVdXFW64q1XFXVxVquKtE4VWk4q&#xA;jdH0mfU7r0o/hjXeWTso/qchOfCGE58IQ19Zz2dy9vMKMp2PYjsRkoysWmMgRaGJyTJaThVacVZt&#xA;5Y0VbCL61cL/AKXIPhB/YU9vme+YuWd7Dk4mWd7DknbT5TTUotNhpNKbTYaTSjJIGUq26sKEexyQ&#xA;CWNXkZilZD26HxGXxbgx2/tfSfmn923bwOXRLaCgzkmS04VWHChacVWnCqw4qyEHKEtg4quBxVsH&#xA;Aq6uKt1xVuuKurgV1cVdXFWq4VdXFWicVVbO0nvLlLeBeUjmnsB3J9hgkaFljKQAt6LpemwadaLb&#xA;xb03kfuzdycwpS4jbhTkZG0p80aZHdIHG0n7D+DeB9jlmKVM8U6YNIjo5RxRlNCD45lhy1MnClkP&#xA;lrRwWW/uV+EbwIe5/mP8Mpyz6Boyz6BkzTZj00UpNNhpaUmmw0mlNpcNJpTaXDSaS7VF5oJB1XY/&#xA;LJxZRSSejAqRUHqMuDaEnniMb0/ZP2TlgZqJwqtOFVhxVacKrTiqfg5SlcDgVsHFWwcVXVwK3XFX&#xA;VxVuuKurirq4q1XFWq4q2iu7qiAs7EBVG5JPQYoZ/wCX9FTTLblJQ3co/et4D+UZh5J8R8nDyZOI&#xA;+SYSTUyFNdIK7IliZD36fPJx2ZBiGrWfq1lQfvk2YeIH8RmTAuTCVIXRtL+uTepKP9GjPxf5R/l/&#xA;rkpyplOdMs9QKAo2AFAB0AGY9OMptLjSaU2lw0tKbS4aTSwyYaSpmTFVN2DKVPQihwpSK6Uo7Ie2&#xA;XBtCCkRXUqe/fJMkvkRkYq3UZNKmcKrTiqw4VWnFU+BylK4HFWwcCtg4q3XFW64q3XFXVxV1cCur&#xA;hV1cVarirMfK2iC3QX9yv79x+4Q/sKf2vmcxss72Di5cl7BPZJspAaaQsk2SATSGkmyQDKkpvxR+&#xA;Y6N1+eWRZxdZXKhfRoFpUrTatdzjIKQrtLgpFLDJhpKmZMVWGTDSrDJilaXwqsL4pQOpR8kEg6rs&#xA;3yycSyiUryxsUriESJt9sfZP8MIKpc1QSDsRsRk0rThVYcVaxVPAcpSuBxVsHFW64q5pEQVdgo8S&#xA;aD8caQS2GBJAO42Pt3wJYj5n873fl7W4ILq1Emm3CArMp+IUajkCm5FdxXwzMw6YZIkg+oOFn1Rx&#xA;TAI9JZeGBAINQdwRmG5rdcVdXFWq4qyDyzoouHF7cr/o6H90h/bYd/kMpyzrYNOXJWwZXJNmOA4y&#xA;FkmyQCaQ8kuSATSHeXJUypCznmhU/RhCQljuVPgRljNFwXYlXf7Y6j+ORIYkLjJgVaXwqsL4pWls&#xA;KrS+KVpfFVjkMpU7g7HClKJEKOVPbLQ2LcVQt5b8h6ifaH2h4jJRKUAcmqw4q7CqdA5QlcDirdcV&#xA;brirz38z7Ceb0Hn1SG2tC1Ut5TLuw2LBIxJypy6he+bHRSAuo2XWa+BNXKg81juJ7O552dyysjVS&#xA;aIslSOhHQ5siBIbh1QkYnYojUde1fUoY4b65e4SLdOZqa0pXfvTr498jDFGJsCmU80pCibZNB+aW&#xA;qWmmWtjZ28YNvAImnlJcswAHKm1Kb9zmMdDEyJJ5lyxr5RiAByCy01T8wPM1wqwXMghDUZ4x6cKV&#xA;H7fpg1+muGUMOIbhEcmbKdj+p6vpFvcW9hEtzJJJclQZmlcSHlTcAqFWnyAzU5CCduTuMcSBvzT7&#xA;RNKfULj4qrbR7yv4/wCSPc5ROdBck+EM05JHGscYCogoqjoAMxXFUJJskAmkO8uSATSHeXDSVF5M&#xA;klRZ8KUBd7Ny7N+vJBmEKJmRwyncZKmVI+K4WVAy/SPA5AhgQ2XxVaXxVaXwqsL4pWl8KrC+KUNd&#xA;LWjjqNjkgyCGySXYql97bcD6iD4D1HgcnEpQeSV2FU4BylK4HFWwcCt1xVI9c8oaXrd3FPfmRkiW&#xA;ixK7BSSRv1IGw/ZA98yMWolAUHHy6aOQ3J495lihj1e5S2tVtbSKRoYVTkykR7V5MTyJFCc3GEkx&#xA;Fmy6POAJGhQQENrPMU4IeMjrErkHjzboCcsMgGoRJRlx5e1m3iaWS0k4JyMhA5cQlORanQLyoT0r&#xA;kBmierOWGYF0reWrnW7S+S40ppAVZROIwzAqWAo6qGqP9icjmjEipMsEpg3F9A6Tbzak8KRrxMih&#xA;mNeQVe5qOozn5nhehM6Fs6toILO2WCEURep7k9ycxCbNuKTZtbJLhAWkO8uSplSg8mFKi0mFKiz4&#xA;UqbNhVRm+NCv3YQkJW7U2yxsdbzvHJVakHYqO+JCkJqI52AIjcg7j4TldhgpyCRPtqV+YIxCqRfC&#xA;laXwqtL4pWF8KrGYEUPfFKgRQ5JLWKuYBgQRUHYjFUpurcwv4ofsn+GWA2lRySs+/T9zErOFjooJ&#xA;IWJSTT2AqcwfDBYmASyz/NvRprs2UV7ALgVHpOjRknuoB4/F249ctloZAXWzjjLjJq90utPz00yb&#xA;W/0TfWZs5VYx+tcDgnMV2+L4lDbcSwHvTLJdmyEeIG2qOphx8JsMmu/NOhRBP0hbW0XqVCGT0xWn&#xA;WnIDxzGjhkeVuVICPMoWLXfIt5IUi9B5N6pFKtdjQ7I/jkjiyjvUTB5EPLPzj8sQzajZXuh2pKzK&#xA;yXCLyLcl4qrEkkU40H9e217Pz1EiRddrsEiQQFbzf5e0Py15H0eKzjDai+pWr3ssnxEssczUrQKQ&#xA;pbj03GR0+aWTLK+XCa+xc+Dw8Y94/S9pS60T02jWC39N+XNOCUIYktUEd65pql3l2PAkHlnyj5a0&#xA;C41BrJEa2v5PU+quAyR0qV4FqlftEdelPDe/NqJ5AL5hpxYOAmuqfWz6Va8/q6LFzNWo1enzJyg8&#xA;R5tsokrnvrc/7tX7xhosfDKi1zC3SVfvwp4Ct2bfmtMbXgLvSiPWX7h/bjxJ4Wxb2f7UjH5UH8Me&#xA;IrwuNrYfzyfev9MeIp4VNrKyPSRx939MeIrS39HWZ6yvT6MPGVpuPTtER+ciGU9fjbb7hxwGck7p&#xA;lb6hYwLxt44418ECj9WVmJPNBirfphfbBwI4XHV1IoaEeGPAvChppdNm/vLeNie/EA/eN8kLHVNI&#xA;GbTdIk+yrRf6rV/4lyyYnJO6Dk0S3P8Ad3JHsyg/qIyYyHuSonQzXa4WnyOHxPJbXpoMH+7Lon2V&#xA;afrODxfJbVhoOlU+KWUnxBUf8a4PFktlSk8v2RH7u5ZT/lAN+rjhGU9y2ULJoM6/3cyOPeqn9RyQ&#xA;yhNoWfQ7yRCjRhgehDLsfpOTGQJtAJ5V1VmoRGg8Wcf8a8sl40VtE/WffBTZTxH8w/0SPMMy2CPy&#xA;AHryFy6u53JBYsxpWnXtSmbvScXBu89rREZPSxuWaaUqZZGkKjivIk0HWgrmUAA4hJKte6lqF8Yz&#xA;eXDzmFBHF6jE8UXoBkYwEeQZSnKXM23ptnb3lwIJbpLRnoI5JgfSr4Mwrx+dKYzkQLq044CRq6e7&#xA;eWba+07SILS8uBcSxqAHHPYAUAqzP0HhQe2aHNISkSA9HgxyjEAm0h/NSbnodgPDUIj/AMk5MyNC&#xA;PWf6rjdoj0D+t+tmf1n3zCpz6d9Z98aWnfWffGlp31n3xpad9Z98aWnC6I6GmPCtKg1CYdJD99cH&#xA;CvC3+kp/5zjwBeFr9ITf78P348K8LX6Qm/343348K8LRvpT1cn6TjwrS36z74aWnfWffGlpsXRHQ&#xA;kYOFaXC/lHSRvvOPCvC3+kZ/9+HHgXhd+kZv9+H78eBeFr6/N/vxvvOPCvC2NRmH+7D9+PAvCuGq&#xA;Tj9uv3YOALwt/pWbxGPAjhd+lZ/5seBeFr9KT/z/AIDHgC8Lhqk/8+PAF4Wxq03iDjwLwpPzbxy6&#xA;mx435nS61LzZdxQxF5jJ6YVAxJ47VIq52/zGbnBUcYJeb1IM8xAG7JPL35cxLbJd6nV52XktoRQC&#xA;qEcXr3DHMbNrN6i5un7OFXLn3KHl/wAk6brWj2187GAvHwf0zv6iOyFqHbdVH05LLqZQkQx0+ijl&#xA;gJckuH5d6v6d+u5ntnAt9vgmXvQ12NCDv8ss/OR282n+T5+rvHLzZ55M/SsehQw6jz9eIlR6n2go&#xA;PwqagdO3Xbv2GBqeEzuLtdGJDGBLmln5mSH9FWCHveo1fkjj+OW6Ieo+5o7SPoj/AFmX828cw6di&#xA;7m3jjSu5t440rubeONK7m3jjSu5t440rubeONKgNO8xaTqUskVjdLPJEKuFDbCtK1IGWTwyjuQ04&#xA;88Jmom0fzbxyum53NvHGldzbxxpUHfa1p9jPbw3dwsMl0SsHKoBK0r8XQde+TjjMgSBya55YwIBN&#xA;Wv07VLTUbb6zZyepDyK8qMvxKaEUYA4J4zE0U48kZi48kTzbxyNM3c28caVZPciCCSaQ0SJS7n2U&#xA;VOIjZpEiALQWi69aataJcW7cWYEtA5HqKKkAsoPfqMsyYjA0WrDmjkFhMObeOV03O5t440rubeON&#xA;K7m3jjSu5t440rubeONK7m3jjSu5t440qolpcv8AZjb5kU/Xg4gi0LbeTraLU31OOBY7yUMHctWv&#xA;Igk03ofh7e+SOoJjw3s0jFAT4wN01XR3/alA+QJ/plXiNvExX8rrFJdCu45GK/Vr6aEKtKUARv8A&#xA;jbMvXSqY8w4GgkRAjukWZrpVkOvI/M/0GYXGXN4iqDT7Af7rr8y39cHGV4iwP83orWLTtKSNArNe&#xA;g7eAU1/Xmf2eSZS9zru0T6Y+96CLezH+6U/4EZr7LsLLfo2n++I/+AX+mNlbLRt7M/7pT/gRjZWy&#xA;sNnYn/dK/RUYeIrZWHTrA9IyPkzfxOPGU8RWHSrM9C4+R/qMPGV4ixj8wxc6V5XubzTpGWVWRHkJ&#xA;FVR2Ckrt1qQMytJU8gEnG1mWUcZMXkvlDzCuh6r9YlV5LaVTHOiU5UO4I5UFQffNtqMPHGurptLq&#xA;PClfR7vBp1tcwpPb3SywSANHIgDKwPcEHNEZkGiHohkBFhB3t15fsLuOzvtUit7qReaRyEJ8JNAa&#xA;k0FffJxjOQsCwwlqIxNE0UxXSISK+sSDuCAMq8QtnG8r/NuSez1zT4UdHghiE8aGhPqFyDzHh8Ap&#xA;9ObXQAGBLp+0ch44+SL/ACt8zWM/p6BqAcXDM5s5lpxYULsjd+XUg9+nzjrsJHrHLqz0Gr24D8Ho&#xA;mrvo2kabPqN4G+r268nAPxHegC1KipJ8c12MSnIRDscmXgiZFB+WPMHlvzCkz6fbzBYCOZmRlFTX&#xA;o1WU9OlcnmxTx8y14dSMnK0p/Ni/sbDyrJbR8Y7q+dY4goHIqrBpPooKH55boIGWS+gaNflrHV82&#xA;Cflp5tt9J10pqCxm3vUjt2uZDxEIjB4dFOx2B6eJOZ+swGcNujr9HqOCW/V7lJdW8MDzuVWGNS7P&#xA;TYKoqTt7ZoxEk07smhaU6H558va5cy22m3XrSxKGKsjx1U91DhSad8ty6acBcg04tRCZqJToyKeo&#xA;H3ZTTe0WjPVQfmBiq0iA9Y1P+xGO6tGO1PWFD81H9MNlO6029mf90p/wIGNlbK02tkf90r92PEVs&#xA;qfq4aTTvVxpad6uNLTDfyvfjpurb9dUn/wCIR5m636o/1Q4OhHpl/WLMvVzCpzqd6uNLTAvzVmUv&#xA;oKHqbzl9A4g/rzYaEfV7nXa/+H3s99XNfTsad6uNLTvVxpad6uNLTvVxpad6uNLTy783/M9wZI9A&#xA;hHGEqs9y56sango9hSpza9n4R9ZdT2jmN8AeY5s3VMr8leddf0VntLOBtQtpKlbP4jxc/tJxDEe4&#xA;75ianTQnudj3uXptTOGwFjuZXoHkzUNZv73X/M0Qju7kg21tIoYLSm7xtX4QoCBSa08DQ5i5dSIA&#xA;QhyDmYdLKZM8nMs8hu7uCJYWsmPpgKvoNGY+IFBT1GjYfKn0nMAxB3t2AsbU+e9c1G+1HVrq7viT&#xA;dSSN6in9mhoEHsoFBnQ4oCMQByebyzMpEnmg4pZYpUlicxyxkMjqSGVgaggjoRkyLYA09E0cecPO&#xA;rWVvrJYaFAwlmm4el63EUABFORPSo2HXNdk8PDZj9Ts8Qy56Evo+96XHZtZ/8c7hFDtytGBEWwpV&#xA;Cv8Adnx2I9q75rDLi+p2gx8P0/J4T5y1281jzBdXFwx4Ru0UEVSVRENAF2HWlTtm90+IQgAHn9Tl&#xA;M5klJMvaGcaFc/mLqmkjQbQSLpsi+m1zMnELCRQoJWG60PQVP0Zg5RhjLjP1OfiOeceAfS9L0XQx&#xA;5fsorfTQssYUfWo2+FpJAKGVW3oxp9k7e43rrMmXxDcnaY8PhiopR+Y3muew8uPFAstteXj+gCwo&#xA;VQgl2V1JWtBTZu+XaPAJT33AadbnMYbbEpx5Jup5PKmmtOsqy+iOXrnk7UJo1TvRuq+2U6mIGQ03&#xA;aWzjFp36uUU5FO9XGlp3q40tO9XGlpglt+a3leanqGe38fUjrT/kWXzPlocg7i4Ue0cR7wmlv558&#xA;rXFOGpwiv+/CY/8AiYXKjpcg6N0dXiP8QTGDWdMnAMF5DKD04SI36jlZxyHMNwyRPIhjX5bScdN1&#xA;T31Kc/8ACx5k6weof1Q4mg+mX9Y/oZd62YdOc71saVgf5mSGTUPLsI6vctQ/Joh/HNhohtM+X63W&#xA;dofVAef6meetmvp2bvWxpXetjSu9bGld62NK71saV5y+lRX/AJ/+t6sRJAbmSCKEgFOcMSSQowPZ&#xA;kbl7kUzZDJw4aj3f2upOLiz3LldfIbJh5x0by0bWKxtLO3i1K8uIY41t41EoXmPUb4BVVCVqemV6&#xA;fJO7JPCA26rDjrhAHESOSaeQ7UafobWRoZLe5uI5GFKkpKQCf9jTKtVLinfkG7Rw4YV3Esi9bMan&#xA;LQGta2mn6XeXaMjzW8TukZYbso2B+nLMePikB3tWXJwxJ7mC3WheXbIaHPeTQ3MzXhbVJiyMHade&#xA;Xxgn7CuoG/8AHM+OWcuIDbbZ1ssGOPCSQd9/iiNb0byDNqVhGstpbWzic3JhmRNyn7s1rQUbcZHH&#xA;kzCJ5k7M8uHAZDcAb9U18rebdPj0ox6hqluywSvFaSySRpK8CHijSRg1B/WN8qz4DxbA/tbtPqIi&#xA;PqkNuXuR+oed9Ch0+6ntb+2nuIYneKH1UBdgCQo33qfDK4aaZIBBbJ6qAiSCCfewPS9F8p2+t6dH&#xA;f3lvdwzWzvcyiZGjN0x+w1DVFVTsT1OZ88mQxNAjfu6Oux4cQnHiIO3f1TW50HyZN5msraFbYacL&#xA;aZ5hHLsXqFWrhq1HKo3yqOXKIEm7tulgwnIAK4aPVPPJFz9Xtb20+tifTrW5aHTpJGX1PTXqKjqo&#xA;bZT/AAplGpjZBrcjdyNIaBF3EHZlAnBFQag9DmJTmvL/AM39QWW80+yVqmFHlkUdvUIC1/4A5tez&#xA;4UCXTdqT3EXomi3Mkmj2DygLI9vEzqooAxQEgDwzW5B6j73a4t4C+4Iz1shTY71saV3rY0rvWxpX&#xA;zbnSvJOxV2KqkNzcw/3Mrx1/kYr+rAYg80iRHIoyLzF5gi/u9SulHWnrSU+6tMgcMD0DYNRkH8R+&#xA;aJj85+aUpx1KY06ciG/4kDkTpsfczGryj+IqF95k1u+mtpru6M0to3O3ZlX4WJBrQCh3UdclHDGI&#xA;IA5sZ6iciCTyTJPzF83qd70P84ov4KMq/J4+5uGvzd/2Bd/ysjzb/wAtSf8AIqP+mD8nj7k/yhl7&#xA;/sWv+Yvm9jUXoT2EUX8UOH8nj7kHX5u/7AtP5hecCKfpDr/xVD/zRh/KY+770fn83877Apnz15sI&#xA;/wCOi/8AwMf/ADTh/K4+5H53L/OUm85eaCCDqU1D4NQ/eBh/LY+5j+by/wA4oKXWtXlkMkl5M0jO&#xA;kpfm1fUjFEeteqjocmMcR0azmmepU01LUY5XlS6mSWUkySLIwZidyWINThMI9yBkkDdlab69PKtx&#xA;J8Z5P8bfET3O+5w8I7kccu9TeSR6c2LU6VJP68NMSbW4q7FXYq7FXYq7FXYq7FW1ZlPJSVYdCNji&#xA;tuZmY8mJYnudzitouDW9ZgQJBf3MSAUCpNIoA+QOQOKJ5gNgzTHIn5oqPzb5mSnHU7g0FPikLf8A&#xA;Eq5E6fH3BmNVlH8RREfnvzZHTjqLmnTksbf8SU5E6XH3Mxrco/iREf5j+bVpyu1en80Ue/8AwKjI&#xA;nR4+5kO0Mvf9iIj/ADQ8zr9oW8m9fijP3fCwyJ0OPzZjtLL5MRzLcB2KuxV2KuxV2KuxV2KuxV2K&#xA;uxVMrTy5q93aC6ggLRsQEFQC1eXxCvYemdzlcs0QaJboaechYCoPKmvGMubVlI4fA1A1HDEHwH2O&#xA;5HbB48O9l+VyVyWt5X19TQ2T1oW2KnYAHsevxDbHx4d6Dpcnc3/hfV+Xp+monMRm9EsA9BMIePhy&#xA;5t0r+O2Pjx/HzT+Vny61f20usfK+rXV4LVo/RahduZ34I3F2VRUtQ+GMs8QLWGlnKVckbqHkbUrb&#xA;U/qUcsUpdXkhNSGKIQBVafaYsAAMrhqomNtuTQyjLhFJePLGvEjjZu3IEgqVI2IHUHuTt49ss8eH&#xA;e0/lsncqReUtdkVz9X4unGkZNSxYMaLxqP2DWpwHUQ70jSZD0QlvouqXEKzQwF4nJCvVQPhBLHc/&#xA;ZFPtdMmckQaJa44ZkWAqXPl7WraB557V44oxV2Yio3A3Fa9WGAZok0Cylp5xFkJdljS7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUytfMes2sEcEFxwii+yvCNtvioCWUllHq&#xA;Nsdt8rlhiTZDdHUTiKBRVt5y1yIgSyLcwgbwSKApNCKnhxJPxdzkDp4HybI6zIOe4UX816608kwu&#xA;eLSfaARKD4VUUBB6BFp/XJeBCqpidVku7WDzLrQufrIuB63Ax8vTj+yX9U7cacvUHLl1rvj4Maqk&#xA;fmZ3d7/D3/e3J5k1M6jFfxOIpYYlgjUVZRGgpxIcvyr1Ne+Iwx4aU6mfFxDps6bzPrc18l89z/pE&#xA;YCxEKgVVB5UC049R4YjBECq2WWpyGXFe7oPNGvQJGkV0VWIFUHFDsTXeqmtCNq9O2JwQPRY6rIOR&#xA;VJfN2vPKzpceiCwcJGqqARWlNq/tHc9e+AaeHcyOryE86UE8wasihVlQIKjj6UVKEUK04/ZNd16d&#xA;+uSOKLAaiY6/YFtzrurXIkE9wZBMCJKhd68a9v8AitcMcURyCJZ5y5nmgMm1OxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:60915007-315f-477b-877c-c4c53cf266a8</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:60915007-315f-477b-877c-c4c53cf266a8</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:ed205995-f26b-d147-9aa3-abf5b80d30d4</stRef:instanceID>
            <stRef:documentID>xmp.did:f0c1fb82-f178-45d9-b92f-2ab554f9c3b8</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:60915007-315f-477b-877c-c4c53cf266a8</stEvt:instanceID>
                  <stEvt:when>2018-07-26T20:16:07+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[384.472 0 0 384.472 130.53 147.105 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!*I5@!*I5@!*I5@!*I5@!*I5@!*R;A!*R>B!*R>B!*[DC!F!MD!F*VF!F3\G!F3\G!aWnJ!aWnJ!aa"L
"(04O"(9:P"(9=Q"C]LS"CfUU"CfUU"Co^W"_GsZ"_Q'\#%u6^#&)<_#AMKa#AVTc#]%ce#]7og$#\)i
$#e/j$?4Am$?FMo$Zj\q$['hs%!L&!%=$;$%=-D&%XQS(%t)k,&:W.0&qJO5&qS[8'8+s<'SY6A'Sb?C
'o:WG'oLfJ(6%)N(QRAR(m*\W(m3eY)O'1_)jTIc)j]Od*15gh*Lc-m*h;Er+.hZu+.qd"+JS-(+J\6*
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+J\6*+f+E,+f4N.+f=T/,,X]1,,ac2,H0r4,H0u5,cU/8,c^59,cg;:-*-G<-*6M>-EQV?-EZ\@-EceB
-a2tE-a<(G.'W1H.'`:K.C/LN.C/OO.^SaS.^\jU.^\jV/%,'Y/%,*[/@P9]/@YB_/\(Tc/\(Wd0"Lfg
0"Uoi0"Uoj0>%,m0>%,n0>.2o0YI>r0YRDs0Y[Ju0u!W"0u!W#1;Ef%1;No(1Vj#)1Vs)+1W'/,1W'/-
1rB8.1rK>01rK>028oM329#S52TGb72TGb82TPh:2okq;2ou"=2ou"=2p)(?36M7B36V=C36V=D36_CE
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.189632 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[384.472 0 0 384.472 130.53 147.105 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zz!!!$#!WiH+!sA`1"U52:#RLeE$OdFR%hTEf',2/s(Dn&/*$$(A+!;[K+<VdL+<VdM+X&!P+X&$R+sJ
3T,9nEX,9nEX,9nHZ,U=W\,UF`_,pai`,palb-71&d-7:/g-RU8h-n$Jl-n$Mn.4H\p.4H\p.Olnt.Ol
nu.k<,#.kE5&/1`>'/M/P+/M/P+/M/S-/hSb//hSb/0/"t30/"t30/,(60JG170ekC;0ekC<1,:U?1,:
U?1,:U?1G^gC1G^gC1G^jE1c.$G2)R6K2)R6K2)R9M2E!HO2E!HO2E!HP2`EZS2`EZS2`EZS~>
<~='&I)=BJ^0>?b?<?=.)K@:Nk\B5)*sDJsN9Fa&(VI=Hg#KntVGO-,ZlR$sS;U8+KYUnjf^V5:#bV5:&d
VP^8hVl-GjW2QYoWMuksWiE)!WiN2$X/i;%XK8M*Xf\b/Y-+t3YHP.5Yct@9Z*CR=Z*CU?ZEpmDZa7!E
['[3I['[3J[C*HO[^W`T\$riU\@B&Z\[f8]\[f;_]"5Ja]=Y\e]=Y\f]Y(qk]tM+m]tM+m^:q=r^V@Ou
^V@S"^qmk'_83t(_83t)_SX1,_SX4._o0L3`Pog8`Pog9`l?$<`lH-?a2c6@aN2HEaiVZIb0%lLb0.uO
~>
<~`Pog8`l?$=a2c9Cb0%oObg"GYcHjh_cd:%cdF$CkeCE4)g>(N@i8WeWjlbgjlK[["lg*m&lg*m&lg*m&
lg*m&lg4!)m-O**m-O**m-O-,mHs<.mHs<.mHs</mdBN2mdBQ4n*f`6nF5r:naZ/?o()DDoCV\Io^qeJ
p%A"Op@e4Rp@e7Tp\=OYq"aa]q>'j_qYL'bqYL*dqtp9fqtp9fr;?Kjr;?Kjr;HTmrVc]nrVc]orr2os
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~zzzzzzzzzz!!**$!<N<(!s8W-!s8W-!s8W."9\i1"9\i1"9\i1"U,&5"U,&5"U,&5"U5/8"pP89"pP89
"pP;;#6tJ=#6tJ=#RC\A#RC\A#RC_C#mgnE#mq"H$47+J$O[=M$O[=M$OdFP$k*OQ%1NaU%1NdW%LrsY
%M''\%hB0]&.fBa&.fEc&J5Te&J>]h&eYfj',)#m',)&o'GM5q'GV>t'bqH!()@Z$()@]&(Dmu+(`4),
)&X;1)B'M4)B0V7)]K_8*#oq=*??.@*??1B*Zc@D~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
348.652 185.858 mo
491.731 361.479 li
205.574 361.479 li
348.652 185.858 li
cp
level3{
gsave
clp
[47.2778 140.924 -140.924 47.2778 305.426 232.633 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,*(Ua,)tO`,)tL_,)kF^,)kF^+cG7\+cG4[+c>.Z+c5(Y+c,"W+G\hU+G\eT+GS_S+GJYR+,&GO++rAN
++i8L*eE)I*e;uG*IlfE*Ic`D*IZWB*.6H@*.-?>*-p3<)gU':)gKs7)Ks[3)0FC/(j"1,(in(*(N@e&
(N7\$(2hM"(2_Cu'l2.r'Pbqo'PYhm'55Yk'5,Pi&nT;f&nK2d&n9&b&Rii_&R`c^&73KZ%pd<X%U7$T
%U-sS%9^dQ$s:RN$Wb=K$WY7J$<5(H$<"nE#uS_C#Z&J@#YrA>#>N/;#><#9#"lf6#"ZW3"\-?/"@^0-
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,*(Ua,EC^b,ELdc,ELgd,`q!f,`q!g,a%'h,a%*i,a.0j-'R?l-'R?l-'[Hn-'[Hn-'dNp-'mTq-'mTq
-(!]s-CElu-CNs!-CNs!-CX$"-CX'#-Ca-%-Cj3&-_9B(-_9B(-_BH)-_BK*.%fZ,.%fZ-.%o`..%o`.
.&#f/.AH#2.AH#3.AH#3.AQ)4.AQ)4.AZ/5.AZ27.])A9.]2G:.]2J;.];P<.];P<.]DY?/#_b@/#hkB
/#qqC/#qqC/$&"D/?A.G/?J4H/?J7I/?S@K/?S@K/["RO/[+[Q/[4aR/[4dS/[=jT/[=mU/[G!X/[P'Y
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.552415 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[47.2778 140.924 -140.924 47.2778 305.426 232.633 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~!sA`1"U,&6"pP89#6tJ=#RC_C#mgnF$47+J$O[@O%1NaU%LrsZ%hK9`&.oKd&J5Te&eYfi&ebol',2,q
'bqGu()@Z$(Ddl((Dmu,)&aD3)B'P6)]K_8)]Th;*#oq=*??.@*Zc@D*ZcCF+!2RH+!2RI+<VdL+<VdL
+<VdM+X&!P+X&!P+X&$R+sJ3U,9nEX,9nEX,U=W\,U=W\,U=W\,U=W],pai`,pai`,pai`-71&d-71&e
-RU8h-RU8h-n$Jl-n$Jl-n$Jl-n-So.4H\p.4H\p.Olnt.Olnt.P!#".k<,#.k</%/1`>'/1`>'/1`>'
~>
<~6q'O67n?3D8kVfN9heAX:Janc;,U=l<)lq!<``C*=]np3>?b?<?!^lG?t!JP@UiqZAS,RfB4tsmBkhBu
Ci!s*DJjB2E,fl<EcZ;DF`qtQG^+IXH$XgaH[L3hI=?WpIt*!!JUrE)K7ei1KS>,7L5(G<LPL\AM2@+I
MMd:LMi3LPN/W^SNK&pWNfK-\O,o?`OH>QdP*1ukPEV2oPa%GuQ'R`&Q^F/-R@0J2R[T_8S=H+?SXl=C
St;OGT:_dLTqS0RTqS3TU8+KYUSO]^V5:&dVP^8hVl-JmWMuksWiE)"X/i>'XK8P+Y-+t3YHY78Yd(I=
~>
<~_83t)_Sa:0`5KU4`Poj:`l?$<`lH-?a2c6@a2c9BaN2HDaiVZHai_cKb0.uObKJ,Rbfn>Vc-=MYcHjh_
cd0tbd*U1fdaHRme'umte^i=&f@S[-f\"m1g"G'4g=k97g=k<9gY:N=gt^`Ah;-oCh;7#FhVR,GhVR,G
hr!>Khr!>Khr*GNi8EPOi8ESQiSibSiSrkVio8tWj5]1[j5]1[j5f:^jQ,C_jQ,FajlPUcjlPUcjlY^f
k2tggk2tggkND$kkND$kkND$lkih6ol07Hsl07KulK[^$lg*m&lg4!)mHs?0mdBQ4nF5r;naZ/?o(2JE
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!WiE)!WiE)!WiE)!WiE
)!WrN,!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1"9\i1"U,&5"U,&5"U,&5"U5/8"pP89"pP;;#6tJ=#6tJ
>#RC\A#RC\A#RC_C#mgnE#mgnE#mq"H$47+I$47.K$O[=M$O[=M$OdFP~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
348.652 185.858 mo
491.731 361.479 li
435.607 361.479 li
348.652 185.858 li
cp
level3{
gsave
clp
[84.6667 16.0001 -16.0001 84.6667 323.584 260.715 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[84.6667 16.0001 -16.0001 84.6667 323.584 260.715 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
233.069 241.78 mo
332.759 364.144 li
133.38 364.144 li
233.069 241.78 li
cp
level3{
gsave
clp
[74.6666 111.333 -111.333 74.6666 185.493 293.204 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[74.6666 111.333 -111.333 74.6666 185.493 293.204 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
233.069 241.78 mo
332.759 364.144 li
293.654 364.144 li
233.069 241.78 li
cp
level3{
gsave
clp
[92.6667 84 -84 92.6667 207.675 252.483 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[92.6667 84 -84 92.6667 207.675 252.483 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
0 345.166 mo
15.5833 344.388 31.1916 343.445 46.5983 344.695 cv
58.6807 345.676 70.4515 347.996 82.6425 348.253 cv
98.0098 348.577 113.335 343.912 128.599 345 cv
143.032 346.029 156.113 352.577 170.463 353.944 cv
193.297 356.12 216.077 349.979 239.213 349.807 cv
254.8 349.692 270.813 352.267 285.714 349.588 cv
293.255 348.233 299.968 345.604 307.462 344.164 cv
339.715 337.967 373.113 355.05 406.776 352.484 cv
414.421 351.901 421.803 350.306 429.498 350.033 cv
447.79 349.383 464.986 356.226 483.293 355.739 cv
488.977 355.587 494.484 354.732 500 353.87 cv
500 380.158 li
0 380.158 li
0 345.166 li
cp
level3{
gsave
clp
[2.28746e-15 37.3571 -37.3571 2.28746e-15 250 346.134 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+J\6*+J\6*+J\6*+JS0)+JS-(+JJ'&+JJ'&+/%j#+.qd"+.h^!+._Tt*hDKs*h;Er*Ll3n*Lc-m*1>pj
*15gh*1,ag)j]Od)jTIc)O07`)O'1_)3Wt[(m3eY(m*\W(Q[JT(QRAR(6%)N(5q#M'oLfJ'o:WG'SkED
'SY6A'85$='8"j:&qSX7&qJO5&:W.0%t2q-%XZ\*%XHM'%=$;$%!U,"$['hs$Zsbr$?FMo$?=Gn$#e/j
$#\)i#].if#]%ce#AMKa#&)<_"_Q'\"_>mY"Co^W"CfUU"(9=Q"(04O!aWqK!F3\G!F*VF!*R>B!*I5@
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~+J\6*+Je<++f4K-+f=T/+f=T/+fFZ0+fFZ0+fO`1+fXf3+fal4,-'u5,-1)7,-1)7,-:/8,-:/8,H^>;
,H^>;,HgD<,HpM>,d?\@,d?\@,dHbA,dHbA-*ltE-+!%F-+!%F-+*+G-+*.H-+34I-FN@K-FWFM-FWIN
-F`OO-b/aR-b/dT-b8mV-b8mV.(]'X.(]*Y.(f0[.(f3\.D5B^.D>K`.D>Na.DGTc.DGWd._kff._tlg
._toh.`(uj.`2&k.`2)l/&M2m/&V8o/&V8o/&_Aq/&_Aq/B.Pt/B.Su/B7Z!/B7Z"/B@`#/][l%/]dr&
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.552415 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.28746e-15 37.3571 -37.3571 2.28746e-15 250 346.134 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~z!!!!"!<N<(!WiH+!s8Z/"9\i2"U5/9#6tJ=#RC\A#mgnE#mq"H$4@4L$k*RS%1NdW%M'']&J5Tf&eYf
i',)#m'GM5q'GV>t'c%Q#()@]&(Ddo*(`=2/)&aD3)B'P6)]K_8*#oq<*$$%?*?H7C*Zc@D*ZcCF+!2R
H+!2RH+!2RH+!2RH+<VdL+<VdL+<VdL+<VgN+X&!P+X&!Q+sJ3T+sJ3U,9nEX,9nHZ,U=W\,U=W\,UF`
_,pai`-71&d-71&e-RU8h-RU8i-n$Jl-n$Jl.4H\p.4H\p.4H\q.Olnt.Olnt.k<,#.k<,#.kE5&~>
<~='/R->$G39>[:WA?XI2L@U`hW@q9._B4tsmBkhF!Ci+'-Df9T7EH6,BFEM_LGB\:VH$XgbI!pElIt3'#
JUrE*KS5&6LPLY@M2I1KMi<XTNfK0]OH>TeOcklkPE_;sQ'IZ$Q^=),R@0M4R[]e:S=H+?SXl@DT:_dL
TV.sOTqS0SU8"BVU8"EXUnji`V5C,eVPg>jWMukrWiE)!X/i;&XK8M*Xfeh1YHP17YctC;ZEgdBZa7!F
['[3J[C*HO\$riU\@B&Z\[f8^]"5Jb]Y(ni]tM+m^:q@s^VIY$_83t(_SX1,_o'C0`5KU5`Pog9`l?$=
~>
<~`Q#p<a2c6Aai_cKbKJ,Rc-=MXc-FV[cHa_]cd0q`cd0q`d*U.dd*U.dd*^7gdF$Cje'ldpe'umte^i='
f@S[-g"G*5gY:K<gtgfBh;7#Fhr!AMiSibSiSrkVioB(Zj5]4]jQ,Fak2tggk3(pjkND$lkih6okih9q
l07Hsl0@R!lK[["lK[["lK[^$lg*m&lg*m&lg*m&m-O**m-O**m-O**m-X3-mHs<.mHs?0mdBN2mdKW5
n*oi9naZ/>o()DDo^qeJo_%nMp%J+Qp\4IXq"X[\q>'j_qYL'bqYU0eqtp9fr;?Kjr;?NlrVc]nrVlfr
~>
<~zzzzzzzzzzzzzzzzzzzzzzz!!**$!<E3%!<E3%!<E3%!<E3%!<N<(!WiE)!WiE)!WiE)!WiE*!s8W-!s
8W-!s8W-!s8W-!s8W-!s8W."9\i1"9\i1"9\i2"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP8:#6tJ=#6
tM?#RC\A#RC\B#mgnE#mgnE$47+I$47+I$4@4L$O[=M$k*OQ$k*OQ%1NaU%1WjX%LrsY~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
54.5398 360.952 mo
63.1925 361.984 71.7855 363.193 80.7679 363.631 cv
87.4191 363.956 94.1925 363.852 100.768 364.364 cv
108.142 364.937 114.983 366.262 122.291 366.952 cv
144.09 369.009 167.462 365.241 189.048 367.606 cv
200.775 368.891 211.408 371.939 223.569 371.956 cv
230.931 371.967 237.909 370.842 245.233 370.62 cv
252.873 370.389 260.697 371.146 268.22 370.636 cv
274.824 370.189 280.624 368.802 287.038 368.087 cv
309.432 365.591 332.949 371.59 356.467 371.415 cv
366.03 371.344 375.333 370.244 384.902 370.254 cv
401.496 370.271 417.264 373.604 433.86 373.648 cv
444.726 373.677 455.255 372.288 466.12 372.285 cv
472.729 372.284 479.282 372.796 485.776 373.305 cv
490.518 373.677 495.259 374.05 500 374.422 cv
500 446.824 li
0 446.824 li
0 356.797 li
18.4747 357.448 36.8023 358.837 54.5398 360.952 cv
cp
level3{
gsave
clp
[5.51261e-15 90.0278 -90.0278 5.51261e-15 250 356.797 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.51261e-15 90.0278 -90.0278 5.51261e-15 250 356.797 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
54.5398 352.286 mo
63.1925 353.318 71.7855 354.526 80.7679 354.965 cv
87.4191 355.289 94.1925 355.186 100.768 355.697 cv
108.142 356.271 114.983 357.596 122.291 358.285 cv
144.09 360.343 167.462 356.575 189.048 358.939 cv
200.775 360.224 211.408 363.273 223.569 363.29 cv
230.931 363.3 237.909 362.175 245.233 361.954 cv
252.873 361.722 260.697 362.479 268.22 361.97 cv
274.824 361.522 280.624 360.136 287.038 359.421 cv
309.432 356.925 332.949 362.924 356.467 362.749 cv
366.03 362.677 375.333 361.578 384.902 361.587 cv
401.496 361.604 417.264 364.938 433.86 364.982 cv
444.726 365.011 455.255 363.621 466.12 363.619 cv
472.729 363.617 479.282 364.129 485.776 364.639 cv
490.518 365.011 495.259 365.383 500 365.755 cv
500 393.491 li
500 393.491 423.5 390.5 398 390.5 cv
364.535 390.5 308.558 397.551 248.998 398 cv
206.173 398.323 161.494 391.337 122 392.5 cv
53.1138 394.528 0 405 0 405 cv
0 348.13 li
18.4747 348.782 36.8023 350.171 54.5398 352.286 cv
cp
level3{
gsave
clp
[3.48229e-15 56.8701 -56.8701 3.48229e-15 250 322.797 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.48229e-15 56.8701 -56.8701 3.48229e-15 250 322.797 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
500 443.5 mo
500 443.5 373.24 435.5 330.157 435.5 cv
289.883 435.5 209.407 441.388 137.993 442 cv
64.1517 442.633 0 431.5 0 431.5 cv
0 500 li
500 500 li
500 443.5 li
cp
.567407 .745083 .715816 .816281 cmyk
f
70.48 369.149 mo
70.3608 369.128 70.2188 369.096 70.0571 369.059 cv
69.9023 369.023 69.731 368.984 69.5474 368.947 cv
69.1558 368.447 li
69.8848 368.077 li
71.5396 369.378 li
70.48 369.149 li
cp
69.647 378.445 mo
69.6504 378.355 69.6597 378.251 69.6689 378.134 cv
69.6743 378.07 69.6802 378.003 69.6851 377.935 cv
69.7192 378.102 69.7568 378.263 69.7925 378.418 cv
69.8018 378.459 69.811 378.499 69.8203 378.538 cv
69.647 378.445 li
cp
69.6401 380.322 mo
69.6328 378.84 li
69.6328 378.833 69.6328 378.785 69.6367 378.691 cv
69.853 378.685 li
69.8662 378.744 69.8789 378.803 69.8901 378.86 cv
69.9326 379.069 69.9824 379.26 70.0391 379.412 cv
70.0835 379.546 70.1211 379.663 70.1548 379.788 cv
70.2134 379.966 70.2402 380.07 70.2427 380.08 cv
70.522 381.2 li
69.6401 380.322 li
cp
69.3071 381.449 mo
69.271 381.426 69.2319 381.387 69.186 381.345 cv
69.021 381.199 li
68.9565 381.151 68.8931 381.087 68.8252 381.021 cv
68.7676 380.964 68.708 380.906 68.6558 380.859 cv
68.6821 380.868 68.7104 380.879 68.7417 380.892 cv
68.8452 380.926 68.9058 380.949 68.9126 380.952 cv
69.2876 381.1 li
69.417 381.531 li
69.3071 381.449 li
cp
68.2925 379.016 mo
68.2314 378.966 68.168 378.916 68.1025 378.867 cv
68.0986 378.735 li
68.1675 378.736 68.2051 378.735 68.2061 378.736 cv
68.563 378.726 li
68.6226 378.884 68.6509 378.978 68.6538 378.985 cv
68.8022 379.48 li
68.7759 379.455 68.749 379.429 68.7217 379.402 cv
68.5889 379.272 68.4438 379.132 68.2925 379.016 cv
cp
68.064 377.442 mo
68.103 377.546 li
68.1123 377.571 68.1216 377.597 68.1304 377.621 cv
68.1104 377.608 68.0898 377.594 68.0679 377.579 cv
68.064 377.442 li
cp
67.6577 368.623 mo
67.4351 368.594 67.2065 368.569 66.9761 368.548 cv
67.2212 368.48 67.4536 368.424 67.665 368.391 cv
67.8232 368.363 68.0161 368.332 68.2046 368.314 cv
68.9316 368.829 li
68.5405 368.755 68.1104 368.681 67.6577 368.623 cv
cp
66.6187 376.644 mo
66.6235 376.251 li
66.6401 376.304 li
66.6875 376.464 66.7432 376.609 66.7998 376.734 cv
66.7427 376.705 66.6826 376.675 66.6187 376.644 cv
cp
67.8623 366.533 mo
67.9829 366.632 68.0981 366.725 68.2046 366.817 cv
68.3638 366.954 68.5181 367.072 68.6543 367.157 cv
68.4961 367.115 68.2915 367.07 68.0503 367.037 cv
67.9902 366.961 li
67.9844 366.953 67.9189 366.869 67.7964 366.689 cv
67.7339 366.609 67.665 366.502 67.5845 366.379 cv
67.5498 366.326 67.5137 366.271 67.4761 366.214 cv
67.6074 366.326 67.7373 366.432 67.8623 366.533 cv
cp
66.0317 366.985 mo
65.896 366.821 li
65.9619 366.861 li
66.0278 366.902 66.0918 366.942 66.1533 366.98 cv
66.1133 366.981 66.0728 366.983 66.0317 366.985 cv
cp
65.6572 371.823 mo
65.6128 371.697 65.5625 371.577 65.5107 371.459 cv
65.562 371.477 65.6133 371.493 65.6641 371.511 cv
65.6719 371.607 li
65.6792 371.684 65.6885 371.763 65.6997 371.821 cv
65.7051 371.874 65.7114 371.927 65.7212 371.982 cv
65.6997 371.927 65.6787 371.874 65.6572 371.823 cv
cp
64.3184 367.15 mo
64.272 367.089 li
64.3242 367.06 64.3721 367.034 64.4141 367.012 cv
64.4448 367.028 64.4746 367.045 64.5039 367.06 cv
64.6094 367.114 li
64.5122 367.126 64.4155 367.138 64.3184 367.15 cv
cp
63.3755 371.066 mo
63.3369 370.996 63.2964 370.928 63.2554 370.861 cv
63.3047 370.871 63.3545 370.881 63.4038 370.891 cv
63.3921 370.948 63.3823 371.008 63.3755 371.066 cv
cp
60.5425 363.859 mo
60.4292 363.788 60.3145 363.723 60.2051 363.663 cv
60.2559 363.646 60.3071 363.628 60.3579 363.61 cv
60.4243 363.683 li
60.4775 363.738 60.5337 363.796 60.5742 363.831 cv
60.6113 363.869 60.6494 363.908 60.6919 363.946 cv
60.6406 363.916 60.5908 363.887 60.5425 363.859 cv
cp
58.1499 364.53 mo
58.1641 364.522 58.1787 364.516 58.1934 364.509 cv
58.2007 364.522 58.208 364.537 58.2158 364.552 cv
58.1499 364.53 li
cp
50.6143 363.721 mo
50.2617 364.191 49.9282 364.712 49.6147 365.282 cv
49.5928 365.052 li
49.6035 364.981 49.6157 364.913 49.6299 364.845 cv
49.6982 364.487 49.7695 364.118 49.8647 363.934 cv
49.897 363.863 49.9209 363.836 49.9468 363.82 cv
51.292 362.868 li
51.0684 363.131 50.8369 363.416 50.6143 363.721 cv
cp
42.3364 378.064 mo
42.3281 378.281 42.3193 378.506 42.2783 378.677 cv
42.272 378.726 42.2588 378.763 42.2222 378.875 cv
41.583 380.888 li
41.833 379.099 li
41.8389 379.019 41.8569 378.923 41.8804 378.786 cv
41.9619 378.314 li
41.9795 378.185 42.0107 378.047 42.0635 377.807 cv
42.1016 377.616 li
42.1284 377.482 42.1563 377.345 42.1777 377.218 cv
42.2427 376.886 li
42.2622 376.787 42.2813 376.686 42.3013 376.586 cv
42.3052 376.682 42.3096 376.776 42.314 376.869 cv
42.3286 377.228 li
42.3403 377.484 42.3525 377.724 42.3413 377.941 cv
42.3364 378.064 li
cp
40.5205 362.398 mo
40.0498 362.31 li
40.0171 362.304 39.9868 362.299 39.9585 362.294 cv
39.7402 361.97 li
39.8672 362.028 39.9966 362.087 40.1279 362.143 cv
40.2964 362.217 40.4692 362.29 40.6421 362.362 cv
40.7256 362.397 40.8091 362.433 40.8931 362.468 cv
40.7612 362.44 40.6362 362.419 40.5205 362.398 cv
cp
39.7832 364.07 mo
39.6431 363.916 39.4946 363.771 39.3613 363.651 cv
39.2998 363.59 39.2319 363.533 39.1646 363.479 cv
39.0313 363.371 li
38.9614 363.314 38.8916 363.261 38.8281 363.224 cv
38.6597 363.113 li
38.5635 363.051 38.4722 362.99 38.394 362.944 cv
37.877 362.664 li
37.7959 362.624 37.7236 362.589 37.6494 362.557 cv
36.7627 362.152 li
36.4893 361.923 li
36.3506 361.803 36.2153 361.703 36.1011 361.629 cv
35.8325 361.441 li
39.3452 363.171 li
39.356 363.176 39.4727 363.234 39.6807 363.361 cv
39.7148 363.381 39.751 363.401 39.7886 363.425 cv
39.9175 364.17 li
39.7832 364.07 li
cp
39.1599 375.623 mo
39.1599 375.623 li
39.2397 375.624 li
39.249 375.644 li
39.1599 375.623 li
cp
33.3433 376.803 mo
33.3403 376.781 33.3374 376.76 33.334 376.738 cv
33.3413 376.734 33.3486 376.73 33.3555 376.727 cv
33.3516 376.752 33.3472 376.777 33.3433 376.803 cv
cp
33.2398 369.324 mo
33.2398 369.324 li
33.2404 369.324 li
33.2398 369.324 li
cp
30.3408 378.73 mo
30.3032 378.966 30.2632 379.217 30.2446 379.458 cv
30.2407 379.489 30.2368 379.521 30.2334 379.553 cv
30.2275 379.487 30.2217 379.424 30.2153 379.36 cv
30.1919 379.108 li
30.1836 378.994 30.1685 378.885 30.1489 378.782 cv
30.2183 378.728 30.2881 378.675 30.3579 378.621 cv
30.3525 378.657 30.3467 378.694 30.3408 378.73 cv
cp
28.7578 373.094 mo
28.7544 373.094 li
28.7598 373.091 28.7646 373.088 28.77 373.084 cv
28.7832 373.088 28.7964 373.091 28.8101 373.095 cv
28.793 373.094 28.7754 373.094 28.7578 373.094 cv
cp
27.4595 374.492 mo
26.9429 374.49 26.4375 374.53 25.9326 374.611 cv
25.5386 374.665 25.2153 374.77 24.9795 374.846 cv
24.8584 374.885 li
24.7617 374.913 24.6802 374.945 24.5557 374.994 cv
23.5928 375.367 li
24.0254 374.946 li
24.9263 374.556 li
26.4082 374.133 li
26.4736 374.165 26.5552 374.202 26.6582 374.246 cv
26.8389 374.31 27.1846 374.418 27.6372 374.492 cv
27.4595 374.492 li
cp
71.1435 359.543 mo
71.1436 359.543 li
71.1434 359.543 li
71.1435 359.543 li
cp
81.7578 387.049 mo
81.7026 386.965 81.6489 386.844 81.585 386.706 cv
81.4785 386.48 li
81.4414 386.41 81.4175 386.324 81.3896 386.236 cv
80.8682 384.35 li
80.7788 384.068 80.687 383.777 80.5488 383.539 cv
80.4302 383.282 80.2739 383.067 80.1357 382.877 cv
80.124 382.861 80.1118 382.845 80.1001 382.828 cv
80.1978 382.89 80.2954 382.947 80.3926 383.002 cv
80.5591 383.098 80.7256 383.185 80.8848 383.271 cv
81.0625 383.364 81.2305 383.453 81.3926 383.552 cv
81.8022 383.766 li
81.9102 383.826 82.0034 383.88 82.0967 383.939 cv
84.8491 385.56 li
82.7842 383.09 li
82.7241 383.024 82.6543 382.94 82.5742 382.845 cv
82.4966 382.743 li
82.4268 382.648 82.3506 382.548 82.2676 382.462 cv
82.1724 382.358 82.0742 382.242 81.9707 382.119 cv
81.8271 381.95 81.6743 381.77 81.5103 381.596 cv
81.4629 381.544 81.4136 381.493 81.3638 381.443 cv
81.4502 381.486 81.5313 381.529 81.6094 381.58 cv
81.6924 381.626 81.7554 381.668 81.8086 381.703 cv
81.8931 381.759 li
82.5156 380.982 li
82.5093 380.977 82.4224 380.891 82.2603 380.712 cv
82.2002 380.653 82.1353 380.579 82.061 380.494 cv
81.9248 380.34 81.7642 380.158 81.519 379.931 cv
81.2271 379.664 80.8633 379.332 80.4556 379.028 cv
80.2168 378.846 79.9634 378.67 79.7046 378.499 cv
79.9434 378.6 80.1602 378.697 80.3198 378.797 cv
80.3804 378.826 80.4287 378.857 80.5376 378.925 cv
83.0405 380.441 li
81.2881 378.248 li
81.2881 378.248 81.1904 378.126 80.9917 377.896 cv
80.8984 377.797 li
80.7183 377.603 80.4712 377.34 80.1431 377.072 cv
79.9595 376.923 79.7583 376.762 79.5317 376.588 cv
79.3027 376.421 79.0552 376.257 78.7954 376.104 cv
78.7524 376.079 78.7085 376.054 78.6641 376.027 cv
78.2549 375.189 li
78.2251 375.109 78.1694 375.011 78.0552 374.825 cv
77.7646 374.489 li
77.7153 374.439 77.6626 374.385 77.6128 374.343 cv
77.4565 374.201 77.2432 374.022 76.9863 373.888 cv
76.4609 373.596 75.9585 373.353 75.5029 373.167 cv
75.2993 373.08 li
78.1738 374.184 li
75.106 371.893 li
75.0459 371.846 74.9731 371.79 74.8647 371.72 cv
74.6187 371.561 74.2466 371.323 73.7573 371.106 cv
73.3657 370.941 72.7671 370.702 72.0991 370.526 cv
71.6855 370.413 71.2495 370.32 70.8242 370.238 cv
74.3506 369.983 li
71.5669 369.384 li
69.9614 366.899 li
69.9561 366.892 69.8979 366.8 69.7861 366.6 cv
69.7417 366.533 69.6997 366.445 69.6504 366.346 cv
69.5703 366.185 69.4785 366.003 69.3599 365.818 cv
69.2944 365.716 69.23 365.604 69.1631 365.486 cv
69.2969 365.599 69.4297 365.707 69.5615 365.807 cv
69.7563 365.961 69.9556 366.1 70.1436 366.229 cv
70.2744 366.32 70.3994 366.406 70.5117 366.492 cv
70.6953 366.633 70.877 366.742 71.0317 366.836 cv
71.1064 366.881 71.1733 366.92 71.2817 366.99 cv
71.3311 367.017 71.3677 367.043 71.397 367.063 cv
71.5273 366.87 li
71.6113 366.82 li
71.4912 367.127 li
73.3188 368.357 li
72.1494 366.36 li
72.1309 366.329 72.1069 366.289 72.0552 366.184 cv
72.0215 366.128 71.9868 366.06 71.9473 365.983 cv
71.9341 365.958 71.9209 365.933 71.9072 365.906 cv
72.168 366.176 72.4292 366.429 72.6558 366.639 cv
72.8345 366.81 73.0083 366.948 73.1519 367.061 cv
75.8364 368.874 li
74.228 366.607 li
74.2051 366.575 74.1758 366.534 74.1162 366.441 cv
74.0278 366.324 73.9409 366.138 73.835 365.921 cv
73.8311 365.913 li
74.1626 366.275 74.4961 366.638 74.832 366.952 cv
75.0815 367.191 75.3364 367.404 75.5688 367.599 cv
75.8218 367.81 li
75.9771 367.945 76.1313 368.058 76.2676 368.153 cv
78.8882 369.879 li
77.3789 367.572 li
77.3218 367.497 77.2607 367.397 77.1855 367.276 cv
77.1118 367.159 77.0298 367.029 76.9331 366.885 cv
77.041 366.974 77.1489 367.058 77.2578 367.137 cv
77.5923 367.387 77.9326 367.581 78.1982 367.731 cv
78.356 367.825 78.5098 367.896 78.6445 367.95 cv
78.9849 368.089 li
79.1235 368.134 79.2012 368.165 79.2114 368.17 cv
81.54 369.145 li
79.7593 367.355 li
79.7515 367.348 79.6924 367.287 79.5688 367.143 cv
79.5195 367.094 79.4668 367.025 79.396 366.935 cv
79.1304 366.606 li
79.124 366.6 79.1182 366.592 79.1118 366.585 cv
79.1392 366.598 79.166 366.609 79.1934 366.622 cv
79.3481 366.689 li
79.7202 366.816 80.1416 366.96 80.5337 367.024 cv
80.6958 367.064 80.8633 367.082 81.022 367.099 cv
81.166 367.114 li
81.3403 367.126 81.5005 367.137 81.6445 367.15 cv
81.959 367.181 82.2305 367.147 82.4102 367.125 cv
82.5361 367.106 li
82.689 367.071 82.7734 367.056 82.7798 367.055 cv
84.832 366.685 li
82.8345 366.083 li
82.8242 366.08 82.7471 366.056 82.5996 365.997 cv
82.5044 365.965 82.3882 365.902 82.2534 365.833 cv
82.0313 365.721 li
81.9609 365.689 81.8916 365.638 81.8188 365.587 cv
80.4565 364.56 li
80.2446 364.415 li
80.001 364.247 79.7485 364.073 79.4922 363.969 cv
79.2407 363.839 78.9854 363.766 78.7603 363.7 cv
78.7402 363.695 78.7207 363.689 78.7012 363.684 cv
78.8154 363.672 78.9282 363.658 79.0376 363.641 cv
79.2305 363.614 79.4185 363.581 79.5977 363.55 cv
79.7935 363.516 79.9785 363.482 80.1479 363.464 cv
80.6245 363.379 li
80.7437 363.359 80.8481 363.345 80.9614 363.335 cv
84.1167 362.916 li
80.9834 362.243 li
80.8936 362.228 80.7852 362.204 80.6636 362.178 cv
80.5366 362.144 li
80.4248 362.113 80.3047 362.081 80.188 362.064 cv
80.0503 362.04 79.9023 362.009 79.7466 361.977 cv
79.5283 361.931 79.2949 361.882 79.0576 361.845 cv
78.9883 361.833 78.9185 361.823 78.8481 361.814 cv
78.9424 361.795 79.0332 361.779 79.1265 361.771 cv
79.2153 361.757 79.2871 361.752 79.3613 361.746 cv
79.4609 361.738 li
79.4751 360.743 li
79.4663 360.742 79.3452 360.728 79.1084 360.686 cv
79.0254 360.678 78.9282 360.658 78.8184 360.638 cv
78.6152 360.599 78.3765 360.555 78.0845 360.528 cv
77.6797 360.495 77.1782 360.457 76.6499 360.466 cv
76.3491 360.468 76.0396 360.484 75.7295 360.509 cv
75.9805 360.441 76.2124 360.386 76.3999 360.366 cv
76.4648 360.353 76.5215 360.348 76.6509 360.334 cv
79.6558 360.021 li
76.8286 359.339 li
76.8286 359.339 76.6763 359.303 76.3779 359.242 cv
76.252 359.222 li
75.9897 359.18 75.6304 359.122 75.1431 359.111 cv
74.9238 359.107 74.6865 359.104 74.4214 359.105 cv
74.1387 359.115 73.8418 359.137 73.5449 359.177 cv
73.4976 359.183 73.4502 359.189 73.4019 359.195 cv
72.5576 358.786 li
72.4819 358.739 72.3706 358.693 72.2207 358.639 cv
72.1104 358.602 li
72.0352 358.584 71.9487 358.564 71.854 358.549 cv
71.7339 358.533 li
71.665 358.523 71.5918 358.514 71.5298 358.511 cv
71.3203 358.495 71.041 358.484 70.7544 358.536 cv
70.1416 358.633 69.6113 358.746 69.144 358.878 cv
68.7417 358.982 li
71.6689 358.03 li
68.0527 358.116 li
67.9761 358.116 67.8799 358.115 67.7598 358.127 cv
67.4668 358.153 67.0234 358.192 66.5 358.323 cv
65.8525 358.496 65.3213 358.675 64.834 358.884 cv
64.4385 359.047 64.043 359.238 63.6494 359.439 cv
66.2871 357.077 li
62.7095 358.79 li
62.6025 358.847 62.4712 358.907 62.3213 358.978 cv
62.1226 359.07 61.895 359.177 61.6558 359.301 cv
61.2119 359.526 60.6919 359.791 60.1592 360.106 cv
59.9653 360.221 59.7695 360.341 59.5742 360.466 cv
59.7271 360.262 59.876 360.074 60.0229 359.917 cv
60.2295 359.69 60.5278 359.374 60.7769 359.226 cv
60.8623 359.162 60.9204 359.15 60.9453 359.146 cv
61.2085 359.094 li
61.7036 358.087 li
60.6567 358.167 li
60.5693 358.181 60.4463 358.2 60.2642 358.253 cv
59.9907 358.351 59.5664 358.536 59.0894 358.875 cv
58.6978 359.156 58.2109 359.507 57.7456 359.921 cv
57.3252 360.286 56.9102 360.701 56.499 361.113 cv
56.4604 361.151 li
56.4878 361.095 56.5137 361.039 56.5386 360.986 cv
56.6445 360.743 56.7104 360.606 56.7129 360.602 cv
58.5952 356.725 li
55.875 360.067 li
55.8716 360.071 55.7749 360.19 55.583 360.41 cv
55.5024 360.512 55.3955 360.63 55.2686 360.77 cv
54.8262 361.271 li
54.6611 361.468 54.4683 361.675 54.2637 361.894 cv
54.0928 362.077 53.9146 362.269 53.7417 362.464 cv
53.5361 362.689 53.3291 362.925 53.1226 363.166 cv
52.9473 363.367 li
53.0049 363.259 53.064 363.151 53.1279 363.042 cv
53.2427 362.821 li
53.3252 362.661 53.4019 362.512 53.4824 362.371 cv
53.5801 362.194 53.6646 362.039 53.772 361.896 cv
56.4497 357.829 li
52.9058 361.195 li
52.7939 361.309 52.6577 361.445 52.4961 361.596 cv
52.3223 361.754 52.1323 361.938 51.8994 362.18 cv
49.4951 362.939 li
49.3838 362.973 li
49.3291 362.433 li
49.1318 363.116 li
49.063 363.168 48.9907 363.23 48.9141 363.307 cv
48.9077 363.314 48.9009 363.321 48.894 363.329 cv
48.8853 363.276 48.876 363.223 48.8667 363.17 cv
48.7808 362.832 48.6836 362.564 48.5977 362.349 cv
48.5137 362.172 48.4644 362.077 48.4644 362.077 cv
47.4243 360.204 li
47.4619 361.028 li
47.4126 360.859 47.355 360.712 47.3052 360.586 cv
46.2935 358.264 li
46.2017 359.799 li
46.1436 359.677 46.0811 359.563 46.0215 359.454 cv
45.9243 359.273 li
45.8193 359.068 45.6934 358.912 45.6011 358.798 cv
44.2534 356.933 li
44.4224 358.354 li
44.3467 358.223 44.2627 358.102 44.1841 357.989 cv
44.1416 357.929 44.1011 357.871 44.0635 357.811 cv
43.9736 357.671 43.8726 357.556 43.7886 357.46 cv
43.688 357.344 li
43.6318 357.285 43.6006 357.248 43.5957 357.241 cv
43.1948 356.721 li
43.043 356.422 42.9111 356.193 42.7744 355.992 cv
42.6782 355.852 42.5718 355.724 42.4712 355.603 cv
42.3975 355.514 42.3267 355.431 42.2612 355.334 cv
42.1323 355.16 li
42.0635 355.068 42.0015 354.991 41.937 354.876 cv
40.8398 353.014 li
40.9077 354.992 li
40.9077 354.992 40.9106 355.082 40.9326 355.29 cv
40.8335 355.161 40.7339 355.039 40.6343 354.929 cv
40.5015 354.771 40.3564 354.634 40.2212 354.508 cv
40.1602 354.451 40.1016 354.396 40.0464 354.341 cv
39.9424 354.235 39.8398 354.147 39.752 354.072 cv
39.7041 354.031 39.6616 353.995 39.5986 353.935 cv
37.6938 352.193 li
38.6606 354.382 li
38.7471 354.594 li
38.7534 354.606 38.7598 354.621 38.7661 354.636 cv
38.7119 354.582 38.6563 354.53 38.6021 354.479 cv
38.5313 354.413 38.4634 354.353 38.3901 354.265 cv
38.2559 354.127 li
38.2124 354.084 38.1719 354.048 38.1094 353.965 cv
37.0635 352.609 li
37.127 354.185 li
37.1538 354.591 li
37.1563 354.632 37.1592 354.675 37.1636 354.719 cv
37.1431 354.702 37.1226 354.688 37.1016 354.672 cv
36.9683 354.568 36.8237 354.47 36.6567 354.372 cv
36.5464 354.313 36.4321 354.258 36.3174 354.203 cv
36.1807 354.14 li
35.877 354.022 35.5762 353.908 35.3032 353.827 cv
35.1738 353.782 35.0415 353.75 34.8516 353.704 cv
34.7349 353.675 34.626 353.646 34.5205 353.61 cv
34.1895 353.499 li
34.1304 353.478 34.0776 353.461 33.9961 353.428 cv
31.6655 352.656 li
33.291 354.198 li
33.6094 354.486 li
33.6885 354.554 33.7808 354.633 33.8931 354.734 cv
33.9751 354.804 34.0605 354.885 34.1558 354.977 cv
34.2627 355.082 34.3755 355.191 34.4854 355.278 cv
34.5957 355.373 34.7119 355.467 34.8306 355.56 cv
34.624 355.616 34.4258 355.673 34.2432 355.732 cv
33.9248 355.833 li
33.772 355.883 33.6289 355.931 33.4561 355.968 cv
33.2969 356.001 33.1172 356.038 33.0117 356.038 cv
33.0088 356.038 li
32.9209 356.046 32.8643 356.038 32.8545 356.038 cv
30.5 355.83 li
32.6514 357.02 li
32.6924 357.042 32.7441 357.07 32.8066 357.098 cv
32.9043 357.136 li
33.0605 357.196 33.2695 357.274 33.522 357.319 cv
33.6206 357.336 33.7222 357.353 33.8257 357.368 cv
34.5703 357.827 li
34.6592 357.875 34.7695 357.929 34.8989 357.988 cv
34.9653 358.019 35.0371 358.052 35.1367 358.091 cv
35.2134 358.117 35.2949 358.144 35.4707 358.192 cv
35.6553 358.244 35.8696 358.303 36.0972 358.353 cv
35.1997 358.45 li
34.6973 358.213 li
35.0024 358.471 li
34.9507 358.477 li
34.6758 358.406 li
34.8042 358.492 li
34.041 358.575 li
35.3916 358.888 li
35.896 359.227 li
37.7139 360.766 li
37.7666 360.811 37.8335 360.87 37.9175 360.932 cv
38.0186 361.006 38.1436 361.092 38.3018 361.199 cv
38.4058 361.269 li
38.5361 361.355 38.6797 361.45 38.834 361.524 cv
38.9849 361.6 li
39.0635 361.64 39.1445 361.681 39.228 361.722 cv
39.3794 362.156 li
35.2554 361.074 li
33.5391 359.976 li
34.2104 360.975 li
34.0918 360.92 li
34.2822 361.082 li
34.5732 361.515 li
34.5068 361.465 34.4409 361.418 34.376 361.372 cv
34.1992 361.242 34.022 361.127 33.8379 361.011 cv
33.626 360.883 li
33.541 360.831 33.459 360.78 33.394 360.744 cv
33.186 360.616 32.9863 360.525 32.8218 360.452 cv
30.7876 359.574 li
30.6875 359.52 30.5962 359.473 30.5166 359.432 cv
30.4248 359.386 li
30.3394 359.35 30.2749 359.32 30.1602 359.265 cv
26.606 357.545 li
26.918 357.809 li
26.7417 357.684 li
26.5308 357.489 26.335 357.345 26.1963 357.242 cv
22.9165 355.359 li
25.2935 357.862 li
25.3647 357.938 li
25.5952 357.715 li
25.4297 358.021 li
25.5376 358.147 25.6797 358.414 25.7964 358.642 cv
25.8975 358.83 25.9819 359.054 26.0742 359.294 cv
26.2266 359.681 li
26.2349 359.702 26.2432 359.723 26.2515 359.744 cv
26.0928 359.56 25.9229 359.384 25.7568 359.211 cv
25.3984 358.859 li
25.1362 358.613 24.8755 358.37 24.6157 358.171 cv
24.438 358.026 24.2612 357.892 24.0942 357.766 cv
23.9673 357.669 23.8467 357.577 23.7202 357.477 cv
23.2896 357.145 li
23.2295 357.098 23.1753 357.057 23.1133 357.004 cv
20.2876 354.64 li
22.1548 357.484 li
22.1577 357.488 22.2124 357.572 22.313 357.737 cv
22.3833 357.852 li
22.3076 357.789 22.2319 357.728 22.1572 357.671 cv
21.9697 357.521 21.7778 357.386 21.6021 357.274 cv
21.521 357.218 21.4351 357.171 21.2983 357.097 cv
21.0522 356.965 li
20.7671 356.802 20.4526 356.675 20.0327 356.571 cv
17.1836 356.397 li
19.5283 357.523 li
19.7222 357.634 li
19.7808 357.549 li
19.8628 357.556 li
19.8096 357.681 li
19.6665 357.623 19.5259 357.568 19.3877 357.517 cv
19.1807 357.435 18.9766 357.358 18.7817 357.286 cv
18.5459 357.198 18.3232 357.115 18.1104 357.026 cv
17.9277 356.956 li
17.646 356.848 17.4072 356.757 17.2183 356.67 cv
17.0151 356.586 16.8994 356.533 16.895 356.531 cv
13.6782 355.067 li
16.3623 357.366 li
16.3652 357.369 16.4624 357.452 16.6523 357.623 cv
16.7388 357.692 16.8403 357.781 16.9678 357.894 cv
17.0981 358.005 li
17.1924 358.085 17.2935 358.171 17.4082 358.263 cv
17.646 358.447 li
17.915 358.658 18.2129 358.892 18.5342 359.11 cv
18.9834 359.427 19.4824 359.72 19.9302 359.979 cv
20.1357 360.089 20.3306 360.189 20.5146 360.281 cv
20.3296 360.325 20.1528 360.379 19.9868 360.431 cv
19.8672 360.467 19.7544 360.502 19.6421 360.53 cv
19.4805 360.572 19.334 360.626 19.2061 360.673 cv
19.1313 360.701 19.0664 360.727 18.9551 360.757 cv
18.8252 360.804 18.7466 360.827 18.7393 360.83 cv
16.8247 361.395 li
18.7793 361.8 li
18.7866 361.801 18.8667 361.817 19.0435 361.863 cv
16.2686 363.045 li
19.7529 362.659 li
19.7842 362.656 19.8247 362.65 19.9399 362.649 cv
20.0854 362.638 20.3726 362.666 20.6343 362.693 cv
20.7783 362.706 20.9336 362.736 21.0898 362.769 cv
21.2813 362.811 21.4829 362.854 21.6812 362.888 cv
22.0952 362.97 22.542 363.044 23.0264 363.102 cv
23.1963 363.112 li
23.1431 363.144 23.0918 363.174 23.043 363.203 cv
22.9565 363.259 22.8901 363.31 22.8413 363.35 cv
20.8716 364.948 li
23.2891 364.264 li
23.3223 364.254 23.3691 364.24 23.479 364.222 cv
23.5967 364.191 23.7603 364.185 23.9502 364.172 cv
24.1567 364.157 li
24.355 364.14 24.5771 364.145 24.8164 364.15 cv
25.7754 364.162 li
25.605 364.201 25.4419 364.236 25.2813 364.266 cv
24.7749 364.369 li
24.6396 364.398 24.521 364.424 24.4028 364.441 cv
19.8857 365.297 li
24.1318 365.495 li
24.8867 365.518 li
25.0518 365.521 25.2383 365.521 25.4341 365.509 cv
26.0322 365.482 li
26.2539 365.477 26.4868 365.466 26.7251 365.451 cv
26.8809 365.442 27.0396 365.432 27.2002 365.42 cv
27.0728 365.466 26.998 365.489 26.9912 365.491 cv
22.9282 366.733 li
27.2651 366.463 li
27.9609 366.801 li
26.9526 367.16 li
26.4668 367.203 li
26.1338 367.167 25.8569 367.159 25.6104 367.158 cv
25.439 367.163 25.2725 367.184 25.1152 367.202 cv
25.0015 367.217 24.894 367.23 24.7817 367.233 cv
24.5532 367.247 li
24.4424 367.255 24.3486 367.264 24.2192 367.257 cv
22.0684 367.164 li
23.7568 368.184 li
23.7568 368.184 23.8345 368.23 24.0215 368.325 cv
24.022 368.325 li
23.8604 368.339 23.7036 368.356 23.5566 368.38 cv
23.3521 368.406 23.1567 368.454 22.9771 368.499 cv
22.8965 368.519 22.8198 368.538 22.7437 368.554 cv
22.5967 368.585 22.4653 368.624 22.3525 368.657 cv
22.2935 368.675 22.2417 368.69 22.1597 368.711 cv
19.6211 369.363 li
22.0273 369.741 li
22.2495 369.782 li
22.2646 369.784 22.2808 369.787 22.2979 369.79 cv
22.2217 369.806 22.1475 369.825 22.0747 369.843 cv
21.9814 369.866 21.8936 369.891 21.7827 369.904 cv
21.5903 369.943 li
21.5317 369.955 21.4805 369.969 21.3779 369.977 cv
19.6909 370.147 li
21.0327 370.925 li
21.3838 371.119 li
21.4194 371.14 21.4575 371.161 21.4961 371.181 cv
21.4717 371.189 21.4468 371.198 21.4224 371.208 cv
21.2632 371.264 21.1021 371.332 20.9321 371.418 cv
20.812 371.483 20.6943 371.556 20.5767 371.629 cv
20.4785 371.691 li
20.2144 371.884 19.9546 372.074 19.7373 372.26 cv
19.6279 372.347 19.5273 372.441 19.3896 372.572 cv
19.3022 372.654 19.2183 372.73 19.0889 372.835 cv
18.8848 372.996 li
18.8232 373.044 18.7705 373.086 18.6929 373.142 cv
16.7578 374.69 li
18.9585 374.15 li
19.7324 373.936 li
19.8364 373.905 19.9526 373.878 20.0854 373.847 cv
20.231 373.814 20.3828 373.778 20.5127 373.733 cv
20.6528 373.693 20.7944 373.646 20.937 373.597 cv
20.8721 373.801 20.813 373.998 20.7632 374.184 cv
20.6758 374.504 li
20.6348 374.659 20.5972 374.806 20.5439 374.947 cv
20.4814 375.109 20.4111 375.294 20.3491 375.389 cv
20.3062 375.462 20.2734 375.507 20.2681 375.514 cv
18.7842 377.395 li
20.979 376.22 li
21.0205 376.197 21.0728 376.169 21.2085 376.075 cv
21.3442 375.977 21.5259 375.843 21.7051 375.65 cv
21.7666 375.584 21.8354 375.509 21.9082 375.426 cv
22.7026 375.045 li
22.7915 374.996 22.895 374.933 23.0435 374.838 cv
23.0977 374.804 23.1553 374.767 23.2251 374.716 cv
23.2915 374.665 23.3594 374.609 23.4922 374.491 cv
23.6377 374.361 23.8066 374.211 23.9746 374.044 cv
23.583 374.826 li
23.2417 375.036 li
23.5176 374.958 li
23.436 375.12 li
23.2754 375.271 li
23.3843 375.224 li
23.2451 375.502 li
20.8706 376.425 li
24.8682 375.974 li
24.9102 375.969 24.9619 375.961 25.0723 375.957 cv
25.1172 375.951 25.168 375.952 25.2026 375.951 cv
25.5981 375.978 li
25.5498 375.987 25.5015 375.995 25.4541 376.004 cv
25.0049 376.079 24.5835 376.18 24.2036 376.271 cv
23.8789 376.347 li
23.5596 376.421 23.2808 376.51 23.0503 376.583 cv
18.1709 378.174 li
22.5659 377.784 li
22.5718 377.783 22.7163 377.771 22.9863 377.758 cv
23.1333 377.745 23.3179 377.738 23.5313 377.73 cv
23.9023 377.714 li
23.8052 377.727 23.7095 377.736 23.6152 377.747 cv
23.3008 377.782 li
23.0874 377.806 22.8843 377.827 22.6943 377.845 cv
22.46 377.867 22.2466 377.892 22.061 377.912 cv
21.2744 377.999 li
21.2915 378.995 li
21.936 379.033 li
22.1626 379.043 22.4443 379.055 22.7559 379.054 cv
23.7397 379.043 li
23.8867 379.04 24.0396 379.036 24.1997 379.041 cv
24.2739 379.042 24.3481 379.044 24.4233 379.045 cv
24.3765 379.056 li
23.9302 379.162 23.4873 379.268 23.0786 379.392 cv
22.7773 379.479 22.4912 379.577 22.2256 379.669 cv
22.0669 379.724 21.916 379.775 21.77 379.821 cv
21.5117 379.905 21.2856 379.995 21.0957 380.07 cv
20.8193 380.179 li
20.6221 380.265 20.5059 380.31 20.5005 380.311 cv
17.0303 381.654 li
20.7319 381.275 li
20.7378 381.275 20.8613 381.263 21.1011 381.248 cv
21.1914 381.238 21.2983 381.23 21.4189 381.223 cv
21.6069 381.209 21.8247 381.193 22.0669 381.165 cv
22.1284 381.157 22.1914 381.15 22.2563 381.144 cv
22.1167 381.205 21.9751 381.271 21.8315 381.341 cv
21.6323 381.435 21.4443 381.534 21.2666 381.628 cv
21.0903 381.721 20.9248 381.808 20.7524 381.886 cv
20.5298 381.997 li
20.3379 382.094 20.1748 382.179 20.0083 382.237 cv
19.9336 382.27 19.874 382.292 19.7676 382.326 cv
16.7573 383.189 li
19.9927 383.31 li
20.0532 383.31 20.1343 383.313 20.2622 383.313 cv
20.4155 383.305 li
20.521 383.3 20.6401 383.294 20.772 383.282 cv
20.5718 383.448 20.3857 383.613 20.2119 383.768 cv
20.0859 383.88 19.9668 383.986 19.8506 384.084 cv
19.6758 384.232 19.5259 384.378 19.3984 384.502 cv
19.3262 384.571 19.2627 384.634 19.1851 384.703 cv
16.6553 387.139 li
19.8335 385.592 li
19.9102 385.551 20.0044 385.508 20.1118 385.458 cv
20.2603 385.39 20.4312 385.31 20.6157 385.214 cv
20.7217 385.158 20.8364 385.102 20.957 385.045 cv
20.6846 385.256 20.3989 385.488 20.1406 385.737 cv
19.8335 386.034 19.5425 386.372 19.2759 386.743 cv
19.2153 386.824 19.1582 386.903 19.0991 386.999 cv
17.5796 390.488 li
19.4985 388.433 li
20.3135 387.683 li
20.4824 387.53 20.7002 387.393 20.9297 387.244 cv
20.9688 387.219 li
20.9053 387.29 20.8423 387.363 20.7798 387.439 cv
20.6992 387.54 20.6211 387.646 20.5488 387.747 cv
20.3447 388.043 li
20.2056 388.245 20.082 388.454 19.9727 388.653 cv
19.8149 388.929 19.6816 389.204 19.5596 389.457 cv
19.418 389.747 li
19.3281 389.923 19.2598 390.094 19.1846 390.3 cv
17.8013 393.989 li
19.877 391.303 li
19.9063 391.265 19.9502 391.21 20.0288 391.117 cv
20.0815 391.049 20.1533 390.969 20.2368 390.879 cv
20.5679 390.514 li
20.4844 390.954 20.4199 391.344 20.3789 391.72 cv
20.3452 391.959 20.3354 392.196 20.3271 392.424 cv
20.3042 393.217 li
20.3027 393.51 20.3149 393.77 20.3252 393.984 cv
20.3599 394.628 li
21.356 394.668 li
21.3574 394.654 21.3726 394.539 21.4214 394.318 cv
21.4551 394.114 21.5405 393.836 21.6392 393.506 cv
21.6689 393.406 li
21.7192 393.22 21.7837 393.019 21.8579 392.804 cv
21.9346 392.583 li
21.9922 392.422 22.0508 392.256 22.0952 392.099 cv
22.1006 392.082 22.106 392.065 22.1118 392.048 cv
22.1206 392.079 22.1294 392.109 22.1377 392.139 cv
22.1743 392.268 li
22.2612 392.574 22.3823 392.817 22.4707 392.994 cv
22.5259 393.106 li
22.5625 393.177 22.5972 393.235 22.6255 393.281 cv
22.8975 393.18 li
22.689 393.391 li
24.0742 395.685 li
23.5938 392.938 li
23.5884 392.907 23.5806 392.869 23.5713 392.756 cv
23.5542 392.66 23.5615 392.533 23.5649 392.388 cv
23.5684 392.066 li
23.5664 391.895 23.5854 391.704 23.604 391.503 cv
23.6187 391.348 23.6333 391.186 23.6416 391.031 cv
23.731 389.782 li
23.7451 389.448 23.752 389.107 23.7451 388.79 cv
23.7861 389.089 23.8281 389.382 23.8745 389.661 cv
23.9097 389.887 23.9502 390.104 23.9888 390.313 cv
24.0327 390.552 24.0747 390.776 24.1025 390.99 cv
24.1313 391.189 24.1636 391.372 24.1924 391.535 cv
24.2192 391.686 24.2432 391.818 24.2598 391.955 cv
24.7007 395.813 li
25.3179 392.223 li
25.4023 391.677 li
25.4321 391.469 25.4678 391.219 25.4858 390.936 cv
25.5156 390.535 li
25.5396 390.228 25.5654 389.896 25.5728 389.553 cv
25.5762 389.447 25.5781 389.34 25.5786 389.23 cv
25.7871 389.204 li
25.5952 389.379 li
26.8662 392.06 li
26.5337 389.008 li
26.5303 388.976 26.5249 388.933 26.5244 388.836 cv
26.5142 388.691 26.5234 388.494 26.5327 388.264 cv
26.5386 388.107 li
26.543 387.893 26.5757 387.653 26.6094 387.397 cv
26.6489 387.084 li
26.6704 386.933 26.689 386.778 26.7065 386.619 cv
26.772 386.773 26.8389 386.908 26.896 387.022 cv
28.5054 389.829 li
28.0195 386.976 li
27.9976 386.815 li
27.9756 386.693 27.9741 386.523 27.9688 386.324 cv
27.9683 386.305 li
29.729 388.271 li
28.73 385.643 li
28.7007 385.533 li
28.6719 385.435 28.6826 385.145 28.6885 385.001 cv
28.6938 384.808 28.7466 384.557 28.8018 384.292 cv
28.8213 384.198 li
28.8242 384.21 li
28.8472 384.303 28.8691 384.391 28.9043 384.505 cv
28.9683 384.699 li
29.0142 384.838 29.0571 384.957 29.0977 385.066 cv
30.3809 388.289 li
30.1538 384.797 li
30.1436 384.715 30.1416 384.613 30.1367 384.407 cv
30.1279 384.021 li
30.1162 383.805 30.1279 383.561 30.1396 383.304 cv
30.168 382.669 li
30.1821 382.396 30.1963 382.114 30.2153 381.821 cv
30.23 381.997 30.2485 382.174 30.2744 382.347 cv
30.3398 382.842 30.4585 383.305 30.5342 383.599 cv
30.6035 383.902 30.7104 384.152 30.7881 384.334 cv
30.8633 384.514 li
30.9448 384.689 30.9878 384.791 30.9897 384.796 cv
32.4478 388.237 li
31.9458 384.533 li
31.9448 384.528 31.9302 384.418 31.9053 384.182 cv
31.8955 384.133 31.897 384.013 31.8965 383.84 cv
31.896 383.814 li
33.271 387.902 li
32.8052 383.419 li
32.8047 383.41 32.7939 383.306 32.7861 383.104 cv
32.7788 382.992 li
32.8022 382.507 li
32.811 382.445 32.8193 382.383 32.8228 382.31 cv
32.8286 382.092 32.8804 381.822 32.9351 381.536 cv
33.0845 380.716 li
33.1309 380.452 33.1787 380.181 33.2358 379.897 cv
33.2451 379.846 33.2534 379.794 33.2612 379.742 cv
33.2778 380.307 li
33.2817 380.472 33.2852 380.631 33.2852 380.754 cv
33.271 381.07 33.2744 381.373 33.2842 381.555 cv
33.2876 381.679 33.3008 381.774 33.3311 381.933 cv
34.1592 385.775 li
34.3193 381.774 li
34.3208 381.743 34.3232 381.696 34.3652 381.543 cv
34.4033 381.45 li
34.4502 381.351 34.4976 381.24 34.5527 381.077 cv
34.563 381.092 34.5732 381.106 34.5845 381.123 cv
36.7925 384.297 li
35.4746 380.7 li
35.4805 380.587 li
35.4834 380.514 35.5386 380.333 35.5879 380.174 cv
35.6333 380.025 li
35.6494 379.968 35.6704 379.908 35.6992 379.825 cv
35.7285 379.739 li
35.8071 380.029 li
35.8306 380.106 35.856 380.174 35.8721 380.202 cv
36.1797 380.155 li
35.9121 380.31 li
37.147 383.735 li
36.877 380.036 li
36.875 380.008 36.8721 379.967 36.8789 379.876 cv
36.9824 379.262 li
36.9912 379.215 37.0024 379.168 37.0146 379.119 cv
37.0039 379.406 37.0254 379.66 37.0464 379.898 cv
37.4883 382.764 li
38.0962 380.141 li
38.105 380.104 38.1157 380.056 38.1484 379.952 cv
38.1743 379.839 38.2256 379.697 38.2837 379.532 cv
38.3853 379.238 li
38.4473 379.045 38.5366 378.837 38.6313 378.614 cv
38.7856 378.246 li
38.9326 377.896 39.0786 377.521 39.2271 377.141 cv
39.2344 377.121 li
39.2266 377.2 39.2197 377.277 39.2134 377.353 cv
39.1948 377.535 39.1826 377.714 39.1709 377.885 cv
39.1572 378.083 39.145 378.27 39.1211 378.444 cv
39.1006 378.61 39.0889 378.766 39.0791 378.904 cv
39.0703 379.023 39.064 379.127 39.0449 379.244 cv
39.0278 379.416 39.0127 379.516 39.0117 379.522 cv
38.6113 382.189 li
40.1123 379.552 li
40.1382 379.498 40.1729 379.439 40.2114 379.371 cv
40.3003 379.215 40.4053 379.029 40.4971 378.808 cv
40.6104 378.54 li
40.6104 378.54 40.6104 378.54 40.6104 378.539 cv
40.6265 378.636 40.644 378.726 40.6621 378.807 cv
41.4087 382.129 li
41.5449 381.159 li
43.1377 379.285 li
43.186 379.228 43.2529 379.147 43.3179 379.035 cv
43.4858 378.744 43.6099 378.443 43.6865 378.14 cv
43.7798 377.77 43.8755 377.372 43.9258 376.946 cv
43.9268 376.939 43.9272 376.934 43.9282 376.928 cv
43.9458 376.95 43.9644 376.973 43.9829 376.994 cv
44.4355 377.408 li
44.8125 377.675 45.2354 377.834 45.6777 377.881 cv
45.9897 377.924 46.2964 377.902 46.5435 377.828 cv
46.5693 378.627 46.5835 379.426 46.5977 380.225 cv
46.6187 381.332 li
46.6665 383.669 46.853 386.032 47.0337 388.317 cv
47.1094 389.28 47.1855 390.242 47.2515 391.205 cv
47.4922 394.7 47.7036 397.856 47.8584 401.035 cv
47.8179 401.185 47.8252 401.343 47.8799 401.487 cv
48.0352 404.798 48.1045 407.717 48.0923 410.41 cv
48.062 415.612 li
48.0073 424.61 47.9063 441.305 47.9443 444.186 cv
47.9248 444.294 47.9268 444.405 47.9492 444.512 cv
47.9531 444.808 li
47.9829 446.11 49.1025 446.815 50.1924 446.838 cv
50.2109 446.839 50.229 446.839 50.2476 446.839 cv
51.2676 446.839 52.3813 446.247 52.4673 444.927 cv
52.5796 443.206 52.6377 428.945 52.6724 420.425 cv
52.6841 417.485 52.6934 415.262 52.7007 414.534 cv
52.7471 414.413 li
52.7036 414.304 li
52.7324 411.308 li
52.7524 409.068 52.6924 406.683 52.5435 403.81 cv
52.5596 403.759 52.5684 403.705 52.5698 403.65 cv
52.5356 403.302 li
52.5156 403.288 li
52.4854 402.726 52.4531 402.164 52.4185 401.603 cv
52.1968 397.989 51.7236 394.43 51.3364 391.731 cv
51.2236 390.947 51.1152 390.161 51.0073 389.374 cv
50.7837 387.751 50.5601 386.126 50.2983 384.509 cv
50.3149 384.429 50.3169 384.345 50.3022 384.264 cv
50.2886 384.186 50.2612 384.113 50.2217 384.047 cv
50.1055 383.35 49.9829 382.654 49.8486 381.963 cv
49.7158 381.28 49.5952 380.599 49.4805 379.916 cv
49.4893 379.808 49.4707 379.697 49.4263 379.598 cv
49.2998 378.833 49.1802 378.067 49.0635 377.298 cv
49.3306 377.323 49.5815 377.293 49.7739 377.222 cv
49.9946 377.188 50.2026 377.118 50.3877 377.02 cv
50.5781 377.279 50.7593 377.543 50.9375 377.802 cv
51.1177 378.063 li
51.2412 378.257 51.373 378.444 51.5005 378.626 cv
51.688 378.892 51.8647 379.144 51.9922 379.394 cv
52.5488 380.409 li
52.6626 380.621 52.7183 380.751 52.7231 380.764 cv
54.3882 384.781 li
53.6787 380.49 li
53.6768 380.478 53.6548 380.338 53.6367 380.077 cv
53.6216 379.931 53.5996 379.753 53.5698 379.522 cv
53.5444 379.314 53.5146 379.08 53.4585 378.838 cv
53.4326 378.722 53.4082 378.601 53.3813 378.457 cv
53.291 378.052 li
53.2583 377.899 53.2236 377.742 53.1812 377.601 cv
53.1655 377.54 53.1484 377.479 53.1294 377.418 cv
53.1509 377.44 53.1724 377.462 53.1938 377.484 cv
53.3154 377.609 li
53.6509 377.974 53.9712 378.326 54.2056 378.655 cv
54.4209 378.95 54.6436 379.254 54.7632 379.479 cv
54.811 379.557 54.8457 379.622 54.8882 379.701 cv
56.707 383.125 li
55.7178 378.784 li
55.668 378.563 55.6074 378.294 55.5137 377.992 cv
55.4355 377.751 55.3472 377.476 55.2368 377.184 cv
55.3955 377.362 55.5522 377.535 55.7026 377.698 cv
55.8369 377.85 55.9707 377.994 56.1001 378.135 cv
56.2646 378.314 li
56.4067 378.467 56.5356 378.618 56.6577 378.762 cv
56.8936 379.044 li
57.104 379.297 57.2856 379.514 57.4038 379.689 cv
57.4683 379.783 57.5117 379.862 57.543 379.919 cv
59.3931 383.24 li
58.396 379.159 li
58.3286 378.881 58.2354 378.5 58.0601 378.06 cv
58.019 377.96 57.9741 377.852 57.9253 377.736 cv
58.3794 378.314 li
58.5479 378.531 58.7144 378.742 58.8667 378.932 cv
58.9795 379.079 li
59.084 379.215 59.1846 379.345 59.2866 379.501 cv
59.5171 379.809 li
59.6743 380.017 59.8101 380.194 59.9111 380.358 cv
60.0347 380.541 60.0977 380.653 60.1035 380.665 cv
61.02 380.276 li
61.0161 380.265 60.979 380.141 60.9307 379.909 cv
60.8228 379.457 li
60.7974 379.342 60.7695 379.219 60.7354 379.086 cv
60.7744 379.167 60.813 379.248 60.8516 379.33 cv
60.9326 379.501 61.0137 379.672 61.0928 379.828 cv
61.2837 380.229 61.4941 380.605 61.6807 380.938 cv
61.7681 381.093 li
61.8545 381.256 61.958 381.397 62.0532 381.526 cv
62.1284 381.628 li
62.2349 381.771 62.3262 381.893 62.4058 381.991 cv
62.4663 382.066 62.5234 382.126 62.6074 382.215 cv
64.0732 383.743 li
64.5386 384.358 li
64.9175 385.733 li
64.9727 384.934 li
65.0181 384.993 li
64.978 384.859 li
64.9893 384.697 li
65.248 384.967 li
65.002 384.512 li
65.0601 383.674 li
65.124 383.917 65.2012 384.154 65.2808 384.397 cv
65.3086 384.483 65.3394 384.565 65.3784 384.662 cv
65.4097 384.732 65.4438 384.799 65.4819 384.872 cv
65.5469 384.998 65.6045 385.104 65.6729 385.219 cv
65.7495 385.331 li
65.959 385.188 li
66.0469 385.185 li
65.8252 385.445 li
66.1445 385.887 li
66.1665 386.004 66.1904 386.116 66.2139 386.222 cv
66.2695 386.47 66.3569 386.674 66.4238 386.827 cv
66.4668 386.925 li
66.4976 386.986 66.5283 387.037 66.5864 387.136 cv
67.8955 389.606 li
67.5239 386.832 li
67.522 386.818 67.5161 386.763 67.5151 386.645 cv
67.5103 386.564 67.542 386.369 67.5723 386.183 cv
67.5952 386.05 67.6362 385.906 67.6787 385.752 cv
67.7627 385.439 li
67.8149 385.248 67.8633 385.048 67.9116 384.832 cv
68.0078 384.945 68.1035 385.054 68.1953 385.15 cv
68.2939 385.263 68.4009 385.364 68.5293 385.485 cv
68.6206 385.571 68.7051 385.652 68.7896 385.742 cv
68.8862 385.84 68.9697 385.93 69.041 386.006 cv
70.959 387.884 li
69.8701 385.047 li
69.8325 384.95 69.7988 384.843 69.7417 384.649 cv
69.7065 384.528 69.6689 384.401 69.6279 384.302 cv
69.5278 384.013 69.3994 383.717 69.2515 383.384 cv
69.1997 383.286 li
69.1401 383.174 69.0801 383.06 69.0063 382.94 cv
68.9111 382.793 68.8066 382.653 68.7075 382.537 cv
68.6875 382.512 68.667 382.487 68.6465 382.464 cv
68.6943 382.467 68.7446 382.468 68.7993 382.469 cv
69.0156 382.478 li
70.7427 382.476 li
69.647 381.696 li
69.645 381.24 li
70.6289 381.628 li
70.9673 382.984 li
71.0698 381.801 li
71.1636 381.838 li
71.0747 381.749 li
71.2261 380.002 li
71.2271 379.992 71.2373 379.885 71.2725 379.657 cv
71.2783 379.578 71.2993 379.483 71.3208 379.375 cv
71.356 379.199 71.3955 378.998 71.4155 378.779 cv
71.4268 378.659 71.4438 378.531 71.4634 378.397 cv
71.5 378.567 71.5386 378.733 71.5815 378.894 cv
71.6396 379.135 71.7124 379.366 71.7808 379.583 cv
71.8286 379.735 71.8745 379.881 71.9106 380.02 cv
71.9692 380.24 72.0444 380.436 72.1089 380.603 cv
72.1406 380.686 72.1699 380.76 72.2119 380.884 cv
72.2354 380.935 72.2495 380.98 72.2603 381.014 cv
73.0024 383.079 li
73.2842 380.921 li
73.2891 380.886 73.2944 380.84 73.3188 380.722 cv
73.3267 380.655 73.3413 380.578 73.3574 380.492 cv
73.3618 380.467 73.3667 380.44 73.3716 380.413 cv
73.4126 380.786 73.4639 381.146 73.5137 381.449 cv
73.5493 381.693 73.6011 381.908 73.6445 382.086 cv
73.6978 382.316 li
73.7192 382.401 73.7402 382.471 73.7568 382.524 cv
73.896 382.481 li
74.0498 382.486 li
73.791 382.64 li
74.6514 385.353 li
74.7729 382.407 li
74.7749 382.364 74.7769 382.309 74.7876 382.19 cv
74.7896 382.045 74.8354 381.845 74.8848 381.608 cv
74.8867 381.599 li
74.9263 382.088 74.9673 382.579 75.0396 383.033 cv
75.0894 383.38 75.1611 383.708 75.2266 384.006 cv
75.2935 384.316 li
75.333 384.519 75.3857 384.704 75.4346 384.861 cv
76.4448 387.825 li
76.6689 385.085 li
76.6699 384.992 76.6831 384.878 76.7017 384.696 cv
76.7144 384.568 76.728 384.429 76.7393 384.271 cv
76.77 384.406 76.8032 384.539 76.8403 384.668 cv
76.9482 385.06 77.0952 385.418 77.2192 385.72 cv
77.2866 385.888 77.3643 386.038 77.4688 386.219 cv
77.6196 386.479 li
77.7026 386.603 77.7451 386.676 77.75 386.685 cv
79.0015 388.885 li
78.6812 386.373 li
78.6797 386.361 78.6704 386.279 78.6621 386.091 cv
78.6528 386.021 78.6533 385.934 78.6523 385.835 cv
78.644 385.4 li
78.6436 385.391 78.6431 385.38 78.6426 385.369 cv
78.6558 385.396 78.6694 385.42 78.6826 385.445 cv
78.7656 385.598 li
78.9932 385.944 79.2285 386.302 79.4971 386.593 cv
79.6016 386.722 79.7217 386.84 79.8359 386.95 cv
79.9395 387.05 li
80.0693 387.165 80.1885 387.271 80.2964 387.373 cv
80.5264 387.59 80.7612 387.729 80.9165 387.822 cv
81.0269 387.885 li
81.1685 387.951 81.2441 387.99 81.2505 387.993 cv
83.0732 388.947 li
81.8916 387.263 li
81.8857 387.255 81.8389 387.186 81.7578 387.049 cv
cp
f
131.569 320.098 mo
131.447 320.141 li
131.531 320.064 131.614 319.986 131.698 319.903 cv
131.663 319.96 131.625 320.018 131.569 320.098 cv
cp
125.769 335.04 mo
125.807 335.117 125.843 335.193 125.877 335.269 cv
125.873 335.267 125.869 335.265 125.865 335.263 cv
125.741 335.199 125.611 335.141 125.476 335.088 cv
125.472 335.066 125.468 335.045 125.464 335.021 cv
125.769 335.04 li
cp
127.68 334.899 mo
127.801 335.139 127.934 335.363 128.06 335.575 cv
128.149 335.725 128.234 335.867 128.307 336.006 cv
128.423 336.223 128.55 336.41 128.659 336.568 cv
128.714 336.649 128.764 336.721 128.836 336.837 cv
128.874 336.887 128.9 336.93 128.921 336.964 cv
129.097 336.856 li
129.208 336.845 li
128.985 337.069 li
129.141 337.327 li
129.09 337.293 129.038 337.258 128.984 337.225 cv
128.72 337.063 128.42 336.908 128.007 336.725 cv
127.53 336.38 li
127.501 336.185 li
127.499 336.174 127.483 336.057 127.464 335.81 cv
127.45 335.722 127.448 335.613 127.444 335.491 cv
127.437 335.299 127.429 335.079 127.396 334.847 cv
127.372 334.672 127.356 334.481 127.339 334.28 cv
127.336 334.25 127.333 334.22 127.331 334.189 cv
127.444 334.436 127.559 334.676 127.68 334.899 cv
cp
129.124 327.689 mo
129.205 327.689 129.272 327.699 129.419 327.718 cv
130.112 327.796 li
130.631 327.985 li
130.535 327.968 130.441 327.952 130.348 327.939 cv
129.48 327.772 li
129.332 327.741 129.183 327.712 128.997 327.679 cv
129.041 327.681 129.083 327.685 129.124 327.689 cv
cp
130.767 337.986 mo
130.809 338.067 130.847 338.134 130.877 338.185 cv
131.148 338.095 li
130.943 338.3 li
131.103 338.568 li
130.571 338.293 li
130.537 338.275 130.489 338.248 130.38 338.184 cv
130.291 338.142 130.184 338.065 130.057 337.978 cv
130.04 337.967 li
129.902 336.639 li
129.898 336.599 129.893 336.548 129.89 336.421 cv
129.881 336.35 129.877 336.264 129.873 336.169 cv
129.867 336.047 129.86 335.912 129.846 335.768 cv
129.9 335.92 li
130.05 336.353 130.214 336.774 130.358 337.121 cv
130.456 337.367 130.563 337.579 130.652 337.755 cv
130.692 337.833 130.727 337.902 130.767 337.986 cv
cp
123.817 329.407 mo
123.847 329.416 123.875 329.425 123.904 329.434 cv
123.912 329.496 123.921 329.56 123.933 329.625 cv
123.895 329.551 123.857 329.478 123.817 329.407 cv
cp
119.905 329.422 mo
119.919 329.418 li
119.924 329.435 119.93 329.452 119.935 329.47 cv
119.925 329.454 119.915 329.439 119.905 329.422 cv
cp
119.638 329.019 mo
119.757 329.031 li
119.775 329.074 119.795 329.118 119.818 329.163 cv
119.853 329.229 119.882 329.305 119.908 329.385 cv
119.88 329.383 li
119.797 329.254 119.716 329.131 119.638 329.019 cv
cp
117.034 328.77 mo
117.05 328.771 117.065 328.772 117.081 328.774 cv
117.084 328.789 117.086 328.804 117.089 328.818 cv
117.091 328.825 117.092 328.832 117.093 328.839 cv
117.073 328.815 117.054 328.792 117.034 328.77 cv
cp
110.803 323.766 mo
110.777 323.818 110.752 323.871 110.729 323.924 cv
110.655 323.959 110.581 323.996 110.505 324.033 cv
110.541 323.948 110.576 323.864 110.609 323.781 cv
110.814 323.74 li
110.81 323.749 110.807 323.757 110.803 323.766 cv
cp
109.777 313.699 mo
109.521 313.633 li
109.524 313.605 109.526 313.577 109.528 313.55 cv
109.805 313.69 li
109.777 313.699 li
cp
108.397 321.039 mo
108.393 321.032 li
108.401 321.039 li
108.397 321.039 li
cp
103.866 338.571 mo
103.379 338.61 li
103.862 338.47 li
103.861 338.429 103.858 338.375 103.862 338.264 cv
103.858 338.15 103.868 338.008 103.879 337.843 cv
103.914 339.162 li
103.866 338.571 li
cp
101.451 328.706 mo
101.438 328.662 li
101.441 328.664 101.444 328.665 101.447 328.667 cv
101.452 328.706 li
101.451 328.706 li
cp
97.895 336.271 mo
97.9297 336.239 97.9648 336.206 97.9995 336.174 cv
98.0161 336.358 98.0396 336.552 98.0762 336.744 cv
98.0234 336.571 97.9585 336.413 97.895 336.271 cv
cp
95.8545 322.294 mo
95.8374 322.297 95.8198 322.301 95.8027 322.304 cv
95.8076 322.3 95.8125 322.295 95.8174 322.29 cv
95.9126 322.209 95.9937 322.118 96.0894 322 cv
96.0923 321.996 96.0952 321.992 96.0986 321.988 cv
96.1963 322.059 96.2935 322.13 96.3901 322.202 cv
96.2124 322.224 96.0327 322.252 95.8545 322.294 cv
cp
95.3945 339.93 mo
95.2993 339.677 li
95.2554 339.552 95.2041 339.436 95.1514 339.329 cv
95.2344 339.218 95.3184 339.107 95.4038 338.997 cv
95.4126 339.07 95.4204 339.146 95.4287 339.222 cv
95.4565 339.478 95.4868 339.749 95.5361 340.008 cv
95.5732 340.258 95.626 340.513 95.6851 340.767 cv
95.5986 340.467 95.4927 340.188 95.3945 339.93 cv
cp
93.6626 320.877 mo
93.415 320.95 93.1597 321.041 92.897 321.137 cv
93.0161 321.055 93.1289 320.975 93.2524 320.92 cv
93.3418 320.879 93.4272 320.825 93.4766 320.791 cv
93.5562 320.749 93.6328 320.701 93.7051 320.652 cv
93.8501 320.565 li
93.9492 320.62 94.0474 320.675 94.1445 320.73 cv
93.9805 320.776 93.812 320.824 93.6626 320.877 cv
cp
93.5317 343.469 mo
93.5298 343.466 li
93.5444 343.463 li
93.5317 343.469 li
cp
89.8521 337.655 mo
89.7354 337.708 89.6216 337.761 89.5098 337.814 cv
89.3032 337.909 89.1045 338.009 88.9141 338.108 cv
89.002 338.002 89.0913 337.888 89.168 337.764 cv
89.1704 337.76 li
89.1812 337.757 89.1914 337.754 89.2007 337.751 cv
89.271 337.733 89.3486 337.719 89.4268 337.704 cv
89.5903 337.673 li
89.6777 337.656 89.769 337.639 89.8647 337.622 cv
89.8521 337.655 li
cp
88.5723 339.96 mo
88.4048 340.04 88.2368 340.105 88.0742 340.169 cv
87.8315 340.266 li
87.5903 340.362 87.3613 340.453 87.1479 340.533 cv
86.9067 340.624 86.689 340.712 86.4995 340.788 cv
86.1157 340.939 li
86.3579 340.65 li
86.9644 340.427 li
86.9692 340.426 87.1187 340.371 87.3994 340.279 cv
87.5513 340.223 87.7441 340.161 87.9673 340.091 cv
88.5254 339.911 li
88.6846 339.856 88.855 339.805 89.0332 339.752 cv
88.5723 339.96 li
cp
86.7437 322.93 mo
86.3403 322.893 li
86.4556 322.855 86.5747 322.815 86.6982 322.773 cv
86.9624 322.685 li
87.0288 322.662 87.0967 322.64 87.1646 322.616 cv
86.7437 322.93 li
cp
88.8828 323.127 mo
89.1816 323.008 li
89.2158 323.042 li
88.8926 323.305 li
88.7988 323.275 88.7085 323.249 88.6216 323.225 cv
88.7065 323.196 88.7935 323.164 88.8828 323.127 cv
cp
89.5288 318.684 mo
89.6606 318.728 li
89.5449 318.777 89.4307 318.83 89.3218 318.888 cv
89.3149 318.892 89.3076 318.895 89.3008 318.897 cv
89.3809 318.83 89.4551 318.76 89.5288 318.684 cv
cp
85.457 340.228 mo
85.4736 340.175 85.4897 340.121 85.5049 340.066 cv
85.5054 340.196 li
85.457 340.228 li
cp
86.1392 323.381 mo
86.1226 323.375 86.1064 323.37 86.0908 323.365 cv
85.8228 323.282 li
85.6846 323.238 85.5518 323.203 85.4272 323.174 cv
85.4863 323.153 85.5527 323.132 85.6255 323.109 cv
86.1421 323.378 li
86.1392 323.381 li
cp
84.7573 322.253 mo
84.6035 322.394 84.5093 322.47 84.502 322.476 cv
83.9653 322.905 li
82.9268 322.732 li
82.9854 322.708 83.0718 322.673 83.1875 322.629 cv
83.2915 322.581 83.4224 322.53 83.5601 322.478 cv
83.75 322.415 83.9517 322.324 84.165 322.213 cv
84.3071 322.139 84.4624 322.064 84.6255 321.985 cv
84.8926 321.856 85.1782 321.718 85.4526 321.563 cv
85.5024 321.536 85.5522 321.509 85.6025 321.48 cv
85.5649 321.513 85.5293 321.545 85.4951 321.576 cv
85.3467 321.707 85.2139 321.833 85.0947 321.946 cv
84.9756 322.06 84.873 322.159 84.7573 322.253 cv
cp
83.1455 323.56 mo
83.1147 323.559 83.085 323.556 83.0547 323.553 cv
82.7861 323.525 li
82.665 323.512 82.5493 323.507 82.4404 323.507 cv
82.3164 323.507 82.2017 323.514 82.1006 323.52 cv
81.8555 323.537 li
81.8125 323.548 81.7813 323.548 81.6934 323.546 cv
81.1953 323.529 li
82.5933 322.884 li
83.3647 323.386 li
83.1455 323.56 li
cp
81.6538 324.42 mo
81.6138 324.411 81.5742 324.403 81.5352 324.396 cv
81.6699 324.188 li
81.6538 324.42 li
cp
143.78 316.218 mo
143.776 316.219 143.642 316.256 143.406 316.313 cv
143.388 316.317 li
143.193 316.373 142.924 316.431 142.605 316.5 cv
142.378 316.55 li
142.147 316.606 141.893 316.658 141.623 316.714 cv
141.403 316.759 141.174 316.806 140.948 316.856 cv
140.723 316.903 140.494 316.956 140.261 317.011 cv
140.288 316.992 140.314 316.974 140.341 316.955 cv
140.375 316.931 140.41 316.913 140.457 316.888 cv
140.71 316.776 li
140.679 316.599 li
140.693 316.438 li
140.833 316.742 li
143.63 315.999 li
140.661 315.752 li
140.541 315.74 li
140.5 315.738 140.456 315.739 140.309 315.742 cv
139.942 315.777 139.587 315.86 139.264 315.983 cv
138.917 316.106 li
138.817 316.142 138.714 316.179 138.631 316.219 cv
138.409 316.317 138.182 316.43 137.965 316.555 cv
137.798 316.646 137.631 316.745 137.465 316.848 cv
137.74 316.522 li
137.863 316.377 137.936 316.295 137.939 316.291 cv
140.234 313.734 li
137.306 315.531 li
137.301 315.533 137.207 315.591 137.022 315.696 cv
136.972 315.728 136.913 315.76 136.848 315.796 cv
136.293 316.101 li
136.159 316.178 136.011 316.258 135.856 316.341 cv
135.659 316.447 135.45 316.56 135.25 316.677 cv
134.925 316.855 134.605 317.073 134.283 317.293 cv
133.838 317.613 li
133.56 317.824 133.273 318.041 133.018 318.282 cv
133.081 318.181 133.141 318.08 133.198 317.982 cv
133.28 317.848 133.357 317.714 133.432 317.584 cv
133.571 317.342 133.7 317.115 133.845 316.922 cv
134.003 316.704 134.203 316.439 134.37 316.294 cv
137.538 313.913 li
133.977 315.302 li
133.693 315.429 li
133.515 315.521 133.255 315.656 132.973 315.854 cv
131.614 316.524 li
132.81 315.775 li
129.018 316.962 li
128.968 316.978 128.894 316.999 128.797 317.022 cv
128.695 317.056 li
128.626 317.078 128.55 317.103 128.467 317.133 cv
126.242 317.711 li
126.186 317.729 126.121 317.747 126.047 317.768 cv
125.86 317.818 125.635 317.881 125.413 317.976 cv
125.318 318.011 125.221 318.052 125.119 318.094 cv
124.857 318.201 li
124.66 318.287 124.45 318.381 124.246 318.486 cv
124.092 318.564 123.934 318.646 123.78 318.735 cv
125.189 317.219 li
122.981 318.185 li
122.363 318.471 li
122.215 318.538 122.054 318.622 121.893 318.723 cv
121.585 318.909 li
120.522 319.219 li
120.443 319.238 120.355 319.266 120.255 319.298 cv
119.682 319.502 li
119.58 319.543 119.475 319.59 119.366 319.64 cv
119.167 319.729 li
119.081 319.765 119.003 319.809 118.923 319.854 cv
119.175 320.287 li
118.773 319.941 li
118.689 319.99 118.602 320.041 118.542 320.085 cv
118.349 320.213 118.152 320.353 117.981 320.494 cv
117.887 320.565 117.797 320.642 117.703 320.728 cv
118.103 319.534 li
119.411 317.068 li
116.938 319.801 li
114.69 320.372 li
114.635 320.387 114.564 320.405 114.485 320.432 cv
114.402 320.458 114.307 320.495 114.198 320.538 cv
113.873 320.678 li
113.789 320.72 113.706 320.769 113.606 320.83 cv
113.498 320.901 li
113.233 321.073 112.904 321.287 112.605 321.551 cv
112.306 321.804 112.021 322.101 111.743 322.393 cv
111.39 322.796 li
111.304 322.901 111.227 323.015 111.155 323.125 cv
111.087 323.229 111.024 323.334 110.967 323.439 cv
110.76 323.397 li
110.809 323.27 110.857 323.148 110.908 323.031 cv
110.984 322.852 111.047 322.685 111.103 322.536 cv
111.151 322.411 111.192 322.302 111.241 322.189 cv
112.29 319.438 li
111.271 320.546 li
111.377 320.279 111.462 320.011 111.543 319.736 cv
111.621 319.367 111.655 319.061 111.674 318.817 cv
111.677 318.607 111.675 318.492 111.675 318.492 cv
111.58 316.31 li
111.128 317.351 li
111.129 317.35 111.129 317.348 111.129 317.347 cv
111.176 317.118 li
111.227 316.88 111.247 316.66 111.262 316.481 cv
111.38 313.916 li
110.56 315.356 li
110.573 315.149 110.564 314.947 110.556 314.762 cv
110.548 314.543 li
110.545 314.298 110.498 314.088 110.463 313.934 cv
110.108 311.564 li
109.539 313.159 li
109.538 313.115 109.536 313.072 109.533 313.031 cv
109.527 312.833 109.499 312.643 109.473 312.468 cv
109.46 312.387 109.448 312.31 109.44 312.231 cv
109.419 312.053 109.377 311.893 109.341 311.762 cv
109.301 311.607 li
109.272 311.516 109.259 311.46 109.257 311.452 cv
109.118 310.791 li
109.115 310.421 109.096 310.118 109.06 309.845 cv
109.033 309.662 108.991 309.487 108.951 309.321 cv
108.922 309.199 108.893 309.083 108.876 308.959 cv
108.833 308.727 li
108.81 308.603 108.787 308.497 108.78 308.358 cv
108.585 306.264 li
107.803 307.987 li
107.803 307.987 107.763 308.076 107.687 308.281 cv
107.674 308.327 107.656 308.379 107.635 308.439 cv
107.592 308.211 107.545 307.99 107.487 307.788 cv
107.435 307.572 107.359 307.37 107.289 307.185 cv
107.257 307.099 107.226 307.018 107.199 306.935 cv
107.148 306.785 107.091 306.651 107.042 306.536 cv
107.015 306.473 106.991 306.417 106.959 306.33 cv
106.016 303.918 li
105.913 306.3 li
105.896 306.547 li
105.895 306.608 105.887 306.686 105.877 306.775 cv
105.877 306.782 105.876 306.79 105.875 306.797 cv
105.86 306.751 105.845 306.706 105.83 306.665 cv
105.798 306.565 105.761 306.468 105.726 306.374 cv
105.688 306.275 105.651 306.183 105.623 306.068 cv
105.559 305.869 li
105.537 305.804 105.514 305.746 105.494 305.638 cv
105.149 303.952 li
104.512 305.388 li
104.342 305.8 li
104.312 305.87 104.282 305.946 104.259 306.022 cv
104.234 305.965 104.207 305.907 104.177 305.851 cv
104.098 305.686 104.004 305.522 103.892 305.353 cv
103.812 305.238 103.724 305.128 103.636 305.017 cv
103.543 304.901 li
103.305 304.643 103.067 304.388 102.841 304.178 cv
102.739 304.074 102.627 303.98 102.462 303.842 cv
102.362 303.758 102.269 303.677 102.181 303.588 cv
101.936 303.346 li
101.879 303.287 101.828 303.236 101.76 303.161 cv
99.9893 301.405 li
100.775 303.528 li
100.946 303.96 li
100.99 304.064 101.042 304.185 101.102 304.336 cv
101.148 304.443 101.194 304.564 101.246 304.71 cv
101.298 304.86 101.354 305.017 101.418 305.15 cv
101.49 305.32 101.571 305.492 101.655 305.664 cv
101.397 305.613 101.149 305.568 100.918 305.534 cv
100.566 305.48 li
100.391 305.455 100.227 305.433 100.053 305.389 cv
99.8638 305.341 99.668 305.29 99.5596 305.236 cv
99.4688 305.195 99.4136 305.164 99.4048 305.159 cv
97.4146 303.954 li
98.793 305.954 li
98.8213 305.996 98.8569 306.047 98.9033 306.103 cv
98.9863 306.192 li
99.1069 306.323 99.269 306.495 99.4863 306.655 cv
99.5791 306.723 99.6748 306.791 99.7739 306.859 cv
100.272 307.663 li
100.336 307.753 100.418 307.856 100.539 308.005 cv
100.582 308.059 100.628 308.116 100.692 308.185 cv
100.754 308.248 100.822 308.314 100.959 308.435 cv
101.173 308.627 101.433 308.859 101.725 309.069 cv
100.575 308.651 li
100.354 308.37 li
100.456 308.608 li
99.5518 308.279 li
100.54 309.079 li
100.988 309.85 li
101.929 312.044 li
101.957 312.112 101.993 312.198 102.042 312.294 cv
102.105 312.415 102.186 312.559 102.287 312.736 cv
102.356 312.855 li
102.44 313.002 102.533 313.16 102.645 313.304 cv
102.759 313.454 li
103.01 313.787 103.295 314.164 103.607 314.525 cv
103.735 314.679 103.867 314.831 104 314.984 cv
104.17 315.181 104.341 315.376 104.507 315.584 cv
104.374 315.466 li
104.176 315.294 103.982 315.15 103.809 315.025 cv
103.393 314.711 li
103.194 314.569 103.087 314.478 103.077 314.47 cv
102.354 315.153 li
102.362 315.164 102.448 315.276 102.589 315.5 cv
102.696 315.652 102.814 315.866 102.954 316.116 cv
103.174 316.504 li
103.267 316.644 103.353 316.802 103.444 316.967 cv
103.534 317.129 li
103.663 317.376 103.8 317.634 103.94 317.89 cv
104.373 318.701 li
104.41 318.767 104.446 318.833 104.481 318.898 cv
104.304 318.702 104.135 318.525 103.985 318.371 cv
103.626 318.006 103.287 317.747 102.98 317.514 cv
99.5874 314.862 li
101.981 318.022 li
102.022 318.077 102.083 318.157 102.152 318.267 cv
102.273 318.458 102.408 318.73 102.568 319.05 cv
102.754 319.424 li
102.842 319.604 102.935 319.796 103.025 320.002 cv
103.1 320.171 li
102.981 320.015 102.88 319.872 102.789 319.742 cv
99.8755 315.894 li
101.657 319.951 li
100.327 318.968 li
100.197 318.759 li
100.086 318.586 99.9893 318.435 99.9058 318.284 cv
99.7495 318.032 99.6655 317.884 99.6626 317.879 cv
97.6074 314.23 li
98.5806 317.676 li
98.5244 317.634 li
98.7461 318.26 li
98.7476 318.266 98.793 318.427 98.8647 318.727 cv
98.9063 318.88 98.9575 319.066 99.0205 319.274 cv
99.0229 319.282 99.0254 319.29 99.0273 319.298 cv
98.9702 319.209 98.9111 319.117 98.8467 319.022 cv
98.7051 318.823 li
98.3408 318.311 97.9648 317.783 97.5737 317.31 cv
97.127 316.755 96.6504 316.273 96.2651 315.885 cv
95.7822 315.404 95.3223 315.111 95.0664 314.967 cv
94.9126 314.89 94.7827 314.843 94.6196 314.786 cv
93.6714 314.539 li
93.876 315.357 li
93.9585 315.617 li
94.1992 315.711 li
94.2295 315.723 94.3096 315.754 94.4478 315.894 cv
94.6592 316.07 94.9341 316.479 95.126 316.778 cv
95.3027 317.045 95.4736 317.374 95.6509 317.728 cv
95.3667 317.465 95.0786 317.206 94.793 316.966 cv
94.2549 316.508 93.7222 316.109 93.2715 315.774 cv
93.0244 315.586 92.791 315.423 92.5874 315.28 cv
92.4287 315.17 92.2896 315.073 92.1616 314.975 cv
88.8076 312.581 li
91.3467 315.749 li
90.8247 315.353 90.2881 314.952 89.75 314.611 cv
89.2397 314.278 88.6782 313.971 87.9761 313.638 cv
87.4238 313.387 86.9326 313.245 86.5967 313.148 cv
86.479 313.114 86.3745 313.094 86.2886 313.077 cv
86.2793 313.123 li
82.4268 312.255 li
85.7197 313.96 li
85.9224 314.065 li
85.9771 314.094 86.0444 314.128 86.1616 314.203 cv
86.1992 314.224 86.2393 314.247 86.2817 314.274 cv
86.207 314.237 li
86.043 314.161 85.8779 314.088 85.6709 313.998 cv
84.8613 313.634 li
84.3516 313.384 83.7598 313.139 83.1128 312.909 cv
82.7959 312.788 82.4854 312.737 82.2632 312.709 cv
82.1763 312.695 82.0903 312.689 82.0093 312.684 cv
81.8848 312.674 li
81.8022 312.671 81.7222 312.671 81.5942 312.672 cv
81.4453 312.688 li
81.2832 312.71 81.1597 312.731 81.1089 312.75 cv
80.0137 313.026 li
79.939 313.001 79.8657 312.977 79.793 312.953 cv
79.4609 312.843 79.1318 312.754 78.8042 312.678 cv
78.4946 312.613 78.2012 312.56 77.9307 312.511 cv
77.4536 312.426 77.0386 312.405 76.7354 312.391 cv
76.5552 312.382 li
76.2319 312.377 76.0537 312.383 76.0537 312.383 cv
72.9219 312.454 li
75.9209 313.361 li
76.1309 313.426 li
76.188 313.442 76.2578 313.463 76.3809 313.51 cv
76.6162 313.579 76.9658 313.748 77.4521 313.983 cv
77.4761 313.994 77.5 314.006 77.5244 314.018 cv
77.0195 313.869 76.4946 313.726 75.9883 313.62 cv
75.4097 313.493 74.8696 313.426 74.3184 313.356 cv
74.0156 313.322 73.7397 313.316 73.5049 313.311 cv
73.3701 313.309 73.2505 313.307 73.1201 313.295 cv
72.8701 313.287 72.7261 313.274 72.7178 313.273 cv
72.5356 314.253 li
72.667 314.289 li
72.728 314.306 72.8125 314.328 72.9521 314.377 cv
73.0977 314.418 73.2739 314.494 73.479 314.581 cv
73.3057 314.561 73.1333 314.547 72.9634 314.54 cv
72.4756 314.515 71.9976 314.529 71.6343 314.516 cv
71.4893 314.506 71.3501 314.514 71.2202 314.521 cv
71.0669 314.528 li
70.918 314.528 70.7886 314.528 70.6616 314.523 cv
67.2363 314.523 li
70.5039 315.616 li
70.604 315.646 70.7251 315.685 70.8457 315.728 cv
71.3779 315.93 li
71.5674 315.988 71.7715 316.065 71.9873 316.146 cv
72.1851 316.222 72.3926 316.3 72.6001 316.369 cv
72.7925 316.439 72.9917 316.499 73.1948 316.557 cv
73.1025 316.566 73.0049 316.572 72.9033 316.579 cv
72.6377 316.597 72.3369 316.616 72.0698 316.686 cv
71.7212 316.747 71.4033 316.871 71.0957 316.991 cv
69.6626 317.612 li
69.0532 317.876 li
68.9497 317.917 68.8496 317.959 68.7344 317.983 cv
68.4961 318.043 li
68.314 318.09 68.1563 318.133 68.0083 318.15 cv
67.8501 318.176 67.7515 318.185 67.7417 318.185 cv
65.4985 318.364 li
67.6055 319.152 li
67.6128 319.155 67.7061 319.19 67.8726 319.263 cv
68.001 319.307 li
68.1963 319.369 68.4907 319.465 68.8433 319.503 cv
69.0142 319.521 69.1997 319.547 69.4258 319.577 cv
69.5605 319.59 li
69.7417 319.608 69.9292 319.62 70.0903 319.622 cv
70.5806 319.642 71.0669 319.588 71.5811 319.527 cv
71.7197 319.499 li
71.8408 319.475 71.9624 319.45 72.0835 319.424 cv
72.0171 319.477 71.9512 319.527 71.8843 319.574 cv
71.5078 319.864 li
71.4199 319.935 71.3423 319.998 71.23 320.068 cv
71.103 320.164 71.022 320.215 71.0117 320.222 cv
68.7603 321.6 li
71.3594 321.141 li
71.3701 321.139 71.4688 321.122 71.6704 321.102 cv
72.0503 321.037 li
72.2153 321.01 72.3989 320.971 72.5908 320.911 cv
72.9341 320.809 73.3613 320.681 73.7827 320.496 cv
74.0625 320.379 74.3374 320.241 74.6318 320.084 cv
74.5479 320.167 74.4644 320.246 74.3794 320.321 cv
74.2378 320.451 74.1104 320.576 73.959 320.724 cv
73.8535 320.83 73.7607 320.923 73.6538 321.013 cv
71.6426 322.943 li
73.8945 322.108 li
74.6948 321.799 li
74.8716 321.728 75.0693 321.645 75.2686 321.54 cv
75.5845 321.381 li
75.8965 321.227 76.2402 321.055 76.5771 320.855 cv
77.0474 320.587 77.5195 320.269 78.0098 319.935 cv
78.3828 319.654 li
78.3086 319.752 78.2368 319.845 78.1685 319.93 cv
78.0854 320.03 li
77.9136 320.241 77.7515 320.439 77.606 320.563 cv
77.5552 320.613 77.5103 320.652 77.4756 320.683 cv
75.2168 322.659 li
78.002 321.564 li
78.0625 321.541 78.1445 321.508 78.2612 321.453 cv
78.4741 321.351 li
78.6616 321.263 78.8892 321.155 79.123 321.019 cv
79.4712 320.821 79.874 320.582 80.2656 320.327 cv
80.5845 320.127 li
80.4429 320.269 80.3228 320.407 80.2188 320.529 cv
80.1558 320.603 80.1001 320.668 80.0073 320.769 cv
79.9697 320.818 79.9336 320.854 79.8789 320.913 cv
78.4355 322.536 li
80.478 321.747 li
80.519 321.731 80.5718 321.711 80.6987 321.673 cv
80.771 321.644 80.8589 321.616 80.958 321.584 cv
81.1504 321.521 81.3765 321.447 81.6133 321.343 cv
81.7593 321.276 81.9214 321.213 82.0913 321.146 cv
82.332 321.052 82.5879 320.95 82.8311 320.835 cv
83.123 320.706 83.4165 320.558 83.7114 320.402 cv
83.6738 320.443 83.6372 320.482 83.6006 320.522 cv
83.4604 320.675 83.3276 320.819 83.1973 320.945 cv
83.0234 321.114 82.8799 321.285 82.7549 321.435 cv
82.6753 321.532 82.6064 321.618 82.5078 321.713 cv
82.3691 321.867 82.2817 321.952 82.2744 321.959 cv
80.6606 323.511 li
79.1997 323.461 li
80.2241 323.931 li
80.1299 324.021 li
80.2754 323.954 li
81.082 324.324 li
81.0259 324.317 80.9717 324.313 80.9189 324.31 cv
80.6929 324.286 80.4819 324.286 80.2705 324.285 cv
80.1704 324.285 80.0801 324.284 79.9888 324.281 cv
79.7905 324.274 79.6069 324.293 79.4565 324.309 cv
79.2744 324.324 li
79.1548 324.341 79.084 324.345 79.0737 324.346 cv
78.2798 324.386 li
77.834 324.331 77.4868 324.305 77.1665 324.301 cv
76.9531 324.307 76.7466 324.314 76.5522 324.329 cv
76.4019 324.34 76.2524 324.347 76.1177 324.35 cv
75.834 324.356 li
75.6802 324.362 75.5479 324.368 75.4009 324.354 cv
72.981 324.264 li
74.8804 325.284 li
74.8804 325.284 74.978 325.337 75.1934 325.436 cv
75.2432 325.455 75.2998 325.479 75.3633 325.508 cv
75.1045 325.516 74.8525 325.529 74.6191 325.556 cv
74.3687 325.575 74.1309 325.618 73.9116 325.659 cv
73.8062 325.679 73.7056 325.697 73.6055 325.712 cv
73.4287 325.739 73.2695 325.775 73.1333 325.806 cv
73.0527 325.824 72.9819 325.841 72.8843 325.857 cv
72.7417 325.892 72.6577 325.908 72.6514 325.909 cv
69.8696 326.439 li
72.6646 326.894 li
72.6704 326.895 72.7583 326.909 72.9414 326.946 cv
73.0176 326.957 73.1108 326.978 73.2178 327.002 cv
73.2383 327.006 73.2588 327.011 73.2803 327.015 cv
73.2358 327.021 73.1929 327.029 73.1514 327.036 cv
73.0342 327.052 72.9185 327.073 72.8071 327.095 cv
72.6831 327.118 72.5649 327.142 72.4282 327.151 cv
72.2002 327.185 li
72.1069 327.199 72.0259 327.215 71.9116 327.216 cv
69.8818 327.326 li
71.5176 328.174 li
71.9731 328.4 li
72.0483 328.439 72.1309 328.479 72.2139 328.511 cv
72.1592 328.524 72.105 328.539 72.0503 328.556 cv
71.855 328.608 71.6587 328.676 71.4551 328.76 cv
71.314 328.822 71.1777 328.892 71.041 328.962 cv
70.8994 329.035 li
70.5728 329.234 70.2515 329.432 69.9839 329.625 cv
69.8511 329.713 69.7295 329.81 69.5566 329.95 cv
69.4473 330.038 69.3428 330.119 69.2344 330.191 cv
68.9072 330.41 li
68.8379 330.455 68.7769 330.496 68.6899 330.547 cv
66.5518 332.017 li
68.8516 331.595 li
69.3687 331.49 li
69.4946 331.462 69.6416 331.428 69.8203 331.392 cv
69.9546 331.361 70.1035 331.335 70.2559 331.308 cv
70.4395 331.278 70.6318 331.246 70.8047 331.201 cv
71.0713 331.142 71.3423 331.066 71.6138 330.991 cv
71.5195 331.263 71.4346 331.525 71.3672 331.769 cv
71.3306 331.887 71.2983 332.003 71.2676 332.116 cv
71.2217 332.283 71.1797 332.44 71.1182 332.591 cv
71.0459 332.765 70.9639 332.962 70.8911 333.06 cv
70.8359 333.143 70.7939 333.192 70.7871 333.2 cv
68.8911 335.31 li
71.457 333.947 li
71.5078 333.926 71.5728 333.897 71.644 333.858 cv
71.75 333.794 li
71.8989 333.703 72.1235 333.566 72.3433 333.364 cv
72.4155 333.297 72.4888 333.228 72.5615 333.156 cv
73.6104 332.728 li
73.7192 332.679 73.8467 332.614 74.0317 332.517 cv
74.0967 332.482 74.165 332.446 74.2544 332.393 cv
74.334 332.34 74.4155 332.284 74.4966 332.222 cv
74.5771 332.162 li
74.853 331.953 75.1973 331.694 75.4985 331.393 cv
75.6128 331.282 75.7236 331.167 75.8315 331.05 cv
74.9917 332.59 li
74.7129 332.732 li
74.9434 332.678 li
74.6392 333.236 li
75.3359 332.647 li
75.9307 332.443 li
78.9165 331.734 li
78.9976 331.717 79.0986 331.695 79.21 331.661 cv
79.3564 331.617 79.5313 331.559 79.7456 331.486 cv
79.8936 331.435 li
80.0693 331.375 80.2612 331.308 80.4375 331.218 cv
80.6006 331.139 li
81.019 330.938 81.4961 330.707 81.9585 330.445 cv
82.1489 330.343 82.3398 330.234 82.5313 330.125 cv
82.8657 329.935 83.2007 329.744 83.5664 329.569 cv
83.6489 329.523 83.7324 329.48 83.8174 329.439 cv
83.7803 329.468 83.7432 329.495 83.707 329.523 cv
83.3325 329.805 li
83.1133 329.977 82.9258 330.147 82.7622 330.301 cv
82.6597 330.397 82.5645 330.481 82.4795 330.557 cv
82.355 330.668 li
82.1675 330.846 82.0488 330.939 82.0391 330.947 cv
82.5708 331.789 li
82.582 331.783 82.7246 331.713 83.002 331.605 cv
83.1919 331.521 83.4561 331.435 83.7642 331.333 cv
84.2354 331.173 li
84.4111 331.101 84.6084 331.037 84.814 330.971 cv
85.0117 330.906 li
85.312 330.815 85.625 330.719 85.9429 330.617 cv
86.9004 330.318 li
84.9595 331.335 li
85.7793 331.335 li
85.7148 331.392 85.6523 331.447 85.5908 331.502 cv
85.5015 331.579 li
85.417 331.651 85.3486 331.71 85.3154 331.742 cv
84.2617 332.672 li
84.0601 332.755 83.8848 332.836 83.7251 332.921 cv
83.562 333.008 83.4111 333.107 83.269 333.201 cv
83.1641 333.271 83.0659 333.337 82.9556 333.396 cv
82.748 333.517 li
82.6401 333.581 82.5488 333.639 82.4258 333.69 cv
80.6245 334.589 li
82.4053 334.735 li
82.4053 334.735 82.5039 334.744 82.7275 334.744 cv
82.7734 334.74 82.8281 334.739 82.8896 334.739 cv
82.6909 334.857 82.499 334.978 82.3281 335.1 cv
82.1445 335.223 81.9805 335.362 81.8296 335.492 cv
81.7603 335.552 81.6943 335.609 81.6255 335.663 cv
81.502 335.762 81.3955 335.861 81.3042 335.946 cv
81.2539 335.994 81.2095 336.036 81.1392 336.095 cv
79.188 337.816 li
81.4692 337.089 li
81.7046 337.021 li
81.7627 337 81.8374 336.981 81.9229 336.96 cv
81.9316 336.958 81.9399 336.956 81.9487 336.953 cv
81.9102 336.984 81.8735 337.014 81.8398 337.042 cv
81.7573 337.105 81.6782 337.173 81.6025 337.238 cv
81.5225 337.308 81.4478 337.374 81.3491 337.439 cv
81.1821 337.569 li
81.1284 337.613 81.083 337.653 80.9912 337.707 cv
79.5278 338.625 li
81.0942 338.718 li
81.5254 338.735 li
81.6025 338.74 81.689 338.742 81.7725 338.737 cv
81.7261 338.781 81.6807 338.826 81.6372 338.874 cv
81.5112 339.005 81.3896 339.147 81.2695 339.31 cv
81.1885 339.425 81.1143 339.546 81.04 339.666 cv
80.9644 339.792 li
80.8013 340.105 80.6426 340.416 80.5225 340.701 cv
80.4595 340.835 80.4087 340.974 80.3374 341.17 cv
80.2925 341.293 80.248 341.408 80.1943 341.523 cv
80.0356 341.865 li
80.0059 341.928 79.979 341.984 79.9375 342.063 cv
78.8784 344.328 li
80.6162 342.865 li
80.9683 342.554 li
81.0498 342.478 81.145 342.388 81.2656 342.28 cv
81.3511 342.199 81.4497 342.116 81.5688 342.018 cv
81.6914 341.917 81.8193 341.811 81.9229 341.706 cv
82.0581 341.58 82.1919 341.445 82.3247 341.308 cv
82.3647 341.567 82.4072 341.816 82.4546 342.045 cv
82.5249 342.397 li
82.561 342.569 82.5957 342.731 82.6133 342.902 cv
82.6328 343.1 82.6523 343.303 82.6382 343.424 cv
82.6318 343.522 82.6206 343.585 82.6187 343.595 cv
82.1567 345.906 li
83.5767 343.897 li
83.6055 343.856 83.6421 343.804 83.6787 343.74 cv
83.73 343.642 li
83.812 343.482 83.9204 343.271 83.9976 343.007 cv
84.0269 342.906 84.0571 342.799 84.0859 342.688 cv
84.6768 341.923 li
84.7383 341.834 84.8081 341.723 84.897 341.574 cv
84.9351 341.511 84.9751 341.442 85.022 341.353 cv
85.0532 341.288 85.0845 341.22 85.1323 341.102 cv
85.5093 340.963 li
85.5103 341.281 li
85.27 341.666 li
85.5112 341.438 li
85.5156 342.363 li
85.8188 341.478 li
85.9902 342.057 li
86.6719 341.912 li
86.9111 341.858 87.2046 341.792 87.5313 341.699 cv
88.415 341.448 li
88.3652 341.579 li
88.4561 341.435 li
88.5581 341.406 li
88.7119 341.359 88.8696 341.311 89.0415 341.271 cv
89.2354 341.222 89.4331 341.17 89.6333 341.116 cv
89.2568 341.316 li
88.8223 341.555 88.3911 341.792 88.0024 342.037 cv
87.707 342.218 87.4316 342.406 87.1758 342.58 cv
87.0303 342.68 86.8911 342.775 86.7568 342.862 cv
86.5093 343.025 86.2974 343.185 86.1201 343.318 cv
85.8701 343.504 li
85.6841 343.653 85.5742 343.735 85.5698 343.738 cv
82.6538 345.906 li
86.0474 344.606 li
86.0527 344.604 86.1797 344.556 86.4302 344.471 cv
86.5239 344.433 86.6377 344.394 86.7661 344.349 cv
86.9556 344.281 87.1743 344.204 87.4141 344.107 cv
87.5537 344.05 87.7041 343.992 87.8618 343.934 cv
87.6641 344.087 87.4644 344.252 87.2617 344.43 cv
87.0781 344.588 86.9077 344.747 86.7466 344.897 cv
86.5908 345.044 86.4443 345.181 86.29 345.31 cv
86.0796 345.498 li
85.9087 345.652 85.7642 345.786 85.6128 345.891 cv
85.5396 345.948 85.4805 345.991 85.3867 346.053 cv
82.5234 347.734 li
85.8911 346.938 li
85.9521 346.924 86.0298 346.905 86.1445 346.871 cv
86.3066 346.816 li
86.4482 346.771 86.6138 346.717 86.7979 346.645 cv
86.7764 346.675 86.7554 346.704 86.7344 346.734 cv
86.5659 346.973 86.4131 347.207 86.271 347.426 cv
86.1714 347.579 86.0771 347.725 85.9839 347.86 cv
85.8457 348.064 85.7319 348.255 85.6353 348.419 cv
85.5786 348.515 85.5283 348.601 85.4658 348.697 cv
83.6616 351.756 li
86.0522 349.631 li
86.0552 349.628 86.1484 349.545 86.3364 349.387 cv
86.4077 349.319 86.498 349.243 86.6011 349.156 cv
86.7334 349.044 86.8838 348.916 87.0435 348.769 cv
87.2207 348.603 87.4272 348.429 87.6479 348.247 cv
87.3574 348.622 87.0293 349.058 86.7627 349.505 cv
86.5298 349.897 86.3242 350.332 86.147 350.806 cv
86.1089 350.905 86.0732 351 86.04 351.113 cv
85.4761 354.985 li
86.7915 352.467 li
86.7935 352.463 86.8501 352.354 86.9619 352.156 cv
87.2188 351.746 li
86.9746 351.508 li
86.9878 351.45 li
87.3203 351.6 li
87.4292 351.445 li
87.5537 351.253 87.7437 351.039 87.9453 350.814 cv
88.2031 350.521 li
88.106 350.708 88.0117 350.9 87.9209 351.099 cv
87.8667 351.228 87.8154 351.357 87.77 351.484 cv
87.73 351.592 87.6968 351.69 87.6421 351.851 cv
87.5547 352.101 87.4854 352.353 87.4297 352.592 cv
87.3423 352.928 87.2817 353.256 87.2261 353.557 cv
87.1626 353.895 li
87.1201 354.103 87.0977 354.297 87.0796 354.518 cv
87.0679 354.645 87.0581 354.756 87.0435 354.874 cv
86.7202 358.504 li
88.0093 355.365 li
88.0293 355.316 88.0591 355.245 88.1147 355.128 cv
88.1504 355.038 88.2036 354.934 88.2632 354.818 cv
88.5088 354.332 li
88.5293 354.287 88.5513 354.241 88.5742 354.195 cv
88.6162 354.745 88.6636 355.22 88.7349 355.668 cv
88.769 355.931 88.8276 356.183 88.8843 356.424 cv
89.0854 357.25 li
89.168 357.557 89.2554 357.825 89.3281 358.047 cv
89.5474 358.707 li
90.519 358.483 li
90.5171 358.471 90.4995 358.343 90.4873 358.098 cv
90.4639 357.875 90.4731 357.559 90.4814 357.185 cv
90.4839 357.068 li
90.4834 356.856 90.4927 356.627 90.5083 356.381 cv
90.5259 356.131 li
90.5396 355.945 90.5537 355.755 90.5552 355.576 cv
90.5581 355.51 90.5605 355.443 90.563 355.376 cv
90.6074 355.451 90.6509 355.521 90.6919 355.589 cv
90.7651 355.71 li
90.9414 356.001 91.1357 356.219 91.2778 356.377 cv
91.3682 356.478 li
91.4219 356.537 91.4717 356.585 91.5488 356.658 cv
93.5435 358.545 li
92.3667 356.042 li
92.3525 356.011 92.333 355.972 92.292 355.858 cv
92.2456 355.762 92.2158 355.624 92.1763 355.467 cv
92.1499 355.361 92.1216 355.249 92.0884 355.133 cv
92.0366 354.951 92.0015 354.746 91.9629 354.529 cv
91.9341 354.363 91.9033 354.191 91.8672 354.024 cv
91.6025 352.692 li
91.4961 352.23 91.373 351.76 91.2393 351.353 cv
91.1719 351.127 91.0938 350.912 91.02 350.709 cv
90.9702 350.572 90.9224 350.442 90.8818 350.315 cv
90.9316 350.446 90.9824 350.577 91.0332 350.709 cv
91.248 351.237 li
91.4321 351.672 91.6138 352.102 91.7983 352.499 cv
91.8984 352.722 92.002 352.936 92.1011 353.141 cv
92.2173 353.382 92.3271 353.608 92.4185 353.824 cv
92.5054 354.024 92.5923 354.208 92.6694 354.37 cv
92.7407 354.521 92.8032 354.651 92.8477 354.762 cv
93.0107 355.115 li
93.9624 354.784 li
93.894 354.195 li
93.8657 353.97 93.8311 353.697 93.7695 353.396 cv
93.6855 352.971 li
93.623 352.644 93.5547 352.287 93.4639 351.926 cv
93.4316 351.791 93.3965 351.655 93.3589 351.519 cv
93.4053 351.573 li
93.4253 351.556 li
93.4277 351.561 li
93.6328 351.481 li
93.501 351.689 li
95.5352 354.202 li
94.3145 351.086 li
94.3013 351.051 94.2827 351.006 94.2544 350.904 cv
94.2026 350.76 94.1563 350.555 94.1006 350.315 cv
94.0586 350.136 li
94.001 349.906 93.9658 349.642 93.9268 349.359 cv
93.8799 349.028 li
93.8521 348.811 93.8174 348.588 93.7783 348.358 cv
93.9292 348.564 94.0781 348.73 94.1987 348.864 cv
96.5161 351.176 li
95.2871 348.536 li
95.2715 348.504 95.2524 348.463 95.2173 348.375 cv
95.1592 348.252 95.1079 348.073 95.0449 347.866 cv
95.0029 347.728 li
97.3657 349.321 li
95.6548 346.948 li
95.5874 346.836 li
95.5264 346.737 95.4551 346.435 95.416 346.27 cv
95.3657 346.064 95.3486 345.786 95.3311 345.492 cv
95.3193 345.31 li
95.3174 345.273 95.3159 345.237 95.314 345.2 cv
95.3467 345.259 95.3784 345.316 95.4097 345.372 cv
95.46 345.463 95.5078 345.548 95.5654 345.639 cv
95.6992 345.84 li
95.7866 345.972 95.8657 346.083 95.9385 346.185 cv
98.0464 348.985 li
96.894 345.643 li
96.8584 345.559 96.8267 345.45 96.7891 345.321 cv
96.6421 344.836 li
96.5684 344.613 96.5107 344.356 96.4487 344.083 cv
96.2876 343.371 li
96.2124 343.028 96.1343 342.674 96.0601 342.3 cv
95.981 341.953 li
95.9604 341.86 95.9395 341.768 95.9185 341.676 cv
96.0459 342.098 96.2012 342.571 96.3945 343.011 cv
96.5923 343.48 96.8267 343.899 97.0234 344.242 cv
97.1826 344.538 97.3657 344.769 97.5 344.936 cv
97.626 345.098 li
97.7617 345.259 97.8354 345.353 97.8384 345.356 cv
100.139 348.284 li
98.6929 344.853 li
98.6909 344.849 98.6436 344.736 98.5498 344.497 cv
98.5239 344.445 98.4932 344.328 98.4585 344.196 cv
98.3555 343.849 li
98.377 343.879 98.3887 343.896 98.3906 343.899 cv
100.916 347.642 li
99.271 343.438 li
99.2676 343.429 99.2261 343.321 99.1602 343.112 cv
99.0039 342.475 li
98.9956 342.409 98.9863 342.343 98.9697 342.27 cv
98.9121 342.034 98.8887 341.733 98.8633 341.416 cv
98.7837 340.507 li
98.7568 340.22 98.7295 339.927 98.708 339.619 cv
98.6909 339.433 98.6641 339.248 98.6367 339.063 cv
98.6143 338.905 li
98.666 339.082 98.7173 339.254 98.7681 339.417 cv
98.9463 340 li
99.0005 340.18 99.0518 340.352 99.0889 340.487 cv
99.1646 340.82 99.2549 341.135 99.3174 341.322 cv
99.3555 341.448 99.3955 341.541 99.4688 341.692 cv
101.326 345.369 li
100.381 341.277 li
100.373 341.242 100.362 341.189 100.356 341.123 cv
100.364 341.027 li
100.362 341.012 li
100.374 340.899 li
100.401 340.751 100.423 340.582 100.43 340.389 cv
100.44 340.397 100.449 340.406 100.458 340.414 cv
103.491 342.88 li
101.284 339.829 li
101.255 339.701 li
101.235 339.619 101.242 339.411 101.248 339.228 cv
101.252 339.06 li
101.253 338.993 101.258 338.924 101.264 338.831 cv
101.279 338.594 li
100.78 338.56 li
101.229 338.492 li
101.26 338.553 101.291 338.61 101.322 338.664 cv
101.514 338.991 li
101.557 339.06 101.6 339.12 101.643 339.167 cv
101.843 339.064 li
101.703 339.255 li
103.748 342.154 li
102.56 338.731 li
102.55 338.701 102.534 338.656 102.513 338.553 cv
102.445 337.879 li
102.431 337.712 102.436 337.528 102.446 337.332 cv
102.449 337.349 102.452 337.366 102.456 337.383 cv
102.488 337.55 li
102.561 337.924 102.674 338.231 102.776 338.506 cv
103.949 341.203 li
104.005 346.714 li
104.001 352.421 li
104.004 353.745 103.991 355.107 103.978 356.501 cv
103.94 360.767 li
103.922 362.626 103.894 364.525 103.864 366.453 cv
103.644 378.564 li
103.179 397.076 li
102.307 424.118 li
102.206 426.82 101.399 445.861 101.399 445.861 cv
101.377 446.368 li
107.333 446.542 li
107.353 446.048 li
107.361 445.857 108.131 426.961 108.179 424.274 cv
108.346 413.047 li
108.625 378.977 li
108.607 366.5 li
108.599 364.559 108.59 362.645 108.572 360.77 cv
108.526 356.491 li
108.512 355.091 108.498 353.721 108.468 352.387 cv
108.395 348.505 li
108.021 336.916 li
108.335 337.326 108.627 337.752 108.912 338.167 cv
109.134 338.488 li
109.287 338.728 109.449 338.959 109.606 339.183 cv
109.845 339.521 110.07 339.842 110.231 340.158 cv
110.929 341.431 li
111.077 341.706 111.147 341.875 111.153 341.888 cv
112.828 345.939 li
112.108 341.614 li
112.106 341.602 112.078 341.422 112.054 341.087 cv
112.036 340.905 112.009 340.685 111.969 340.376 cv
111.938 340.125 111.902 339.844 111.833 339.551 cv
111.801 339.406 111.77 339.252 111.737 339.076 cv
111.624 338.569 li
111.584 338.381 111.541 338.186 111.488 338.008 cv
111.436 337.808 111.37 337.608 111.297 337.407 cv
111.279 337.36 111.262 337.314 111.244 337.267 cv
111.413 337.431 111.575 337.599 111.735 337.764 cv
111.871 337.904 li
112.274 338.34 112.693 338.801 112.993 339.222 cv
113.278 339.613 113.548 339.983 113.696 340.262 cv
113.756 340.357 113.8 340.439 113.858 340.547 cv
115.73 344.198 li
114.739 339.816 li
114.714 339.72 114.688 339.606 114.66 339.479 cv
114.598 339.205 114.523 338.875 114.409 338.507 cv
114.264 338.056 114.071 337.453 113.79 336.839 cv
113.892 336.947 li
113.965 337.024 114.039 337.103 114.12 337.197 cv
114.372 337.48 114.621 337.758 114.859 338.016 cv
115.019 338.196 115.179 338.369 115.335 338.538 cv
115.561 338.784 li
115.74 338.978 115.903 339.169 116.057 339.35 cv
116.35 339.699 li
116.618 340.022 116.848 340.298 116.997 340.519 cv
117.081 340.642 117.138 340.745 117.178 340.816 cv
119.052 344.182 li
118.014 339.958 li
117.93 339.613 117.815 339.141 117.599 338.6 cv
117.432 338.191 117.235 337.728 116.991 337.244 cv
117.135 337.423 li
117.28 337.602 117.425 337.781 117.57 337.975 cv
118.214 338.792 li
118.425 339.065 118.632 339.329 118.824 339.566 cv
118.966 339.752 li
119.099 339.926 119.227 340.091 119.351 340.28 cv
119.638 340.664 li
119.838 340.928 120.01 341.154 120.135 341.357 cv
120.296 341.594 120.377 341.74 120.383 341.752 cv
121.299 341.363 li
121.295 341.352 121.247 341.191 121.185 340.896 cv
121.15 340.755 li
121.12 340.629 121.084 340.485 121.049 340.326 cv
120.997 340.088 120.935 339.818 120.843 339.518 cv
120.693 339.059 li
120.64 338.895 120.585 338.723 120.525 338.547 cv
120.617 338.697 120.703 338.853 120.783 339.018 cv
120.977 339.357 121.151 339.728 121.326 340.095 cv
121.426 340.306 121.525 340.516 121.623 340.711 cv
121.861 341.212 122.124 341.68 122.356 342.094 cv
122.466 342.289 li
122.569 342.482 122.693 342.651 122.807 342.806 cv
122.908 342.943 li
123.04 343.12 123.154 343.272 123.25 343.391 cv
123.328 343.487 123.401 343.564 123.509 343.678 cv
125.483 345.817 li
125.952 346.455 li
126.216 347.424 li
126.269 346.67 li
126.284 346.685 li
126.27 346.659 li
126.414 344.637 li
126.436 344.787 126.461 344.935 126.491 345.079 cv
126.579 345.553 126.724 345.995 126.871 346.443 cv
126.905 346.55 126.941 346.648 126.988 346.763 cv
127.024 346.843 127.063 346.919 127.114 347.019 cv
127.195 347.175 127.266 347.308 127.346 347.439 cv
127.962 348.362 li
127.988 348.493 128.015 348.619 128.041 348.737 cv
128.111 349.049 128.223 349.304 128.296 349.473 cv
128.347 349.588 li
128.385 349.664 128.423 349.726 128.498 349.854 cv
129.789 352.228 li
129.433 349.548 li
129.431 349.533 129.423 349.456 129.421 349.304 cv
129.415 349.189 129.453 348.953 129.495 348.695 cv
129.524 348.524 129.577 348.339 129.631 348.142 cv
129.667 348.012 129.704 347.878 129.735 347.752 cv
129.82 347.442 129.897 347.111 129.975 346.751 cv
130.149 346.959 130.323 347.163 130.492 347.341 cv
130.619 347.487 130.759 347.619 130.903 347.752 cv
131.019 347.862 131.128 347.968 131.23 348.075 cv
131.349 348.196 131.453 348.308 131.541 348.402 cv
133.545 350.364 li
132.623 347.959 li
132.593 347.896 132.563 347.819 132.518 347.706 cv
132.376 347.338 li
132.328 347.217 132.285 347.079 132.215 346.841 cv
132.172 346.691 132.125 346.534 132.072 346.403 cv
131.948 346.046 131.789 345.68 131.609 345.274 cv
131.548 345.159 li
131.473 345.018 131.398 344.876 131.308 344.727 cv
131.191 344.547 131.063 344.376 130.94 344.232 cv
130.838 344.104 130.728 343.991 130.619 343.889 cv
130.758 343.91 li
130.883 343.936 131.008 343.94 131.152 343.941 cv
131.423 343.954 li
133.2 343.952 li
131.916 343.045 li
131.911 343.04 131.858 343.003 131.721 342.898 cv
131.672 342.868 131.619 342.814 131.555 342.756 cv
131.355 342.58 li
131.27 342.517 131.186 342.432 131.097 342.345 cv
131.015 342.265 130.93 342.182 130.855 342.116 cv
130.749 342.016 130.639 341.919 130.508 341.81 cv
130.392 341.722 li
130.41 341.728 130.428 341.735 130.445 341.742 cv
130.581 341.793 130.709 341.835 130.824 341.872 cv
130.924 341.904 131.012 341.932 131.117 341.975 cv
131.257 342.021 131.337 342.053 131.343 342.056 cv
133.581 342.931 li
131.878 341.235 li
131.874 341.231 131.813 341.17 131.684 341.031 cv
131.64 340.99 131.591 340.938 131.535 340.879 cv
131.437 340.774 131.323 340.653 131.186 340.528 cv
131.117 340.467 131.046 340.397 130.972 340.324 cv
130.808 340.164 130.629 339.99 130.441 339.847 cv
130.182 339.633 129.892 339.434 129.567 339.218 cv
129.653 339.226 129.734 339.231 129.81 339.237 cv
129.904 339.244 129.986 339.249 130.102 339.264 cv
130.297 339.273 130.406 339.271 130.409 339.272 cv
131.5 339.239 li
132.409 340.771 li
132.111 339.221 li
132.348 339.213 li
132.083 339.076 li
131.844 337.833 li
131.835 337.789 131.824 337.73 131.807 337.611 cv
131.777 337.478 131.77 337.23 131.764 336.968 cv
131.76 336.832 li
131.758 336.764 131.757 336.692 131.758 336.619 cv
131.836 336.91 li
132.003 337.426 132.171 337.943 132.364 338.413 cv
132.503 338.768 132.661 339.097 132.805 339.396 cv
132.951 339.703 li
133.042 339.905 133.143 340.085 133.234 340.24 cv
134.924 342.949 li
134.515 340.2 li
134.492 340.099 134.477 339.972 134.453 339.781 cv
134.431 339.624 134.408 339.449 134.374 339.254 cv
134.36 339.179 134.348 339.101 134.336 339.02 cv
134.44 339.248 134.55 339.473 134.67 339.685 cv
134.88 340.071 135.123 340.409 135.329 340.695 cv
135.44 340.855 135.559 340.993 135.726 341.171 cv
135.936 341.394 li
136.055 341.503 136.119 341.57 136.126 341.578 cv
137.847 343.44 li
136.962 341.064 li
136.958 341.054 136.927 340.967 136.871 340.771 cv
136.844 340.698 136.822 340.604 136.796 340.498 cv
136.679 340.041 li
136.659 339.975 136.641 339.905 136.623 339.832 cv
136.685 339.904 136.746 339.975 136.807 340.044 cv
136.927 340.178 li
137.234 340.469 137.583 340.799 137.943 341.042 cv
138.083 341.151 138.236 341.244 138.383 341.331 cv
138.52 341.412 li
138.686 341.502 138.839 341.584 138.976 341.663 cv
139.272 341.835 139.554 341.923 139.74 341.982 cv
139.863 342.019 li
140.028 342.052 140.117 342.075 140.125 342.077 cv
142.148 342.609 li
140.584 341.22 li
140.577 341.213 140.509 341.151 140.388 341.024 cv
140.307 340.948 140.218 340.831 140.114 340.698 cv
139.948 340.489 li
139.891 340.425 139.845 340.341 139.795 340.257 cv
138.77 338.389 li
138.607 338.116 138.438 337.834 138.234 337.616 cv
138.047 337.378 137.831 337.192 137.64 337.028 cv
137.565 336.964 137.494 336.902 137.429 336.841 cv
137.615 336.908 137.799 336.97 137.979 337.021 cv
138.181 337.081 138.38 337.134 138.571 337.183 cv
138.781 337.237 138.979 337.289 139.156 337.348 cv
139.66 337.478 li
139.79 337.514 139.902 337.548 140.013 337.586 cv
143.082 338.52 li
140.494 336.596 li
140.412 336.539 140.314 336.467 140.208 336.388 cv
140.101 336.3 li
140.004 336.217 139.899 336.13 139.79 336.06 cv
139.665 335.975 139.532 335.877 139.393 335.773 cv
139.199 335.63 138.992 335.478 138.774 335.334 cv
138.641 335.243 138.501 335.158 138.36 335.077 cv
138.364 335.078 138.369 335.078 138.373 335.079 cv
138.572 335.123 138.745 335.158 138.91 335.217 cv
139.008 335.244 139.084 335.272 139.152 335.297 cv
139.253 335.335 li
139.686 334.438 li
139.679 334.434 139.564 334.364 139.349 334.216 cv
139.271 334.169 139.183 334.105 139.083 334.035 cv
138.901 333.906 138.686 333.754 138.366 333.571 cv
137.974 333.354 137.53 333.107 137.028 332.89 cv
136.591 332.694 136.127 332.522 135.665 332.361 cv
135.716 332.369 135.769 332.377 135.823 332.387 cv
136.236 332.453 136.592 332.511 136.851 332.598 cv
136.924 332.615 136.984 332.637 137.125 332.684 cv
140.087 333.729 li
137.704 331.854 li
137.704 331.854 137.571 331.75 137.305 331.556 cv
137.181 331.474 li
136.944 331.315 136.619 331.1 136.208 330.901 cv
135.978 330.79 135.727 330.669 135.444 330.542 cv
135.162 330.425 134.861 330.313 134.552 330.219 cv
134.493 330.2 134.432 330.181 134.37 330.162 cv
133.73 329.368 li
133.678 329.292 133.592 329.199 133.431 329.039 cv
133.347 328.97 li
133.29 328.926 133.226 328.878 133.155 328.829 cv
133.053 328.766 li
132.988 328.724 132.919 328.681 132.856 328.648 cv
132.66 328.541 132.394 328.406 132.09 328.328 cv
131.675 328.211 131.278 328.113 130.906 328.038 cv
130.601 327.85 li
132.852 328.099 li
129.607 326.69 li
129.531 326.656 129.438 326.613 129.319 326.571 cv
129.019 326.465 128.566 326.305 127.993 326.197 cv
127.961 326.192 127.928 326.186 127.894 326.181 cv
126.814 325.517 li
126.748 325.477 126.647 325.422 126.5 325.347 cv
126.26 325.234 125.887 325.068 125.425 324.928 cv
125.421 324.927 125.417 324.926 125.414 324.925 cv
125.481 324.938 125.549 324.95 125.615 324.963 cv
125.831 325.005 li
126.021 325.043 126.208 325.077 126.388 325.11 cv
126.644 325.157 126.886 325.201 127.106 325.254 cv
127.306 325.3 127.491 325.336 127.655 325.368 cv
127.793 325.395 127.914 325.418 128.031 325.446 cv
131.72 326.186 li
128.678 324.567 li
129.121 324.637 129.477 324.707 129.761 324.779 cv
129.983 324.838 130.19 324.879 130.372 324.914 cv
130.505 324.939 130.622 324.962 130.744 324.995 cv
135.275 325.998 li
131.433 324.137 li
131.425 324.133 131.315 324.079 131.105 323.962 cv
131.057 323.939 131.004 323.909 130.948 323.875 cv
131.22 323.94 131.489 324.003 131.749 324.058 cv
132.004 324.113 132.252 324.164 132.478 324.205 cv
133.12 324.335 li
133.332 324.38 133.53 324.41 133.708 324.435 cv
138.826 325.035 li
134.366 323.436 li
134.263 323.405 134.139 323.358 133.99 323.301 cv
133.464 323.106 li
133.28 323.043 133.083 322.966 132.878 322.883 cv
132.651 322.787 li
134.017 322.982 li
134.272 323.017 134.513 323.048 134.727 323.101 cv
134.944 323.15 li
135.146 323.196 135.321 323.231 135.495 323.302 cv
135.556 323.32 135.602 323.343 135.721 323.396 cv
137.949 324.407 li
136.238 322.536 li
136.192 322.486 136.127 322.416 135.987 322.295 cv
135.929 322.246 135.859 322.189 135.778 322.126 cv
135.811 322.129 li
135.909 322.14 136.008 322.149 136.118 322.156 cv
136.629 322.174 137.119 322.169 137.562 322.151 cv
137.794 322.148 138.017 322.134 138.219 322.12 cv
138.403 322.111 138.576 322.105 138.742 322.116 cv
139.036 322.131 139.339 322.146 139.56 322.199 cv
139.617 322.206 139.661 322.22 139.694 322.229 cv
139.815 321.984 li
139.8 322.259 li
143.39 323.327 li
140.439 321.499 li
140.615 321.489 li
140.77 321.473 140.86 321.468 140.868 321.467 cv
142.866 321.365 li
141.055 320.515 li
141.047 320.511 140.967 320.473 140.782 320.375 cv
140.723 320.351 140.656 320.311 140.579 320.269 cv
140.451 320.196 140.305 320.115 140.133 320.04 cv
140.023 319.995 139.908 319.939 139.786 319.88 cv
139.6 319.789 139.4 319.692 139.201 319.615 cv
139.179 319.606 139.158 319.598 139.136 319.589 cv
139.386 319.51 139.653 319.421 139.942 319.32 cv
140.476 319.112 141.041 318.887 141.555 318.633 cv
141.947 318.446 142.31 318.243 142.636 318.06 cv
142.913 317.906 li
143.051 317.828 143.178 317.749 143.296 317.677 cv
143.508 317.545 li
143.627 317.47 143.731 317.403 143.852 317.334 cv
144.052 317.201 144.169 317.13 144.174 317.127 cv
147.258 315.253 li
143.78 316.218 li
cp
f
335.157 401.509 mo
333.78 401.464 328.184 401.331 327.739 401.109 cv
327.295 400.887 326.007 400.309 325.696 400.398 cv
325.385 400.487 325.829 401.198 325.696 401.597 cv
325.563 401.997 326.273 402.841 324.719 405.018 cv
323.164 407.194 320.81 411.325 320.188 411.592 cv
319.566 411.858 315.702 412.169 315.08 411.592 cv
314.458 411.014 309.794 406.89 309.039 406.154 cv
308.284 405.418 308.683 402.708 307.928 402.13 cv
307.173 401.553 304.153 400.22 303.575 399.243 cv
302.998 398.266 299.8 393.691 299.755 393.025 cv
299.711 392.358 299.222 392.314 299.755 391.736 cv
300.288 391.159 301.132 391.248 301.354 390.448 cv
301.576 389.649 302.243 387.872 301.532 387.339 cv
300.821 386.806 297.623 385.784 297.312 386.672 cv
297.001 387.561 298.556 390.182 297.934 390.67 cv
297.312 391.159 296.69 393.335 296.868 394.624 cv
297.046 395.912 297.78 397.466 297.124 397.6 cv
296.468 397.733 295.002 395.779 295.047 395.023 cv
295.091 394.268 296.557 390.582 296.246 389.915 cv
295.935 389.249 294.158 388.805 293.803 388.138 cv
293.448 387.472 291.848 385.473 290.827 386.584 cv
289.805 387.694 288.473 387.561 288.828 388.494 cv
289.183 389.426 290.96 390.582 290.16 391.248 cv
289.361 391.914 289.332 395.023 288.769 395.734 cv
288.206 396.445 286.651 396.445 286.918 398.488 cv
287.184 400.531 288.872 403.152 288.25 404.174 cv
287.629 405.195 284.786 408.927 283.853 409.993 cv
282.92 411.059 281.41 413.591 281.676 415.545 cv
281.77 416.228 281.876 417.26 281.947 418.392 cv
281.682 419.32 283.328 422.036 283.106 422.896 cv
282.054 426.961 279.251 430.185 279.181 430.815 cv
279.111 431.446 279.391 439.855 279.181 441.257 cv
278.971 442.659 280.442 442.168 281.073 442.098 cv
281.704 442.028 280.513 440.136 280.653 438.804 cv
280.793 437.473 280.863 432.217 281.774 431.166 cv
282.685 430.114 287.17 424.718 287.591 422.546 cv
287.591 422.546 290.674 426.19 290.674 430.395 cv
290.674 434.599 292.566 435.51 294.458 437.963 cv
296.35 440.416 295.93 442.027 297.542 442.238 cv
299.154 442.448 300.275 442.168 299.995 441.257 cv
299.714 440.346 299.013 441.047 296.771 438.244 cv
294.528 435.44 292.706 431.025 293.127 429.414 cv
293.547 427.802 294.879 424.578 294.669 423.177 cv
294.669 423.177 300.555 425.349 305.18 424.228 cv
305.18 424.228 305.951 432.147 305.671 435.02 cv
305.391 437.893 306.302 439.855 306.162 440.696 cv
306.021 441.537 308.334 442.028 308.895 441.537 cv
309.455 441.047 307.353 439.715 307.353 438.874 cv
307.353 438.033 307.493 433.548 307.493 431.306 cv
307.493 429.063 308.825 424.779 308.825 424.779 cv
308.825 424.779 315.202 428.783 315.832 430.255 cv
316.463 431.726 312.679 437.333 311.347 437.963 cv
310.016 438.594 312.188 440.066 312.539 440.066 cv
312.889 440.066 312.539 439.365 313.169 438.103 cv
313.8 436.842 318.075 432.217 318.425 431.166 cv
318.776 430.114 316.814 427.101 314.291 425.419 cv
311.768 423.737 312.609 422.686 313.169 422.125 cv
313.73 421.565 314.992 420.794 315.412 420.794 cv
315.729 420.794 318.542 419.232 320.962 418.392 cv
321.202 418.274 321.426 418.144 321.609 417.988 cv
323.697 416.211 326.895 409.948 327.695 409.193 cv
328.494 408.438 329.738 406.661 330.182 406.528 cv
330.627 406.395 331.515 406.173 332.137 406.128 cv
332.969 406.069 333.603 404.884 334.535 405.062 cv
335.468 405.24 336.668 404.263 336.623 403.596 cv
336.579 402.93 336.534 401.553 335.157 401.509 cv
cp
f
397.719 402.607 mo
397.562 402.295 397.562 401.435 396.859 401.669 cv
396.155 401.904 394.436 402.529 393.498 402.529 cv
392.56 402.529 390.529 401.982 390.294 402.451 cv
390.06 402.92 390.138 406.984 388.731 408.859 cv
387.324 410.735 385.527 412.376 383.964 412.064 cv
382.401 411.751 379.118 410.422 377.477 408.234 cv
375.836 406.046 370.834 401.589 370.287 401.629 cv
369.74 401.669 372.397 400.419 371.928 399.794 cv
371.459 399.168 367.942 399.012 367.708 397.527 cv
367.474 396.042 366.614 393.542 367.239 392.526 cv
367.864 391.51 368.802 391.275 368.49 390.415 cv
368.177 389.556 365.129 387.289 364.113 388.618 cv
363.097 389.947 364.738 391.119 364.113 391.822 cv
363.488 392.526 362.862 396.433 362.55 396.433 cv
362.237 396.433 362.081 391.353 361.768 390.806 cv
361.768 390.806 363.566 388.071 363.332 387.289 cv
363.097 386.508 362.862 383.616 361.768 383.929 cv
360.674 384.241 358.33 385.492 358.33 386.352 cv
358.33 387.211 359.111 387.914 358.799 388.774 cv
358.486 389.634 354.188 395.105 355.36 399.09 cv
355.36 399.09 352.39 406.124 349.733 408.156 cv
347.638 409.758 346.176 413.789 345.076 417.644 cv
345.036 417.831 345.076 423.028 343.409 427.84 cv
342.531 430.376 341.442 430.747 341.442 432.03 cv
341.442 432.792 342.045 435.421 342.534 437.682 cv
342.87 439.232 343.153 440.609 343.153 441.096 cv
343.153 442.293 344.435 442.122 345.034 442.036 cv
345.633 441.951 343.067 434.254 343.58 432.971 cv
344.093 431.688 346.83 426.215 348.541 426.129 cv
350.251 426.044 351.277 426.642 351.277 426.642 cv
351.277 426.642 348.883 431.09 349.823 431.945 cv
350.764 432.8 356.751 439.129 357.093 439.813 cv
357.435 440.497 356.665 441.352 357.349 441.523 cv
358.034 441.694 360.086 442.207 360.086 441.352 cv
360.086 440.497 359.145 437.931 356.836 436.306 cv
354.527 434.681 352.646 430.919 353.415 429.294 cv
354.185 427.669 355.896 424.419 355.896 424.419 cv
355.896 424.419 362.053 425.702 366.928 424.077 cv
366.928 424.077 366.125 431.114 366.58 433.299 cv
367.035 435.483 366.58 440.308 366.944 441.309 cv
367.308 442.31 369.511 442.521 370.23 442.097 cv
370.949 441.673 368.765 439.398 368.765 437.941 cv
368.765 436.485 369.693 426.29 370.23 425.926 cv
370.767 425.561 372.497 424.833 372.861 424.469 cv
372.861 424.469 378.96 428.292 378.96 429.84 cv
378.96 431.387 376.411 437.85 375.865 438.578 cv
375.319 439.307 377.503 440.49 378.231 440.672 cv
378.96 440.854 378.049 438.032 379.142 435.757 cv
380.234 433.481 382.419 430.022 381.872 428.474 cv
381.326 426.927 374.632 421.703 375.178 420.61 cv
375.178 420.61 381.184 421.132 386.488 417.644 cv
387.374 417.337 388.212 416.902 388.887 416.284 cv
391.623 413.783 393.498 409.406 394.124 408.469 cv
394.749 407.531 395.867 406.582 396.859 406.515 cv
398.187 406.425 401.157 406.28 401.001 405.186 cv
400.845 404.092 397.875 402.92 397.719 402.607 cv
cp
f
265.973 405.423 mo
264.864 404.776 259.872 403.944 259.225 403.297 cv
258.578 402.65 257.376 403.482 257.191 403.759 cv
257.006 404.036 254.346 406.347 254.198 407.272 cv
254.049 408.196 252.19 415.032 245.72 413.737 cv
245.72 413.737 237.585 405.511 236.291 405.141 cv
234.997 404.771 233.795 403.458 233.611 403.051 cv
233.426 402.645 234.35 401.628 234.258 400.796 cv
234.165 399.965 229.728 399.965 229.728 398.67 cv
229.728 397.376 229.081 394.603 228.434 393.864 cv
227.787 393.124 226.585 392.754 226.585 392.477 cv
226.585 392.2 227.417 391.922 227.602 390.721 cv
227.787 389.519 228.064 388.04 227.417 387.67 cv
226.77 387.301 224.09 386.931 223.628 387.67 cv
223.165 388.41 223.812 390.813 223.628 391.922 cv
223.443 393.032 222.518 395.25 222.518 395.25 cv
222.518 395.25 222.426 394.141 222.518 393.494 cv
222.611 392.847 224.47 387.464 222.477 387.243 cv
220.485 387.023 218.913 388.502 218.913 389.704 cv
218.913 390.906 219.375 392.2 219.375 392.2 cv
219.375 392.2 215.77 395.158 214.938 395.99 cv
214.107 396.822 212.812 397.838 213.459 399.41 cv
214.107 400.981 215.308 401.998 215.123 403.2 cv
214.938 404.401 214.938 409.208 214.384 409.578 cv
213.865 409.924 209.063 414.958 208.443 417.877 cv
208.574 419.968 208.582 422.41 208.144 423.642 cv
207.47 425.536 205.488 428.574 205.576 429.587 cv
205.665 430.6 206.237 434.035 206.854 435.4 cv
207.47 436.766 208.263 440.949 208.263 441.698 cv
208.263 442.447 209.936 442.359 210.861 442.183 cv
211.786 442.007 210.465 440.949 210.113 440.201 cv
209.76 439.452 208.351 434.916 208.307 433.551 cv
208.263 432.185 207.558 430.952 208.219 429.852 cv
208.879 428.75 211.081 424.214 211.39 424.346 cv
211.698 424.479 209.804 429.367 209.804 429.896 cv
209.804 430.424 214.693 439.232 214.561 440.333 cv
214.428 441.434 215.75 441.61 217.027 441.522 cv
218.304 441.434 216.983 440.333 216.498 439.364 cv
216.014 438.395 212.226 431.437 212.535 430.336 cv
212.843 429.235 216.733 422.36 217.379 422.717 cv
219.439 423.854 227.155 424.49 229.886 423.113 cv
230.705 422.701 231.031 430.908 230.327 432.45 cv
229.622 433.991 229.006 435.268 227.376 435.973 cv
225.747 436.678 224.778 437.338 224.426 437.338 cv
224.073 437.338 223.06 436.722 222.4 437.206 cv
221.739 437.691 220.418 438.924 220.682 439.232 cv
220.946 439.54 224.646 439.452 226.099 438.792 cv
227.552 438.131 231.34 435.665 232.265 435.268 cv
233.189 434.872 233.498 425.888 233.806 425.051 cv
233.806 425.051 236.084 431.288 236.525 433.181 cv
236.965 435.075 237.89 438.07 237.758 438.686 cv
237.626 439.303 237.362 440.228 237.89 440.272 cv
238.419 440.316 240.224 440.888 240.224 440.052 cv
240.224 439.215 238.551 435.56 238.33 434.238 cv
238.11 432.917 238.036 423.87 238.609 422.945 cv
239.181 422.02 240.764 422.033 241.573 421.669 cv
241.947 421.501 250.008 420.197 254.198 417.877 cv
256.31 416.488 257.497 414.521 259.04 411.709 cv
259.04 411.709 260.427 408.381 261.443 408.473 cv
262.46 408.566 266.62 409.486 266.805 408.471 cv
266.99 407.456 267.082 406.07 265.973 405.423 cv
cp
f
414.267 442.228 mo
413.87 442.605 410.165 441.493 409.737 440.942 cv
409.308 440.391 409.798 439.963 410.471 438.983 cv
411.145 438.004 413.104 433.534 413.41 432.861 cv
413.716 432.188 413.961 428.943 413.961 428.024 cv
413.961 427.106 414.879 421.841 415.369 420.678 cv
415.859 419.514 415.92 416.515 416.594 415.474 cv
417.267 414.433 417.818 413.147 417.818 412.841 cv
417.818 412.535 418.859 411.311 419.104 410.882 cv
419.401 410.362 419.443 409.669 419.684 409.115 cv
419.851 408.73 420.067 408.353 420.374 408.06 cv
420.552 407.89 420.705 407.85 420.927 407.757 cv
421.176 407.653 421.4 407.492 421.666 407.432 cv
422.063 407.344 422.41 407.329 422.802 407.442 cv
423.312 407.589 424.061 407.853 424.333 408.353 cv
424.421 408.514 424.42 408.564 424.552 408.656 cv
424.697 408.757 424.76 408.717 424.772 408.917 cv
424.78 409.052 424.705 409.195 424.734 409.349 cv
424.756 409.468 424.885 409.613 424.897 409.718 cv
424.92 409.918 424.786 409.907 424.667 410.016 cv
424.545 410.127 424.532 410.253 424.504 410.404 cv
424.498 410.432 424.421 410.731 424.422 410.733 cv
424.43 410.747 424.723 411.287 424.421 411.528 cv
424.115 411.773 423.829 412.848 423.156 412.848 cv
423.156 412.848 423.641 414.235 423.919 414.651 cv
424.196 415.067 424.404 415.293 424.456 415.275 cv
424.508 415.258 425.41 415.154 425.427 415.397 cv
425.444 415.639 425.34 415.83 425.618 415.969 cv
425.895 416.107 426.346 416.957 426.034 417.148 cv
425.722 417.339 425.115 418.119 425.132 418.31 cv
425.15 418.5 425.236 419.575 424.751 419.575 cv
424.265 419.575 423.659 419.437 423.641 419.61 cv
423.624 419.783 422.809 422.662 422.341 423.685 cv
421.872 424.708 421.404 425.072 421.612 425.54 cv
421.82 426.008 423.468 427.066 423.763 429.008 cv
424.057 430.95 423.225 433.846 423.034 434.817 cv
422.844 435.788 422.566 437.712 422.688 437.938 cv
422.809 438.163 422.93 438.458 423.208 438.458 cv
423.485 438.458 424.803 438.475 424.89 438.822 cv
424.976 439.169 424.023 440.296 421.925 440.365 cv
419.827 440.435 419.445 440.608 419.029 440.435 cv
418.613 440.261 418.127 440.539 417.416 440.417 cv
416.705 440.296 415.214 439.446 414.607 439.308 cv
414 439.169 412.683 438.857 412.596 438.891 cv
412.509 438.926 412.388 439.776 412.492 440.036 cv
412.596 440.296 414.863 441.663 414.267 442.228 cv
cp
f
415.565 418.74 mo
409.036 418.74 399.655 416.429 392.364 405.286 cv
392.782 405.013 li
404.961 423.625 423.027 417.178 423.208 417.11 cv
423.382 417.579 li
423.306 417.607 420.135 418.74 415.565 418.74 cv
cp
f
346.242 415.226 mo
342.343 415.226 334.626 413.794 329.035 403.628 cv
329.473 403.388 li
333.429 410.579 338.426 413.221 341.921 414.171 cv
345.699 415.196 348.565 414.526 348.594 414.52 cv
348.711 415.006 li
348.678 415.014 347.742 415.226 346.242 415.226 cv
cp
f
277.811 417.66 mo
272.267 417.66 264.229 415.552 257.982 405.279 cv
258.41 405.02 li
261.387 409.915 266.712 415.973 275.177 417.035 cv
280.254 417.672 284.099 416.189 284.136 416.174 cv
284.319 416.639 li
284.255 416.664 281.622 417.66 277.811 417.66 cv
cp
f
177.12 468.984 mo
177.12 469.424 177.188 469.797 177.325 470.106 cv
177.461 470.415 177.648 470.647 177.886 470.803 cv
178.123 470.959 178.382 471.039 178.663 471.039 cv
178.948 471.039 179.208 470.964 179.444 470.815 cv
179.679 470.667 179.867 470.439 180.008 470.133 cv
180.148 469.826 180.218 469.442 180.218 468.984 cv
180.218 468.552 180.148 468.181 180.008 467.87 cv
179.867 467.56 179.678 467.323 179.438 467.158 cv
179.198 466.994 178.936 466.913 178.652 466.913 cv
178.355 466.913 178.09 466.997 177.856 467.164 cv
177.622 467.332 177.442 467.573 177.313 467.888 cv
177.184 468.203 177.12 468.568 177.12 468.984 cv
cp
180.308 471.365 mo
180.308 471.203 li
180.09 471.452 179.875 471.656 179.664 471.811 cv
179.452 471.969 179.222 472.087 178.975 472.168 cv
178.728 472.251 178.458 472.29 178.165 472.29 cv
177.777 472.29 177.417 472.208 177.087 472.044 cv
176.757 471.88 176.471 471.645 176.23 471.34 cv
175.988 471.036 175.805 470.678 175.68 470.266 cv
175.556 469.854 175.493 469.409 175.493 468.93 cv
175.493 467.917 175.741 467.128 176.235 466.561 cv
176.73 465.996 177.381 465.713 178.189 465.713 cv
178.655 465.713 179.049 465.793 179.37 465.953 cv
179.69 466.113 180.003 466.361 180.308 466.692 cv
180.308 464.3 li
180.308 463.967 180.374 463.717 180.507 463.546 cv
180.639 463.376 180.828 463.291 181.073 463.291 cv
181.319 463.291 181.507 463.369 181.64 463.525 cv
181.773 463.683 181.839 463.912 181.839 464.217 cv
181.839 471.365 li
181.839 471.673 181.768 471.904 181.625 472.059 cv
181.483 472.213 181.299 472.29 181.073 472.29 cv
180.852 472.29 180.669 472.21 180.524 472.051 cv
180.38 471.889 180.308 471.661 180.308 471.365 cv
cp
.175998 .7832 .991272 .059968 cmyk
f
184.284 468.474 mo
187.223 468.474 li
187.184 467.92 187.033 467.505 186.774 467.23 cv
186.515 466.954 186.174 466.817 185.751 466.817 cv
185.347 466.817 185.015 466.957 184.756 467.235 cv
184.497 467.514 184.34 467.927 184.284 468.474 cv
cp
187.454 469.394 mo
184.284 469.394 li
184.288 469.762 184.362 470.086 184.507 470.367 cv
184.651 470.648 184.843 470.86 185.083 471.002 cv
185.322 471.145 185.586 471.216 185.875 471.216 cv
186.069 471.216 186.246 471.194 186.406 471.148 cv
186.567 471.102 186.722 471.031 186.873 470.934 cv
187.023 470.837 187.161 470.733 187.288 470.622 cv
187.414 470.511 187.578 470.36 187.781 470.171 cv
187.864 470.1 187.983 470.063 188.137 470.063 cv
188.303 470.063 188.438 470.11 188.54 470.201 cv
188.643 470.293 188.695 470.42 188.695 470.587 cv
188.695 470.733 188.637 470.903 188.523 471.1 cv
188.407 471.296 188.234 471.484 188.003 471.664 cv
187.771 471.844 187.481 471.993 187.13 472.112 cv
186.781 472.231 186.378 472.29 185.922 472.29 cv
184.882 472.29 184.072 471.993 183.495 471.4 cv
182.917 470.807 182.628 470.001 182.628 468.984 cv
182.628 468.504 182.699 468.06 182.842 467.651 cv
182.984 467.241 183.192 466.891 183.465 466.598 cv
183.738 466.305 184.074 466.08 184.474 465.924 cv
184.874 465.768 185.317 465.689 185.804 465.689 cv
186.437 465.689 186.98 465.822 187.433 466.09 cv
187.886 466.357 188.226 466.703 188.451 467.125 cv
188.676 467.549 188.79 467.981 188.79 468.419 cv
188.79 468.828 188.673 469.092 188.44 469.212 cv
188.207 469.333 187.878 469.394 187.454 469.394 cv
cp
f
194.838 470.171 mo
194.838 470.617 194.73 471.001 194.512 471.319 cv
194.294 471.638 193.973 471.88 193.547 472.044 cv
193.122 472.208 192.604 472.29 191.995 472.29 cv
191.413 472.29 190.914 472.201 190.499 472.022 cv
190.083 471.845 189.776 471.622 189.579 471.356 cv
189.381 471.087 189.282 470.82 189.282 470.55 cv
189.282 470.372 189.345 470.221 189.472 470.094 cv
189.599 469.968 189.759 469.905 189.953 469.905 cv
190.123 469.905 190.253 469.946 190.344 470.029 cv
190.436 470.112 190.523 470.229 190.605 470.378 cv
190.772 470.669 190.971 470.882 191.203 471.026 cv
191.434 471.168 191.749 471.24 192.149 471.24 cv
192.474 471.24 192.74 471.167 192.948 471.023 cv
193.155 470.878 193.259 470.713 193.259 470.527 cv
193.259 470.241 193.152 470.035 192.936 469.905 cv
192.72 469.774 192.365 469.648 191.87 469.53 cv
191.312 469.392 190.858 469.245 190.508 469.093 cv
190.157 468.941 189.877 468.74 189.668 468.491 cv
189.458 468.242 189.353 467.934 189.353 467.571 cv
189.353 467.247 189.45 466.939 189.644 466.65 cv
189.838 466.362 190.124 466.131 190.502 465.959 cv
190.88 465.787 191.336 465.701 191.87 465.701 cv
192.29 465.701 192.667 465.744 193.001 465.832 cv
193.335 465.918 193.615 466.036 193.838 466.183 cv
194.062 466.328 194.232 466.49 194.348 466.668 cv
194.465 466.847 194.523 467.02 194.523 467.191 cv
194.523 467.376 194.461 467.529 194.337 467.649 cv
194.212 467.766 194.035 467.827 193.805 467.827 cv
193.639 467.827 193.497 467.779 193.381 467.683 cv
193.264 467.589 193.131 467.446 192.98 467.257 cv
192.857 467.098 192.714 466.971 192.547 466.876 cv
192.381 466.781 192.155 466.734 191.87 466.734 cv
191.577 466.734 191.334 466.796 191.14 466.921 cv
190.946 467.046 190.849 467.201 190.849 467.386 cv
190.849 467.557 190.92 467.696 191.062 467.805 cv
191.205 467.915 191.397 468.005 191.639 468.076 cv
191.88 468.147 192.212 468.233 192.636 468.336 cv
193.138 468.459 193.549 468.606 193.868 468.775 cv
194.186 468.945 194.427 469.146 194.592 469.378 cv
194.756 469.61 194.838 469.874 194.838 470.171 cv
cp
f
197.295 466.621 mo
197.295 471.305 li
197.295 471.629 197.218 471.875 197.064 472.041 cv
196.909 472.207 196.714 472.29 196.476 472.29 cv
196.238 472.29 196.045 472.206 195.897 472.035 cv
195.748 471.865 195.675 471.621 195.675 471.305 cv
195.675 466.668 li
195.675 466.349 195.748 466.107 195.897 465.945 cv
196.045 465.782 196.238 465.701 196.476 465.701 cv
196.714 465.701 196.909 465.782 197.064 465.945 cv
197.218 466.107 197.295 466.333 197.295 466.621 cv
cp
196.494 464.947 mo
196.268 464.947 196.075 464.878 195.915 464.74 cv
195.755 464.602 195.675 464.405 195.675 464.151 cv
195.675 463.922 195.757 463.734 195.921 463.585 cv
196.085 463.436 196.276 463.362 196.494 463.362 cv
196.704 463.362 196.889 463.429 197.052 463.564 cv
197.214 463.698 197.295 463.894 197.295 464.151 cv
197.295 464.402 197.216 464.596 197.057 464.736 cv
196.899 464.876 196.711 464.947 196.494 464.947 cv
cp
f
199.699 468.943 mo
199.699 469.599 199.842 470.096 200.129 470.432 cv
200.416 470.769 200.787 470.937 201.242 470.937 cv
201.511 470.937 201.765 470.864 202.005 470.72 cv
202.244 470.576 202.439 470.357 202.59 470.067 cv
202.74 469.776 202.815 469.424 202.815 469.007 cv
202.815 468.347 202.67 467.832 202.379 467.464 cv
202.088 467.097 201.705 466.913 201.23 466.913 cv
200.767 466.913 200.396 467.088 200.117 467.441 cv
199.838 467.793 199.699 468.293 199.699 468.943 cv
cp
204.395 466.888 mo
204.395 471.595 li
204.395 472.134 204.337 472.598 204.222 472.986 cv
204.108 473.373 203.923 473.694 203.67 473.946 cv
203.417 474.199 203.085 474.388 202.676 474.51 cv
202.266 474.634 201.757 474.695 201.147 474.695 cv
200.589 474.695 200.09 474.616 199.651 474.46 cv
199.212 474.303 198.874 474.101 198.636 473.855 cv
198.399 473.607 198.28 473.353 198.28 473.092 cv
198.28 472.894 198.347 472.732 198.482 472.608 cv
198.616 472.483 198.779 472.421 198.968 472.421 cv
199.206 472.421 199.414 472.525 199.592 472.735 cv
199.678 472.842 199.768 472.95 199.862 473.059 cv
199.955 473.169 200.058 473.262 200.17 473.338 cv
200.283 473.415 200.419 473.473 200.577 473.51 cv
200.735 473.547 200.918 473.567 201.123 473.567 cv
201.543 473.567 201.868 473.508 202.1 473.391 cv
202.332 473.275 202.494 473.111 202.587 472.901 cv
202.68 472.693 202.734 472.468 202.75 472.228 cv
202.766 471.988 202.778 471.604 202.785 471.073 cv
202.536 471.422 202.249 471.687 201.922 471.869 cv
201.595 472.051 201.206 472.142 200.755 472.142 cv
200.213 472.142 199.739 472.003 199.333 471.726 cv
198.928 471.449 198.616 471.062 198.399 470.563 cv
198.181 470.063 198.073 469.488 198.073 468.835 cv
198.073 468.349 198.139 467.909 198.271 467.518 cv
198.404 467.125 198.593 466.796 198.838 466.526 cv
199.083 466.257 199.366 466.055 199.687 465.918 cv
200.007 465.781 200.359 465.713 200.744 465.713 cv
201.202 465.713 201.6 465.802 201.937 465.976 cv
202.273 466.153 202.586 466.429 202.875 466.805 cv
202.875 466.585 li
202.875 466.305 202.944 466.087 203.082 465.932 cv
203.221 465.779 203.399 465.701 203.617 465.701 cv
203.929 465.701 204.137 465.803 204.24 466.007 cv
204.343 466.211 204.395 466.505 204.395 466.888 cv
cp
f
206.97 466.598 mo
206.97 466.793 li
207.254 466.417 207.566 466.141 207.905 465.965 cv
208.243 465.79 208.632 465.701 209.071 465.701 cv
209.499 465.701 209.88 465.794 210.217 465.98 cv
210.553 466.167 210.805 466.429 210.971 466.769 cv
211.078 466.968 211.147 467.181 211.178 467.411 cv
211.21 467.64 211.227 467.933 211.227 468.29 cv
211.227 471.305 li
211.227 471.629 211.152 471.875 211.004 472.041 cv
210.855 472.207 210.662 472.29 210.425 472.29 cv
210.183 472.29 209.988 472.206 209.837 472.035 cv
209.686 471.865 209.612 471.621 209.612 471.305 cv
209.612 468.603 li
209.612 468.07 209.537 467.661 209.389 467.378 cv
209.24 467.096 208.945 466.953 208.501 466.953 cv
208.213 466.953 207.949 467.04 207.712 467.212 cv
207.474 467.384 207.3 467.621 207.189 467.921 cv
207.11 468.163 207.071 468.613 207.071 469.275 cv
207.071 471.305 li
207.071 471.633 206.994 471.88 206.842 472.044 cv
206.69 472.208 206.493 472.29 206.252 472.29 cv
206.018 472.29 205.827 472.206 205.676 472.035 cv
205.526 471.865 205.45 471.621 205.45 471.305 cv
205.45 466.621 li
205.45 466.312 205.517 466.081 205.652 465.929 cv
205.787 465.777 205.971 465.701 206.204 465.701 cv
206.347 465.701 206.475 465.735 206.59 465.802 cv
206.705 465.87 206.797 465.97 206.866 466.104 cv
206.936 466.239 206.97 466.404 206.97 466.598 cv
cp
f
213.659 468.474 mo
216.598 468.474 li
216.558 467.92 216.409 467.505 216.15 467.23 cv
215.89 466.954 215.549 466.817 215.126 466.817 cv
214.722 466.817 214.39 466.957 214.131 467.235 cv
213.872 467.514 213.715 467.927 213.659 468.474 cv
cp
216.829 469.394 mo
213.659 469.394 li
213.664 469.762 213.737 470.086 213.882 470.367 cv
214.027 470.648 214.218 470.86 214.458 471.002 cv
214.697 471.145 214.961 471.216 215.25 471.216 cv
215.444 471.216 215.621 471.194 215.782 471.148 cv
215.942 471.102 216.097 471.031 216.248 470.934 cv
216.398 470.837 216.536 470.733 216.664 470.622 cv
216.79 470.511 216.954 470.36 217.156 470.171 cv
217.239 470.1 217.358 470.063 217.512 470.063 cv
217.678 470.063 217.813 470.11 217.916 470.201 cv
218.019 470.293 218.07 470.42 218.07 470.587 cv
218.07 470.733 218.013 470.903 217.898 471.1 cv
217.783 471.296 217.61 471.484 217.378 471.664 cv
217.146 471.844 216.856 471.993 216.506 472.112 cv
216.156 472.231 215.753 472.29 215.298 472.29 cv
214.257 472.29 213.448 471.993 212.869 471.4 cv
212.292 470.807 212.003 470.001 212.003 468.984 cv
212.003 468.504 212.074 468.06 212.217 467.651 cv
212.359 467.241 212.567 466.891 212.84 466.598 cv
213.113 466.305 213.45 466.08 213.849 465.924 cv
214.249 465.768 214.693 465.689 215.179 465.689 cv
215.812 465.689 216.355 465.822 216.808 466.09 cv
217.261 466.357 217.601 466.703 217.827 467.125 cv
218.052 467.549 218.165 467.981 218.165 468.419 cv
218.165 468.828 218.049 469.092 217.815 469.212 cv
217.582 469.333 217.253 469.394 216.829 469.394 cv
cp
f
220.248 468.984 mo
220.248 469.424 220.316 469.797 220.452 470.106 cv
220.589 470.415 220.776 470.647 221.014 470.803 cv
221.251 470.959 221.51 471.039 221.791 471.039 cv
222.076 471.039 222.337 470.964 222.572 470.815 cv
222.807 470.667 222.995 470.439 223.135 470.133 cv
223.276 469.826 223.346 469.442 223.346 468.984 cv
223.346 468.552 223.276 468.181 223.135 467.87 cv
222.995 467.56 222.805 467.323 222.566 467.158 cv
222.326 466.994 222.064 466.913 221.779 466.913 cv
221.483 466.913 221.217 466.997 220.984 467.164 cv
220.751 467.332 220.569 467.573 220.44 467.888 cv
220.312 468.203 220.248 468.568 220.248 468.984 cv
cp
223.435 471.365 mo
223.435 471.203 li
223.218 471.452 223.003 471.656 222.791 471.811 cv
222.579 471.969 222.35 472.087 222.103 472.168 cv
221.856 472.251 221.586 472.29 221.293 472.29 cv
220.904 472.29 220.545 472.208 220.215 472.044 cv
219.885 471.88 219.599 471.645 219.357 471.34 cv
219.116 471.036 218.933 470.678 218.808 470.266 cv
218.684 469.854 218.621 469.409 218.621 468.93 cv
218.621 467.917 218.869 467.128 219.363 466.561 cv
219.858 465.996 220.509 465.713 221.316 465.713 cv
221.783 465.713 222.177 465.793 222.498 465.953 cv
222.818 466.113 223.131 466.361 223.435 466.692 cv
223.435 464.3 li
223.435 463.967 223.502 463.717 223.634 463.546 cv
223.767 463.376 223.956 463.291 224.201 463.291 cv
224.447 463.291 224.635 463.369 224.768 463.525 cv
224.901 463.683 224.967 463.912 224.967 464.217 cv
224.967 471.365 li
224.967 471.673 224.896 471.904 224.754 472.059 cv
224.611 472.213 224.427 472.29 224.201 472.29 cv
223.98 472.29 223.797 472.21 223.652 472.051 cv
223.508 471.889 223.435 471.661 223.435 471.365 cv
cp
f
230.136 469.032 mo
230.136 469.676 230.284 470.172 230.578 470.517 cv
230.873 470.864 231.26 471.039 231.739 471.039 cv
232.146 471.039 232.498 470.862 232.792 470.506 cv
233.087 470.152 233.235 469.645 233.235 468.984 cv
233.235 468.557 233.174 468.188 233.051 467.879 cv
232.928 467.571 232.754 467.332 232.529 467.164 cv
232.303 466.997 232.04 466.913 231.739 466.913 cv
231.43 466.913 231.155 466.997 230.914 467.164 cv
230.672 467.332 230.483 467.576 230.344 467.894 cv
230.206 468.213 230.136 468.592 230.136 469.032 cv
cp
230.059 464.217 mo
230.059 466.692 li
230.364 466.375 230.674 466.133 230.991 465.965 cv
231.307 465.797 231.7 465.713 232.167 465.713 cv
232.705 465.713 233.176 465.841 233.583 466.095 cv
233.988 466.351 234.302 466.721 234.526 467.206 cv
234.75 467.69 234.862 468.265 234.862 468.93 cv
234.862 469.421 234.799 469.87 234.675 470.28 cv
234.55 470.691 234.369 471.046 234.132 471.346 cv
233.894 471.646 233.606 471.88 233.268 472.044 cv
232.929 472.208 232.556 472.29 232.149 472.29 cv
231.899 472.29 231.665 472.26 231.445 472.201 cv
231.225 472.142 231.038 472.064 230.884 471.966 cv
230.73 471.87 230.599 471.77 230.49 471.667 cv
230.381 471.565 230.237 471.41 230.059 471.203 cv
230.059 471.365 li
230.059 471.668 229.986 471.899 229.839 472.057 cv
229.693 472.213 229.507 472.29 229.281 472.29 cv
229.052 472.29 228.869 472.213 228.732 472.057 cv
228.596 471.899 228.528 471.668 228.528 471.365 cv
228.528 464.288 li
228.528 463.96 228.594 463.711 228.726 463.543 cv
228.859 463.375 229.044 463.291 229.281 463.291 cv
229.531 463.291 229.723 463.371 229.857 463.531 cv
229.992 463.692 230.059 463.919 230.059 464.217 cv
cp
f
236.963 472.492 mo
237.111 472.13 li
235.116 467.108 li
234.994 466.82 234.932 466.609 234.932 466.478 cv
234.932 466.34 234.968 466.212 235.039 466.093 cv
235.111 465.974 235.208 465.879 235.333 465.808 cv
235.458 465.736 235.587 465.701 235.722 465.701 cv
235.955 465.701 236.131 465.775 236.25 465.924 cv
236.369 466.072 236.474 466.284 236.565 466.561 cv
237.936 470.55 li
239.236 466.841 li
239.339 466.54 239.432 466.305 239.515 466.134 cv
239.598 465.964 239.686 465.849 239.779 465.791 cv
239.872 465.731 240.004 465.701 240.174 465.701 cv
240.297 465.701 240.415 465.733 240.527 465.799 cv
240.64 465.864 240.727 465.952 240.788 466.063 cv
240.849 466.174 240.881 466.29 240.881 466.413 cv
240.864 466.488 240.839 466.595 240.803 466.734 cv
240.767 466.872 240.724 467.014 240.673 467.155 cv
238.56 472.688 li
238.377 473.175 238.199 473.556 238.025 473.833 cv
237.851 474.11 237.621 474.323 237.333 474.471 cv
237.046 474.62 236.66 474.695 236.173 474.695 cv
235.698 474.695 235.342 474.643 235.105 474.541 cv
234.867 474.437 234.749 474.249 234.749 473.976 cv
234.749 473.79 234.805 473.646 234.918 473.546 cv
235.03 473.445 235.198 473.393 235.419 473.393 cv
235.506 473.393 235.592 473.405 235.675 473.43 cv
235.777 473.453 235.866 473.465 235.941 473.465 cv
236.127 473.465 236.274 473.438 236.381 473.382 cv
236.488 473.327 236.583 473.231 236.669 473.094 cv
236.754 472.959 236.852 472.757 236.963 472.492 cv
cp
f
260.439 465.841 mo
260.826 465.841 li
260.826 465.355 li
260.826 464.846 260.888 464.444 261.018 464.144 cv
261.145 463.845 261.365 463.628 261.672 463.491 cv
261.979 463.355 262.398 463.287 262.932 463.287 cv
263.882 463.287 264.353 463.517 264.353 463.983 cv
264.353 464.132 264.303 464.261 264.203 464.367 cv
264.106 464.474 263.988 464.527 263.854 464.527 cv
263.791 464.527 263.68 464.516 263.524 464.491 cv
263.376 464.47 263.242 464.455 263.135 464.455 cv
262.843 464.455 262.656 464.543 262.569 464.715 cv
262.49 464.887 262.447 465.133 262.447 465.455 cv
262.447 465.841 li
262.843 465.841 li
263.462 465.841 263.768 466.026 263.768 466.401 cv
263.768 466.662 263.689 466.832 263.523 466.904 cv
263.359 466.975 263.133 467.01 262.843 467.01 cv
262.447 467.01 li
262.447 471.305 li
262.447 471.624 262.372 471.867 262.217 472.035 cv
262.065 472.206 261.87 472.289 261.627 472.289 cv
261.398 472.289 261.208 472.206 261.053 472.035 cv
260.901 471.867 260.826 471.624 260.826 471.305 cv
260.826 467.01 li
260.379 467.01 li
260.137 467.01 259.953 466.958 259.822 466.847 cv
259.691 466.74 259.625 466.598 259.625 466.423 cv
259.625 466.034 259.896 465.841 260.439 465.841 cv
f
265.746 469.95 mo
265.746 471.305 li
265.746 471.632 265.663 471.88 265.511 472.042 cv
265.357 472.208 265.162 472.289 264.925 472.289 cv
264.687 472.289 264.496 472.207 264.347 472.038 cv
264.199 471.874 264.121 471.628 264.121 471.305 cv
264.121 466.79 li
264.121 466.062 264.383 465.698 264.909 465.698 cv
265.18 465.698 265.373 465.782 265.493 465.953 cv
265.611 466.124 265.677 466.374 265.691 466.707 cv
265.884 466.374 266.081 466.124 266.284 465.953 cv
266.492 465.782 266.76 465.698 267.102 465.698 cv
267.445 465.698 267.772 465.782 268.093 465.953 cv
268.415 466.124 268.575 466.351 268.575 466.631 cv
268.575 466.827 268.506 466.993 268.371 467.119 cv
268.233 467.249 268.087 467.314 267.93 467.314 cv
267.867 467.314 267.723 467.275 267.497 467.202 cv
267.269 467.131 267.066 467.093 266.896 467.093 cv
266.658 467.093 266.462 467.158 266.313 467.28 cv
266.162 467.408 266.044 467.59 265.961 467.834 cv
265.88 468.081 265.824 468.375 265.79 468.712 cv
265.759 469.05 265.746 469.464 265.746 469.95 cv
f
270.024 468.47 mo
272.962 468.47 li
272.923 467.917 272.777 467.502 272.517 467.229 cv
272.256 466.953 271.918 466.816 271.492 466.816 cv
271.087 466.816 270.755 466.954 270.497 467.235 cv
270.238 467.513 270.079 467.925 270.024 468.47 cv
273.196 469.392 mo
270.024 469.392 li
270.03 469.759 270.102 470.086 270.246 470.366 cv
270.393 470.645 270.583 470.858 270.824 471.002 cv
271.064 471.144 271.327 471.214 271.617 471.214 cv
271.811 471.214 271.987 471.194 272.148 471.145 cv
272.307 471.101 272.463 471.029 272.613 470.931 cv
272.765 470.836 272.901 470.732 273.028 470.619 cv
273.155 470.51 273.32 470.359 273.523 470.169 cv
273.607 470.099 273.725 470.061 273.878 470.061 cv
274.045 470.061 274.178 470.107 274.283 470.2 cv
274.387 470.292 274.436 470.418 274.436 470.586 cv
274.436 470.732 274.38 470.903 274.269 471.097 cv
274.151 471.296 273.979 471.483 273.746 471.664 cv
273.512 471.842 273.221 471.993 272.872 472.11 cv
272.523 472.229 272.119 472.289 271.665 472.289 cv
270.621 472.289 269.813 471.993 269.236 471.4 cv
268.658 470.805 268.367 469.999 268.367 468.983 cv
268.367 468.503 268.44 468.059 268.584 467.649 cv
268.724 467.237 268.932 466.888 269.208 466.594 cv
269.48 466.3 269.814 466.076 270.216 465.92 cv
270.614 465.764 271.057 465.686 271.545 465.686 cv
272.178 465.686 272.721 465.82 273.175 466.09 cv
273.627 466.353 273.971 466.7 274.193 467.124 cv
274.419 467.549 274.531 467.978 274.531 468.42 cv
274.531 468.826 274.414 469.089 274.181 469.211 cv
273.948 469.332 273.619 469.392 273.196 469.392 cv
f
276.767 468.47 mo
279.706 468.47 li
279.665 467.917 279.515 467.502 279.259 467.229 cv
278.995 466.953 278.657 466.816 278.232 466.816 cv
277.828 466.816 277.497 466.954 277.236 467.235 cv
276.979 467.513 276.82 467.925 276.767 468.47 cv
279.938 469.392 mo
276.767 469.392 li
276.771 469.759 276.846 470.086 276.988 470.366 cv
277.134 470.645 277.325 470.858 277.565 471.002 cv
277.804 471.144 278.067 471.214 278.359 471.214 cv
278.551 471.214 278.729 471.194 278.887 471.145 cv
279.049 471.101 279.203 471.029 279.355 470.931 cv
279.507 470.836 279.643 470.732 279.77 470.619 cv
279.895 470.51 280.061 470.359 280.263 470.169 cv
280.348 470.099 280.467 470.061 280.619 470.061 cv
280.786 470.061 280.92 470.107 281.025 470.2 cv
281.128 470.292 281.175 470.418 281.175 470.586 cv
281.175 470.732 281.12 470.903 281.004 471.097 cv
280.893 471.296 280.72 471.483 280.486 471.664 cv
280.254 471.842 279.961 471.993 279.613 472.11 cv
279.265 472.229 278.858 472.289 278.404 472.289 cv
277.362 472.289 276.555 471.993 275.975 471.4 cv
275.398 470.805 275.107 469.999 275.107 468.983 cv
275.107 468.503 275.179 468.059 275.325 467.649 cv
275.466 467.237 275.674 466.888 275.947 466.594 cv
276.219 466.3 276.555 466.076 276.955 465.92 cv
277.355 465.764 277.8 465.686 278.286 465.686 cv
278.917 465.686 279.46 465.82 279.919 466.09 cv
280.37 466.353 280.71 466.7 280.932 467.124 cv
281.157 467.549 281.273 467.978 281.273 468.42 cv
281.273 468.826 281.153 469.089 280.923 469.211 cv
280.688 469.332 280.36 469.392 279.938 469.392 cv
f
286.665 468.965 mo
286.665 468.536 286.599 468.169 286.468 467.862 cv
286.338 467.555 286.157 467.32 285.928 467.158 cv
285.698 466.993 285.438 466.91 285.157 466.91 cv
284.711 466.91 284.333 467.087 284.027 467.438 cv
283.719 467.792 283.564 468.309 283.564 468.995 cv
283.564 469.637 283.717 470.141 284.024 470.499 cv
284.328 470.858 284.703 471.036 285.157 471.036 cv
285.425 471.036 285.676 470.957 285.906 470.803 cv
286.138 470.645 286.321 470.411 286.457 470.099 cv
286.595 469.785 286.665 469.406 286.665 468.965 cv
283.487 466.61 mo
283.487 466.804 li
283.791 466.428 284.109 466.152 284.441 465.976 cv
284.764 465.798 285.139 465.709 285.554 465.709 cv
286.051 465.709 286.513 465.84 286.933 466.095 cv
287.353 466.353 287.683 466.729 287.927 467.224 cv
288.17 467.721 288.293 468.305 288.293 468.983 cv
288.293 469.48 288.222 469.94 288.083 470.359 cv
287.943 470.776 287.748 471.125 287.502 471.408 cv
287.257 471.689 286.968 471.909 286.634 472.061 cv
286.295 472.213 285.94 472.289 285.554 472.289 cv
285.093 472.289 284.702 472.196 284.388 472.009 cv
284.075 471.827 283.774 471.551 283.487 471.194 cv
283.487 473.626 li
283.487 474.336 283.227 474.695 282.71 474.695 cv
282.403 474.695 282.204 474.603 282.103 474.42 cv
282.008 474.233 281.957 473.968 281.957 473.613 cv
281.957 466.617 li
281.957 466.308 282.024 466.08 282.157 465.925 cv
282.291 465.776 282.477 465.698 282.71 465.698 cv
282.94 465.698 283.126 465.776 283.27 465.931 cv
283.417 466.09 283.487 466.313 283.487 466.61 cv
f
290.727 466.617 mo
290.727 471.306 li
290.727 471.628 290.65 471.874 290.497 472.038 cv
290.34 472.207 290.146 472.289 289.908 472.289 cv
289.67 472.289 289.48 472.206 289.328 472.035 cv
289.182 471.863 289.106 471.62 289.106 471.306 cv
289.106 466.664 li
289.106 466.345 289.182 466.104 289.328 465.942 cv
289.48 465.777 289.67 465.698 289.908 465.698 cv
290.146 465.698 290.34 465.777 290.497 465.942 cv
290.65 466.104 290.727 466.332 290.727 466.617 cv
289.925 464.944 mo
289.698 464.944 289.507 464.872 289.348 464.734 cv
289.186 464.594 289.106 464.402 289.106 464.149 cv
289.106 463.918 289.188 463.73 289.354 463.58 cv
289.518 463.434 289.708 463.358 289.925 463.358 cv
290.138 463.358 290.322 463.424 290.483 463.557 cv
290.646 463.694 290.727 463.891 290.727 464.149 cv
290.727 464.398 290.648 464.593 290.492 464.734 cv
290.333 464.872 290.145 464.944 289.925 464.944 cv
f
295.952 471.549 mo
294.525 469.195 li
293.645 470.025 li
293.645 471.317 li
293.645 471.628 293.562 471.867 293.397 472.035 cv
293.236 472.206 293.043 472.289 292.831 472.289 cv
292.582 472.289 292.384 472.207 292.242 472.038 cv
292.101 471.874 292.027 471.628 292.027 471.305 cv
292.027 464.391 li
292.027 464.032 292.099 463.758 292.235 463.569 cv
292.374 463.379 292.575 463.287 292.831 463.287 cv
293.08 463.287 293.276 463.373 293.424 463.543 cv
293.57 463.713 293.645 463.965 293.645 464.296 cv
293.645 468.228 li
295.467 466.314 li
295.693 466.079 295.863 465.914 295.984 465.827 cv
296.102 465.741 296.246 465.698 296.415 465.698 cv
296.618 465.698 296.786 465.763 296.925 465.891 cv
297.057 466.019 297.125 466.181 297.125 466.374 cv
297.125 466.611 296.904 466.93 296.466 467.325 cv
295.605 468.114 li
297.267 470.728 li
297.388 470.924 297.479 471.068 297.532 471.169 cv
297.584 471.269 297.613 471.369 297.613 471.458 cv
297.613 471.716 297.541 471.917 297.4 472.068 cv
297.259 472.215 297.073 472.289 296.847 472.289 cv
296.649 472.289 296.494 472.238 296.388 472.129 cv
296.282 472.021 296.134 471.827 295.952 471.549 cv
f
299.475 472.289 mo
299.23 472.289 299.02 472.21 298.841 472.051 cv
298.663 471.895 298.573 471.672 298.573 471.385 cv
298.573 471.145 298.659 470.936 298.829 470.764 cv
299.001 470.589 299.209 470.501 299.459 470.501 cv
299.708 470.501 299.919 470.589 300.099 470.759 cv
300.273 470.931 300.362 471.142 300.362 471.385 cv
300.362 471.668 300.273 471.891 300.099 472.048 cv
299.919 472.21 299.712 472.289 299.475 472.289 cv
f
307.536 470.283 mo
307.536 470.483 307.475 470.701 307.355 470.929 cv
307.235 471.161 307.049 471.378 306.8 471.585 cv
306.554 471.793 306.244 471.961 305.867 472.087 cv
305.491 472.214 305.066 472.279 304.597 472.279 cv
303.594 472.279 302.811 471.986 302.248 471.404 cv
301.689 470.819 301.407 470.035 301.407 469.054 cv
301.407 468.386 301.535 467.8 301.794 467.289 cv
302.049 466.78 302.422 466.384 302.908 466.104 cv
303.395 465.825 303.981 465.686 304.654 465.686 cv
305.075 465.686 305.459 465.747 305.812 465.87 cv
306.162 465.992 306.457 466.152 306.703 466.345 cv
306.944 466.542 307.131 466.747 307.258 466.965 cv
307.388 467.185 307.451 467.39 307.451 467.582 cv
307.451 467.775 307.38 467.939 307.236 468.073 cv
307.09 468.208 306.914 468.276 306.712 468.276 cv
306.576 468.276 306.463 468.241 306.374 468.172 cv
306.284 468.103 306.184 467.992 306.075 467.834 cv
305.876 467.535 305.671 467.308 305.453 467.159 cv
305.238 467.008 304.964 466.933 304.631 466.933 cv
304.155 466.933 303.767 467.119 303.473 467.494 cv
303.181 467.866 303.033 468.381 303.033 469.028 cv
303.033 469.333 303.072 469.615 303.148 469.87 cv
303.221 470.124 303.33 470.343 303.473 470.522 cv
303.617 470.702 303.788 470.838 303.989 470.931 cv
304.192 471.028 304.415 471.073 304.654 471.073 cv
304.98 471.073 305.259 470.997 305.489 470.847 cv
305.725 470.697 305.929 470.467 306.106 470.158 cv
306.205 469.977 306.311 469.835 306.424 469.731 cv
306.538 469.629 306.68 469.575 306.847 469.575 cv
307.044 469.575 307.209 469.652 307.337 469.802 cv
307.469 469.952 307.536 470.113 307.536 470.283 cv
f
312.903 468.995 mo
312.903 468.333 312.756 467.82 312.467 467.452 cv
312.178 467.08 311.786 466.897 311.295 466.897 cv
310.978 466.897 310.698 466.98 310.456 467.143 cv
310.215 467.307 310.03 467.549 309.9 467.871 cv
309.769 468.192 309.703 468.567 309.703 468.995 cv
309.703 469.419 309.767 469.787 309.896 470.103 cv
310.027 470.422 310.21 470.664 310.45 470.832 cv
310.691 470.998 310.971 471.085 311.295 471.085 cv
311.786 471.085 312.178 470.9 312.467 470.527 cv
312.756 470.158 312.903 469.646 312.903 468.995 cv
314.53 468.995 mo
314.53 469.476 314.454 469.923 314.308 470.332 cv
314.154 470.74 313.938 471.09 313.652 471.38 cv
313.368 471.673 313.026 471.898 312.632 472.055 cv
312.232 472.21 311.788 472.29 311.295 472.29 cv
310.804 472.29 310.362 472.21 309.969 472.051 cv
309.58 471.895 309.238 471.667 308.954 471.374 cv
308.666 471.076 308.448 470.728 308.296 470.327 cv
308.153 469.924 308.077 469.48 308.077 468.995 cv
308.077 468.503 308.154 468.054 308.301 467.646 cv
308.452 467.237 308.669 466.888 308.95 466.6 cv
309.232 466.312 309.571 466.09 309.969 465.931 cv
310.372 465.776 310.813 465.698 311.295 465.698 cv
311.786 465.698 312.231 465.776 312.632 465.936 cv
313.031 466.093 313.371 466.321 313.659 466.611 cv
313.945 466.908 314.161 467.254 314.309 467.656 cv
314.455 468.063 314.53 468.506 314.53 468.995 cv
f
320.713 469.113 mo
320.713 471.268 li
320.713 471.61 320.637 471.863 320.482 472.035 cv
320.326 472.206 320.124 472.29 319.87 472.29 cv
319.625 472.29 319.425 472.206 319.276 472.035 cv
319.122 471.863 319.044 471.61 319.044 471.268 cv
319.044 468.686 li
319.044 468.277 319.031 467.96 319.004 467.733 cv
318.976 467.512 318.899 467.324 318.778 467.181 cv
318.655 467.035 318.459 466.961 318.196 466.961 cv
317.665 466.961 317.317 467.143 317.148 467.512 cv
316.981 467.872 316.894 468.396 316.894 469.079 cv
316.894 471.268 li
316.894 471.604 316.817 471.859 316.669 472.032 cv
316.512 472.203 316.313 472.29 316.065 472.29 cv
315.818 472.29 315.617 472.203 315.461 472.032 cv
315.304 471.859 315.226 471.604 315.226 471.268 cv
315.226 466.631 li
315.226 466.326 315.295 466.093 315.436 465.936 cv
315.578 465.776 315.764 465.698 315.991 465.698 cv
316.214 465.698 316.399 465.775 316.549 465.92 cv
316.697 466.069 316.77 466.274 316.77 466.535 cv
316.77 466.688 li
317.053 466.353 317.355 466.106 317.673 465.951 cv
317.995 465.788 318.349 465.709 318.744 465.709 cv
319.15 465.709 319.501 465.791 319.792 465.953 cv
320.085 466.115 320.326 466.362 320.517 466.688 cv
320.792 466.358 321.085 466.112 321.399 465.951 cv
321.711 465.79 322.057 465.709 322.438 465.709 cv
322.878 465.709 323.263 465.798 323.584 465.971 cv
323.902 466.145 324.142 466.396 324.3 466.718 cv
324.438 467.014 324.507 467.474 324.507 468.104 cv
324.507 471.268 li
324.507 471.61 324.431 471.863 324.277 472.035 cv
324.123 472.206 323.918 472.29 323.666 472.29 cv
323.419 472.29 323.219 472.203 323.063 472.032 cv
322.906 471.859 322.827 471.604 322.827 471.268 cv
322.827 468.542 li
322.827 468.193 322.812 467.915 322.784 467.706 cv
322.755 467.495 322.673 467.318 322.545 467.176 cv
322.412 467.035 322.213 466.961 321.949 466.961 cv
321.736 466.961 321.533 467.029 321.34 467.154 cv
321.148 467.278 320.998 467.452 320.89 467.662 cv
320.774 467.936 320.713 468.42 320.713 469.113 cv
f
245.272 468.602 mo
245.271 468.6 245.271 468.596 245.271 468.591 cv
245.271 468.596 245.271 468.6 245.272 468.602 cv
cp
f
245.354 469.121 mo
245.355 469.121 245.355 469.121 245.356 469.121 cv
245.325 468.973 245.3 468.827 245.281 468.681 cv
245.3 468.828 245.325 468.974 245.354 469.121 cv
cp
f
245.89 470.625 mo
245.887 470.619 245.884 470.611 245.88 470.604 cv
245.884 470.611 245.887 470.619 245.89 470.625 cv
cp
f
245.839 470.525 mo
245.825 470.497 245.812 470.469 245.798 470.44 cv
245.812 470.47 245.825 470.497 245.839 470.525 cv
cp
f
245.505 469.699 mo
245.584 469.95 245.679 470.193 245.79 470.423 cv
245.678 470.188 245.584 469.945 245.507 469.699 cv
245.506 469.699 245.505 469.699 245.505 469.699 cv
cp
f
251.545 462.392 mo
251.859 462.392 252.09 462.417 252.355 462.462 cv
252.43 461.985 li
252.43 461.985 251.698 461.76 250.736 461.838 cv
250.66 461.579 li
250.959 461.516 251.184 461.25 251.184 460.932 cv
251.184 460.569 250.888 460.275 250.523 460.275 cv
250.159 460.275 249.863 460.569 249.863 460.932 cv
249.863 461.25 250.087 461.516 250.386 461.579 cv
250.469 461.869 li
249.448 462.009 248.635 462.407 248.635 462.407 cv
248.779 462.848 li
249.397 462.643 249.933 462.517 250.419 462.464 cv
250.895 462.414 251.253 462.392 251.545 462.392 cv
cp
f
245.878 464.803 mo
245.882 464.798 li
245.906 464.768 245.929 464.738 245.953 464.709 cv
245.757 464.569 li
245.452 464.345 li
245.435 464.37 244.955 464.811 244.576 465.626 cv
244.56 465.6 244.541 465.575 244.52 465.551 cv
244.407 465.427 244.248 465.363 244.046 465.367 cv
244.044 465.367 244.04 465.367 244.037 465.367 cv
243.912 465.367 243.826 465.326 243.77 465.276 cv
243.826 465.205 243.86 465.116 243.86 465.017 cv
243.86 464.787 243.672 464.599 243.441 464.599 cv
243.211 464.599 243.023 464.787 243.023 465.017 cv
243.023 465.249 243.211 465.436 243.441 465.436 cv
243.478 465.436 243.512 465.43 243.546 465.422 cv
243.648 465.537 243.811 465.636 244.05 465.631 cv
244.173 465.63 244.263 465.661 244.324 465.728 cv
244.393 465.804 244.417 465.913 244.424 465.996 cv
244.423 465.997 244.423 465.998 244.422 465.998 cv
244.15 466.742 244.227 467.667 244.227 467.667 cv
244.888 467.694 li
244.902 467.357 244.95 466.767 245.12 466.3 cv
245.449 465.394 245.861 464.828 245.878 464.803 cv
cp
f
257.295 462.944 mo
257.065 462.944 256.877 463.131 256.877 463.363 cv
256.877 463.398 256.882 463.432 256.892 463.465 cv
256.777 463.569 256.677 463.733 256.681 463.972 cv
256.683 464.095 256.651 464.184 256.584 464.245 cv
256.532 464.292 256.465 464.317 256.4 464.333 cv
255.908 463.644 255.303 463.224 255.303 463.224 cv
254.828 463.731 li
255.187 464.057 255.553 464.466 255.908 464.975 cv
256.155 465.328 256.407 465.782 256.618 466.235 cv
257.258 465.931 li
257.258 465.931 256.966 465.208 256.555 464.561 cv
256.626 464.536 256.698 464.497 256.761 464.441 cv
256.887 464.328 256.948 464.168 256.944 463.967 cv
256.943 463.838 256.986 463.75 257.037 463.691 cv
257.109 463.746 257.198 463.78 257.295 463.78 cv
257.527 463.78 257.713 463.593 257.713 463.363 cv
257.713 463.131 257.527 462.944 257.295 462.944 cv
cp
f
255.635 468.696 mo
254.753 469.124 253.304 469.692 251.396 469.958 cv
250.647 470.062 249.921 470.1 249.253 470.1 cv
248.384 470.1 247.616 470.035 247.027 469.961 cv
246.354 469.876 245.828 469.773 245.507 469.699 cv
245.584 469.945 245.678 470.188 245.79 470.423 cv
245.792 470.43 245.795 470.437 245.798 470.44 cv
245.812 470.469 245.825 470.497 245.839 470.525 cv
245.852 470.551 245.866 470.578 245.88 470.604 cv
245.884 470.611 245.887 470.619 245.89 470.625 cv
246.08 470.981 246.307 471.308 246.566 471.593 cv
247.466 472.577 248.383 472.733 248.391 472.734 cv
248.406 472.735 li
248.419 472.74 li
248.427 472.744 249.24 473.006 250.476 473.006 cv
251.692 473.006 252.886 472.761 254.022 472.276 cv
254.864 471.845 255.661 471.191 256.056 470.608 cv
256.361 470.156 256.582 469.675 256.712 469.175 cv
256.782 468.908 256.837 468.482 256.804 468.033 cv
256.556 468.201 256.164 468.437 255.635 468.696 cv
cp
f
248.678 464.552 mo
249.651 464.552 250.439 465.34 250.439 466.313 cv
250.439 467.285 249.651 468.072 248.678 468.072 cv
247.707 468.072 246.918 467.285 246.918 466.313 cv
246.918 465.34 247.707 464.552 248.678 464.552 cv
cp
253.829 464.596 mo
254.43 464.596 254.919 465.084 254.919 465.685 cv
254.919 466.286 254.43 466.775 253.829 466.775 cv
253.229 466.775 252.74 466.286 252.74 465.685 cv
252.74 465.084 253.229 464.596 253.829 464.596 cv
cp
246.161 465.012 mo
246.135 465.05 245.753 465.591 245.451 466.421 cv
245.225 467.042 245.235 467.948 245.235 467.957 cv
245.235 467.96 li
245.235 468.172 245.247 468.382 245.271 468.591 cv
245.271 468.596 245.271 468.6 245.272 468.602 cv
245.274 468.629 245.279 468.655 245.281 468.681 cv
245.3 468.827 245.325 468.973 245.356 469.121 cv
245.793 469.232 248.405 469.841 251.323 469.435 cv
253.153 469.18 254.542 468.639 255.386 468.23 cv
256.086 467.89 256.537 467.583 256.71 467.456 cv
256.537 466.814 256.059 465.805 255.621 465.177 cv
254.367 463.386 253.016 462.927 252.323 462.812 cv
252.058 462.77 251.846 462.744 251.545 462.744 cv
251.266 462.744 250.919 462.767 250.456 462.816 cv
249.992 462.863 249.474 462.986 248.873 463.188 cv
248.031 463.47 247.269 463.912 246.669 464.468 cv
246.649 464.487 li
246.56 464.569 246.374 464.741 246.161 465.012 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 20.1.0%%For: (Ayib) ()%%Title: (Egypt Pyramids Landscape with Caravan of Camels-3 up-02.eps)%%CreationDate: 26/07/18 8.16 PM%%Canvassize: 16383%AI9_DataStream%Gb",Kq0o&1oCmS6hLeJV2c'WS@g'9.`+[YfI6g:JU):h:1ZshV[D1N,.N0+n1QuJne":VVR]`gYlDeb;9k1Z=dWj+O"s$b@-Y=\S%bj6]%Ql3s'&K\b^G5J78iCBB<AYeIucOZ8G/2d7N-nU:=4GoQU^USj*aE>99c@!ZjU@cpYMHmK#Z873U926&oS0[hh`JfQR)#OsV%]s)!4CgE(u%:5'_EJf92LL3lAf-AWXBGMZ,T;e/D+8f$u'a8[i&;5I'([oZBr;aS:."\<_3&i$0)Q*m`J:ZUn!KH&+KJL.\.XX`'%.5Ie,dbr6L;3dtdT9FVsja=rq2829h3JBu?M;hV[@eLHPr(m>]Ws]bFKh.k8<"q5\e)33eesHc,rupkrA*-^]C[n\[01K!B_S8>9%2uspt5LhQTZ,k,?"$qJYKg3tb^ku$J(IA#aof8.%E^Br%IB"#sSD<'<0]J6TL11,k9dkMm\_qr,E)a_)J^TW%e>,.j-&D_AE$B,<%JZ-h<QjT8GB[hu2&HtC-%S*ERn_'ho1i*FU1MNJU!!R]e$uAKN3l3!T_$D/6RT,&)0+4o8L]^7Ho`O^rM!FuePCI>&!Uko_%lA8+%9hQ:FRY(d$<BrH(BVhOh*.edt`WD\J!+ce>Nd>ShN6Zssa$Z*uo_mlL!k!^_Ct!K_c9u$^iY\3.bL1W;(pkTQMeP`lhL$ITGdD_A%N)$t/0(^)1.mG>j#JLsW4?&`S!DXKCf/?e!nOg."fVnN0ml+J6Ru/Hn`G:l7NAp>1[K5Q^\L)Al^af+CXg>Pu0F[N*F)WH%3r+9s%eJZ(1\imZ1rA?\3_2H`<f;r.oF*hJ\)fY@I=Hg#c!R>Xl+D2/#MS*tFTLGNl6Qclg`r&YLXIqXdJ.SW#JN;fsXjOLmp$8^2O;%;r%c0_>f;%u&H2s^lG1FnMV?#r`'`+dt!c;3]gc_4;,8cp!dKMtcT7W&.SP`YV1NmT8M$O3GY3[PptBb_C4!K4$cZ_On)f.<[!:@8LL%lE>Y(&qs242Y=Rfb.onB9p)XY)C`<2S"U-JgCf%a>;=7OeuAZ0J5*`h)Jc5sA?mcqJH%Q0a+D1SAtmcs6;2!oG.AcW31/3s:)f/)%!.Uj>8:J<&Ch<o5J!HA2Q2k/qbj;q%J!q`lc"d!s+h)1)n%dJ*VHTi%;o04UKa=eK66uCtL+)[I$4;dl0j8!O8V](b+"4!3BHWb'%k%G1]Z7o"'6IHQBdgVeE1N\r.JZHWr_*f-'Tbs5,(m[`L)(*C5TWKn_+H'm;C^?7Z-j1q1:e4D2n1P,4!JN(</'EO-"sob`j`"%P%*.]$D_Pe$E7'o9qKu0R_crsjC@8TUKU9]k(1D*Fh:r8#C*#'rVV/q`'3Whu8c%6#nSd(^]UM1&L&sS2%K.rB%*lY&tQ)-7o*(r"#%9gpLg,,khO!#5ZF-^b'AA\_:sacJ=s,q5!&eHWm@E&\:6$OVtt(e?Fk=q-+"_^$WB:^BnU?O.>c'Ync<(Wq:5#daJ`Q(]U^.J&eD%G#Vt@"of.WTE'OQ3@oqq3;a/8&k;o<2uuVS'G;,,B+t&rJq%0QE<[*mPr'm,m5'B-;*cE>_K5sh)cH^o;&C>SI7"DV&V;8.XsY'<%-.6JV0gIZ#p`q&G#T8Ig..E:XY`UaZRk3J'LRJN[&HPe)JGapi!D0/>6uuna6t)b#:s]=V3;e\d!<>.c"sX4B((Lfk,,j!fYb:A3%)$Q;"!9lrj;!9;88fAG;E'UU(8(0`ViP;6T0@>SSkT;?QoIm6/"T24V"DWhj#;lacC^,_:9$;l%/<#fF!dg5iAnY-\<*68u[?<s)%#7CCQ_N@4CE`l-+@/d+2i",i>CCjiV66AgE=TS+.FYlVOU7d%I!lcen$CJlE0IS*?6U3B43DeWUj?8Lb4Tc%u!E!A>-tFEmSH,*g%![#d25SJ_o@ks1/.QdF'b#4M+.VDcD;,jK.+^m+eEi>a`D?c%Gb;(UXFG"$o2Sp)7L5*Jh^mH,.'5/j)C`3Cl>81`i#qT?bfXiiA%HT6Z*J61+`%+#O3KF+#7RKeWR9I*13h$3!s9EXknAf$u93QN3(%ob$WMlKgp5H(J*.St$i<.G`[3XU?>dtIkPL5`o40Y8OMA:Ot$%K%!l1M,;P%19j[Q#c,mVqQXE@_Lh,5Ct]#(-7gDlW&6p?6T/W;0*kf5aRFq*dup8fN*=_kC0'W9KEZ<E)TH4`:19i8'Ld?\0R"c"%!;&&eJHll(M@_HA%+E"\_)ch*!#E]s!l6'pL9WiHUHt(dn9atp9sQ"r__=B35Qr9)3XcOn;&lMqC^n>\A/P:I"qN(i*>gQLp-\*u%e(,_*!0C)Hf?$81.dAC9K7SfJ!#J"#YU(bc;e-/fe)5bLE0NYF?o4r"<Y*]g_DF@ULsA'VB:8oc@l%$t1BAWAU!*+:_"C!4g6oa@%#R5h&Z<ud&bIi<2!UlaLR)fuY7+"5F$=?mE^8*XE![_Ua3f#49aWai=K*b;'M,&X?bCI^,#"B`Yk('oK+YOBmp-5QD(MK1tI7LLE%RN)$gdf9`,-opL_THR]?!LNqYcK'$"gsofU,&j5PR6_WY""js&Hlg"TVsm+c?IDdAZ2e1Wr)[_jR-j3)$3Aq"#WQ3#R-Q;rPm2,o%!<t*4ClS^.(*Ug?8-pI2N*mkM!HfsOW6bfZ7d!%\bh:3Fa\57d<&CU_BFW?@Jt"3r0hlWs!Dq#TgE:/CSO+9-$>iaEUB`^1&>f[l%WqNEI;u=a3TLpK-JX)9m,tmAWS,uOp32N;_(*XHK;%Q&#Rh.h.Vr34s:*C"YVM;H$eqOY;ZjkdsN=\#NI#R4=T[uIJ'1/4C9unJ$%@&\_r(!&X96VlZu$<<aNAi6eJq8@CZC)EY<QO(r#kW`bpJhJTiJU^f3U0nm1#u@fh/E@N&X(C;BR;&?hBN@F>ci,e@ZQ.2j"uWH3%%<?opWJ[]1#nS>Om/SE5J30G8E(:'n/)ZG%L3Mdq%_agQdGU%!Jp&JKB*N*765gTc9H_R_d*/7&*L;7I`hYng)2qEYN!`t0#`.M[%&jsL.W%!?q22a^]NM<=!!qITd&JG:,&=#pSNulYYVLW8"cDXiZ)4&Yp)2)El3Y4(P?;On(7V6CO2Moa,1"mmJS&B&F;(Wt?+2JJE%73N#3J:!/?<t>EO_%@"s0b"$]*A'<;eeGt&49B>=GU<(Z6S5=b-Ua+WClK^E.&onW&.X7*ec/E"$4nPDi(F?k.3cD7q>A&u@4r5f%!!A$R?%f)M.RJt]6Xbe=J6Bh-#jJ<:C),\&O3RS]TG(K9F@'k1A.!E:(p]2,CRKIr@1:TtLdC>h.C6s^0)/A93sCb#8b8j+?`JG#%M%@isn%%X7-\Y#D6?Sr9@8TUkP!KQmQ5jqGd';TZ9RuD98JAB@2"It(o!?EdC;*aA[e'LlK?)M&>[X^.aQ(S/[3D';STn<$?h&Ds%3aX:@M,"G\'iljL`CtjJKM=6e%$,#b"5Wu#boa!Rmt4E-GKD2^-gU^#`#"V90<BKXoNu^Ns8>aVU.oDd[XJ:2B23`dY]GMd(0W4c%X\`1E;2J!%\4K=uW8;pecZKPQO'[6G)?UJ,8b;7oT<<M4M(bd)*h8b1m9.9'78%W8r+*3/"a'*FjP6GULCTnF:-OQP+I'Jl+l=0g%&f<U8#0>i*5%"!ZCU+eg*!V>V5&EWXT:C4UHqg2sQoas:K&$9Oam)K1>11m::((R#95j#K_=ASd&o964%87Zu8C(j`)''dFASq*k%N>An$_5\EP:9s5$J-to5C7k^:$#)%&_C50aHN_.fWSn7NAJW5$gj4&c]8jf,\e`@b+I&E"Z7qN^(5#bS^')GH+4RSeET]^C&CPq5%bQt.KoAOLD\+EH<jN^ZPZd<mTD5NF78kOl95"9ZH1ib'[jA9qaYF;Z8[:!(\dPG'gWs6(QLdHVt%!6Ye3mU>.*7;X]'gXNG\\Veq%L=A"8$&Vepm6?9A\mQ@g"bi*V:e./oL:-*Q*_-,EEZlY.Jg0ab$@la5r%Z!C7ftRc%fKPG3,'*"1).U@3'ofCRNg)s(-j-57`1$X%!ln/-$c?ZkSPjIuEkqVYg=cfQQRkYC1%eMRT$I_;_TSh7o["R6"`K;8QVr`sLDcclf)Tg]YB;5PB%K7qE<&c03CT'a``V1iDR7Y'%A7V*4W6sr=@S>hgn9i:s/-)n84U439?gqs1cf>/og"kfKog!2BT<"X@6"dps%o++FFaj`MV7XGs"N[f"k_`Eq\'#b6H(i\e%'qdi%rolO"Kbm2uG.AFE-tbjSeD.hLXRk\X88)FqDP<h&NnS13TVZje#Aigs:M84f*c;O@Nh_)IRZCg1q=li+B74uJ`Cqak\M4lq6'F5W%$M@;Ld[8DWm"#UR&Yo7\\.P?sq=cTTK(38U\E_O'K]?[/6^]$U7H;[$;Z5'i$5mDg0^b9r$MT03DD:aMHoba>WN$4rEs'@JnM`eB%iDOUS%*i-g_ud&K"CK'fElY6PA:2Xp3LP#;c!]o-PS+0>PZ<c6@,4W1\Z.KPRs\OJ:MZK&/\(WYVDe*c`ecP5APS@u_u._2pp/"o%emsff.SZ[ZkATtp5tdtY#\Nk?3IV57GE8N4$NZ)O#^?UUGF+A/)ZmHZ%No9O;A)IV/-n)&<'%sJ$`nbZ$u"9"*+H]N%![R/%l)uc%#!BhSlQR\8gVn\IE3r+i+NsfC`G1`T8O'u+bs6dB]*([ZE:Rj5,h8$O1rXZYUP=?n882Z1*s10GAd]la^Za.7CP_![hWk\?7ULf[%o%\IH'"@tSOiL`1fS7qZA_`Z[^*<>1cA6K;hYIQ]^Wg$:Fe^:kgEU%X4>Z\Tp6Q>Gq`!t4Lb.Kp,#,G<g<]3,&4c2?IYl(NNEY_q%a5r'/)=l%WaN8.10N,E3ETR(Bi>::"g6TqK5=9/#rs"gr$U:1T_eY#sA%BiAq.c,J7R?2i3nX?0^^JYWdWgC^I>Y;e'fuf?2=P6X%+TE@G`P5alH:G>NA]LQZI%+R?j)O]uJKeYs(ap3T,aeR+Y*,u'*ofT))#K)KIOi1;lZXGZ1sW`$CHh!s_ep"5^4f4pEB@`5CkCVj%U),^M*jFqmYJW'<a9It'N8V;fiUr/!k2'0AB&b,A+j6]pK\1_=[JN/Z>McXJA3oJRH,Va5qrC%35sbBq+'e#A(V2hNo_+^6X_6T/%NG"B?4$8bgr^!8qVqO'NP/#V0_nr05!uCFE_P=eHGa+L>Od14k?c2W5G';E`s3U?breOugh!rVX(:3;1^1r.LSsB@`l1H&!*lC@P%0@-.*f=@2eSbickNs?)3T`DQJ)B1X/PNlK[OX5;*KeH1WC]el/CcU.TS[W=jmQ!>g:GEl+g;0Zb%W)(r$[K4+hJ]m*F2RMGWP(#q%gH>hLN>;>b.DN(0GJEGb!F'6iNmE0u\=_R&h$t@CEPS052oEgt%so=EA8kt\K:Q#^IIU#.]PBmRE%3j'jTYfnXR[Q]gUQdtn:qB9%s&Oj4/Fi0aq=2<tB6(mf2P%tBmZEF2HIfsCRFq>38`'b&2%49R^*!aB*:8YGap=c9a>NcW5>[6mE;t;`T*%e*^&bhVYnCZ?'_@)I%I.#?0fBC:8jI9-+jls2=VU'58DJr5+G2%c>Ja#hF-_uY)bf;?)]e+tKa/=gbkIL>,K+u56LV9qpL,o)<G$nB`?[JhrCi)HP[or,F%I_i7G_LUeXYJCEO?F)$t?Uq0/i:C$@Ld/FW)o0eT1fQG[X*LYps88sq@@gZB2_\.qIfAq-L/%Q(X"!j;e9ciG/R5]q\S+De*iDP9%&Z$=F^BT(DSakGVC@*[qV%3tRFKX::pW&cTkih\7GKK8>XL9\QNI*-Sq9taoH'GNe4BASMTEmcj(oca'?PJoI"/3J`CAjuA<;(\9%4+Hn,ChC`I]]Q\-2Ii8PI7]88QHcL_=C77!hEo,'I.i'i2aoX>h7=KaRh-VVc7I.$Ic\Eaj4_!r^?Mk@k-/gel^9RL=7!uER4ZY$%c7b^`5%(Acm2!tak@e5Xd:)"Xc:(AF<m,mNKelq,Y?a)8heqD3EK9b3o^2=gR4X/'a/@(h?9$F3FphrAF0mTDi"+]hg7RIk>7BW%%2WTdNEfW.0ggWS'@5.D!$^U`/Mndl)YO06:feS^>]O]A!4"o?"-,/%Veo/)(p@mB(a`pSMIpdVpK7,OdhoLFu44q#*Z#>A>ojHYe%p+7eI*tIf-gR0uANpCnrD?ofWY\mZK[f^k:=LUGuD?oNOY\o2tS,TkDbB>hb^R:3?bkrQnK=b3/#nN55Mb->802Ee0bTA1Z@1qgs%`5g(6_[?KF[OYR`"k6iJq((tC04j)a?7_#iYF"Vt;D_o(5+.tFI,3BQfKkqo9:HuDhlf1WKL(N7$\OGB7+JIE)tKM^fj_]0h%cR-%he3:>h(d(,@F(LtR!mMV41Ofd:Nh6:*J6Omhfmj9CfI`*)qB>uhCbF;3m;h2KUM?9pr(D7?Q:&<s5W$jq6*#Dng._fef3</$C(CA%YK?^t./C39!,qE(pjIEm?lP^:7irT#O'>Morn-jDMRMPGDH$T/oBod\l49^'#_Pe1%>O0ZR(4k*%I"1[qe$]R-eN_a(4k\h"'5Bu%8BEP1)d(ZIJq!sT2U$tsj4sM=gMD7*2V^pS1I?Hi,JSr2GMR?>Na:La&'E"Gdd?X`EJ1[%T(MJi8,3U!l2KK;poU5Q4GEPLrA`S^%52:YEir8Om)\F.Z59K;X+7;@C%Y'7X^)ZQ*+7;?8mQYX1cf+lp?J^0$E"h)Z%Unn0T]b:*oBp53Fuu%4\EA7LkBsf&r&JsV<1U"+%[H[JA27n4!VBrV(it7oL"orfWN)-2Zf6o]<^N`V?IN%<H'KTM'SG+u$ri1_+>eKFpObI4"5F1%(?#?L8o,$f&8_e<8XA+N>k-_X.%lPmU)plL(hUu2_3\A&GV^=.Fq[t,NS4PV(jGK@]#TpQtZOa2Be#O%>3"!8n4V"bHd&pYcUo<#MJF+[3]faeD#ced^%E5n+Y_3_9E%=h6+Ihk<IJ1WKADoZ,+/[jLC<fqeV6AUcH:MZ#3$TDRWU1Dr&D\^4ULr_3CQY6,dSq'L&$o%#7ZNu*6G^>"sslp!kqMLU9%fnEek%?oLKiqk'2.@NZ2,W@uLh:$0?24Pm@ok4Xn\3@&YUadb^RkE*nJ,]fbK11qtu3Ek];:$-,W*L,#5,]e,jQ9?L7r_#$0.id;f>F2]a%RAm2%J*h/hl<?GYr#9)7Y"/?GF+95+b$Y&]'=#U4Eu<e%@E5k?0YXU,Nc36PHpeJ!F6r$%\t/Sdht$Fphg98O;,GE*Yj"("_1h=J%;[C#'64Z._*F.gr"9H.'7^oeI#7nBR*qZ\Ce[O8cC?o:kltZ24rV5)1I%+EDR)2M(bI+.<L\D9as)79$oF3`30YCuM@H2sq!XS]%%YeT/KJ[Q!%N>>OmF;6UWa9Ij.BB5[*T.@Nke>.87`%,e=aF%bRF1lKmTS,<'T8F50IrN/BYcoX1o/S`Sp1IV?6/7J*EB&O&NU#b(%Ts_i`19L95kKCc_3U61iXN?o3s)aiEU%VoQjo5s.Ikn'R4CVD-NPje[5f_Vu@Q\,qF\%"0EMPi@dNA?(q!<5$,Pk]o+3#0YUd+Pq%6JaXOE(GHudN?)3f+7,,6i(;rdN:0I<k'^s#p$nJ]tT-TQFWm0M3jB5HjRH3YsHK*."*jXc+g_skd+?I"q5G4e)3]C:?LHSr1Iad%:0>$ko7tJ-$?'9pAN%8,fO3JfJbf%MMoX]IQ[Ci,"0&:+8omAJ>G!3m[;1B("bUmJm'&Ah2UakV^NA+Xl*139Dt<Rl[U7_iGjPCs%9*)r6G#BUG-s?BZBE!<<?J5H<[q2OWgjPm=T?b_pmN_BNfqb`o;u/#4UtSpgN(%-mp,:Irc1Z_A!fcYn)#m1^^O/m.pc"d>4/?<:%Ae;]4.^Uceg7qY]1QV(3iVEL@b$8,:1B20<BNQ-rHQAPp5/-D61rUSNgTMP5=9/6\H%.ekh_"G<Gkof3nc+`fKuF!-6.nU6\778O%2Kn'k"WjDR6PR%5=Un<ehhhIEK=4,]G_cD3;;`N0_092+L'8"S-ufLp(KgR?0[T<N*Q#TZ(jH;g%q4B>$p92oX+R:j[gN;Ii+S1g%^`,j[F_&emlor@<?QTCHna@(oDSsT*N<?rWgFiuU'8KjBFs@"BCA36AH#);dn$$fa@!!D6LE/;P,@:6E*B(Wb_s_3drn)ZCT:P?b%6)^Kklo`i1\RmL4<e$9e>Z4IJ`O8;VO-F"GnMIaVqt!m@Dt@H4I@4&=0srZU.L-].s/+:qfgf],F/RdWfoGs`n+e0`muJS\BZ&En%G;OUF$h$#RoqpI([K$\Vf6i%5fl3a_^&g2E%FBIdNJC5df6o]<5J(.dBHV'Y\G$q]#<FIR0Dfi<%54\!NTE(MjL<Ucq25_[n:0A-%b?$.]MrWOb%FO'W?Pq5\`^[TH^20'gem7hASg&"'`c1qbrUCZ4=JtgVSLJ*Y^N)9.^B1eu!qN`8gY<MB9=k@<<4d+Cq8[E4r?a2m%h&7Gb]^Q;pS8ZS^p7J$8i.$C&fnBYRGQ<?q_a*]M?3pNHG8f?RF*g/JqhC[Pi9@FrVlF>Qp(ol?b>m-.@C^U<)1Bj."hWl*%pAT$%d4t"PHQ.,;dZ"L5]"9uphM.JF7dr'=`;#-*2po=BYgCB-frtNGcNs%EN,4tah0IoR/XIN"ZCl=:r"a2RfdAF&$;-^"2Pk^0/p*GD%PIp6LN>q4)GG3#HjPW@K2@.r`2nH+c5'YG,#Mfn$\j*1Z_b2;"(`E9p"1^W`o(W!cIqnLZG<l"ZDjgY!Hi"`;4_Od1"!6=dGM([7%/$42k"&0ZiNaj0t4)W'FZKu9$Mc#efO`?AN<8Rck\a*QR%k\l>??3I"Z(NMe70=3B(CeDDKMgWQ>Ehp3'_%#-e:)<bi\q;*GC<7!%s0pZ\jASrWT?L6uo,eG@,($PtgN!/j#jqWYR&s6AY"tta\K2==Vgo+Vqi'pL^VRUN4W'brT1HK^G:`2-!7qaLiQ!A@D+a1S!rmGX%$0p;_S!S2J]F.l,>o@:/CD\/RIE6\gb_C$\+PuG=,rOkgq7;R$`e.l7s,>+0;ml[;`m"H%lBXZ5gXiJFrkDptfIpR0K&Rr`iBU-"%#,AWs[pA?\pAa82'>'hmq&LHale(k,k"Sf$g_%bYaILHb&6b(6LuJmQc)ul`pN6,5%.lLTn[3f?SQAqHR0&D^A-]7$X/t5T&bsPm%V)0TQ-I=)'Ie@?>mg'$o$.IuISr'I[b2O7cQI+rJ9J31g20^o-O%3JsOW/6[?8e/2(?jfTF(Y)URM/,`U\];=AkeH,+SZp8]1Ym(%h<'7A):88kY5D^o<qHfBI9"nSlGBA/@E(#1rIZDlY#bCoh58^YN3$";hWlCbn9cAW*2"rm%_<^s\9#H?4TS!^"PNi'BN=7,7=J,<%1RCeAPuY'DEo;_1#n)i:1k^GT0L/M=5n`Z0*$qiq32",F&Vd4Q0GTJ\?gnUJ+_c$0+_^I!A"'OL]);fHS:Q;OnC(/U&9H7sn:[36%i9/jP#n_$BJnX+(cr-FCdSM&BmP]s$b_a!,n;*i["7SPf1_mk>%l@$+*[hHp"qG;T-R+f+7Fsm1>X)+sPYhYEK"\qtf<k=bWSID"%0%UQd@1/Y'Dc5WR?#$Oq6Z'(;@-V$ar(f,a^b#RpH#rX+VZ;ti\TM2FXbjs?C^9TmAPF\XK!"$E2)XY'e]XLJd,FUO(f0Yi%fACQ%#226Q"@Ycde/TMU0VJAq8/.hT0K:1!A0_N]LM`\?Ta4,g5=D8Sg3d_&T!fPt&eWbc,SCE=:obb&`#tT^'a]ZS6($#f$Z""B,@m#I%053=*Bf6S571%$O6&0.eEXG2HTh*6R&Imd)2'PF#&ZA>j(rugLJW?&'924.MKqbM'cq+:^KtsE.#t9`6Ta6MOO5VpPUB<Q7(l>1X%rn&b^Bbp=cN59;H,XuRN7`/Ze-OcLOUZNtfT[5t=F;)&TP8G$?dV`UDDOA@B&Vd#>ToKD4_kD\"3#O91KS!#8-A!mbNgMX>!]!0F%iA=9U8=25*^h]'QBf\[WL5UqBBOY+siCSY]8ZS$k%q/<l(3kYN.CFe*co;6aM,"7)WXdP!#"+RYYp_o3EQ<UJEDek@OBI)L66-p^%K6i@ack%d-qalE*eO+!i66T`Vcp<?)eb1>Kd[DH3s-JZLC95WS%Go%+D;u$WJD&@tJ.M>f<VRT<"#'j=<W1Hd80Vm4s662qr/W?H%fD:quRc?Rc;&N-f9_Oh2j?%<Sn=(IOJ,Bf7'+5d70TghVaKtgKi%34ag77=20PKOlf7hGi>T/t1bN?1U:N%%uC^aQ0m0krfK_mXL%.%S;87_CK;kC71^cLCb[<gLX4:iuhus*bW2T`#U]ec)j,poqNC*.uY^%o+1bh&?>FW!e(sXf+10Y1&u$k.^5^F9^0D2]rr7CA.Es%YQ%#(R+2%$MYXl321u!X(FX0O2kV-j?F`HtD!"N#q[X/9J!@m_R*GV>LjoG/'dJUNEE)[HU;q^"T'EQF(Mbj<Y;mXQ;ZCMag#(8r%fSG0"+S<<SMA]F7^HO<NBT;2XFQGU.dS]o)%X[4hSd$E:B^WJaNaS57=Q)8[24Ke2^Mb+Il!*%hS>#2:h`#R4Hg1E/Z8@P@<\`*c%']<d[ppO(`Kau8GDe/7q2.+NP8SoHVIgfJIY@b^K7Q,;Xb6TK1G/DiU,H'B4@\rUfp#XI?\>6=r6D%>h(;N-6[3,$jm"_^>AK?`.%PHH\="e->DVL[^haZ4E\!2;eoXI))T1`gBY2+3+l>$%*nD<>B*+`VPGN8E/o%Y;4hKI'p1[!B_%H.b:mqI<Bh4i(2XAWU/,.Y3\a%RKD*@$oo3n9EBGbZiK'7q6eER,>!QV*e;j=%(\R5'.,*UH-!Bs$RU-UPSOGFM8ErbV`m')WBUtuNr^mP]4'p-cu6%[&CBO5bfj1O%bS>#kn?SW!<&ZC%6Up2u#'BMCrt..@n.<P_\=%pT;T)11&dA\B0iqp;o!7*S9F,0^d88nQ'ffF_\Vll7"9%c8i@N-k-c.>h($ueW%R.cqJ7'nJW=Hb3a?.=oj>X\WRN6[/i0#<TeE?2bI3/,bUcWVOao&Irae3L<D\/o;kAZh&K6^]$UbihNU\b(N@LU&V%7Zf)>SLATJ%Qf5r0E'WtZs'D@>AZ**X%T+LZU*b8qX^%8>@mVsVZ<6Wr!id@P:3F&LO0#@Ok!_!6D"a[*.pGI'9BmIfkLC8AX;mTP$9s($Ho2,N%Xo'q]n3;0fUTcFn>HJ9F4g6*(0]:2#7@&6uLUDqbk8[Th(Jd%;,;fL9?7obX\hR>bo0R24+rjU2?%%DF%)sDi9o3j6J-@Wt^$IJ-%gfP7<q:dqA%HnooqpBGG3qg(7,+*p8\C"h&Y8`2\;G4Aj>RLLl1)6lK"F0.,$I"I?97YOO2[q,9F`X=g;FN'3O)eKhB*KC(J>/e7%q3ed#h$I&%Xqr$)^hg/AU2-1?rhJ]Uf]o'R=sP>TE+E8)g$Dp?X/<ep+3`qXjlss;:^9uq=HVcN/:u]#c3UJL?[?%8eTL0ZrtFV&%qBCrseohbakDKrpXo=+D.brO0XqrUmqoVU,CCK)oSn&*Sel:.5dqV%"'c5AaLd\4Bm36\qc_6MEQ;;igpu?$RZF[<Xa`'(!SX'qQ%Olcj4\C#,Mj)\V'%"&:5s5;-Z0XK$WQCr1+6(C]-C#t1=0+:U,2bH_`CLdtdaV.83FaQbT>`[>lehu=L%$%k>ML8&6pWXEo+KMcU%)Ia:/+L+UYel@!,4Il0`?jMn-'XJ9Gb\R\5?fX`5.4@MdX.uOZ<3n)I@q>oGmJ:V&RC3"?\I3<%)06hT>aC*X9K]L+2/0!fPPK95%(@*@GjD8.e)OspgLLY>rTc_H)5[!.PHsIQqWWL".bHJYfWV>]$U(kBq;4QKV+#G#C_Pdisd"%P2_90Wf`W),8jH6aE;*mZJk>e:V%,9+Tmcpej"2mk@T)t_!n;eifYdhY,h_C4kQ^*sLp3jQqJphJrBDWusTd?(UV;bbla&Mr3p.HC"?=G?L('0@R9!4$4OU(P8p=NsrS%*%Yi:J*(FeBM//OJ4>&8!g@?\qGqaF.1/FM\_u;%It3OEJ;H2of)4"PiL3O40U2OPURAO?N0nXpF=P9Ri?kf*I-W"T2?tl]AaZo8%7TR&AHkF:T!ao^Tb`!Bh3I)3uT3-*H#]Xpo>h/1LYc\=o>pVV@EZ0feXbj0S(Rr.tO;UHgCYG<ae$**^_Is.jk\9h*_MQK^%s[>"%Qa+VIBgF->%&-L`2#(A,7k=?9BBraKkU^KR>?S'd"oHrP%b:4A^jMEt@ko]MQq@'$AmCt,)+_)JCDI+fJnW@(N=?3Zd(0gWaRTCG%a$`Q.)(i:,Ko)BWeT@JrNF[8>(uRuD`KD7jjYQVLEgKIS1VqKg*RA_Kq3\:mMmeO_r6f&:D_R*%33AucV3F:S\`2YadF-j\RrdXD%LB%8MYJoLMbucM<Vq#6rSQS\\B]L@AqKMW<W)uA8q5SstK-M7_XYJ=(7g'(j/+?u,k1LH@8,[FLiV?$Erq,U_#>QZCRXK#gcJ[;6%qT=PfnIt]*UfOYS2e2>m'7FGd=5b;^E*6W(#pri)CP*l+1&P32g%3Jhird=C=NOaggO#8qE9+Wa=(g"!W"t%n;+Dk!5fGqh#C[Y`%c)#^]*Ib\V?iA[0jLYd@E8ZA/Yb>r%7UH`\2!>epl-IZ<dd<smJ'!%XfZc<hQo15ON0us+ikuLBKDmW)HQUp^=k45fZ?ABB)b7/g%9\Xi-c^^'6cU_S;Qsl1!$/`qY/DX."&2&\m7h7?@[>n>frRWbdP#EWO-?R=ts6`(8[J8E_\"E:f`ku>BT4j&>i*Eh"_=R<eeK8pH%O(9@ORha*!qgs8"=+d-k!1V:*BCKt<R+/O`i96D3^mRN#elrJq$[Yl:M2!**"*gEN]<<oReqo%(#&OM0O"8S&J+dK;^#Q1]](P.;%8+Mr4`EL"*qjkOf<,'ou$0W7C=3#d5d<fO&;J2Lmj9d2r4E&g"_XV?aRk7t)WV;T'jiq,m0$3V1\G>U._;<kU`LBh;8s@W[/B1Y;%WBj_O["*LtqN&``L*)s_g&#rQ9uSaBHGT3]Q_=0cq"6slMXeRI[$5E8^+j\XB5<-^I.OXmqW]5&BGI$a4"I2H0IoWZ%>kLQg0mHg%(3"2QIY-%dH?BE??V!k5D!?9!CoEn;E7s\SV4A&Bl46uQD?"**_\S0P`?A7%nmA31s&s5Vgi'G$Rsg4&Fo#^TA8V[GZZ=c/3B:#G%5HWXA\NN_hMu3)=h;X:=*i.h0>X8g9`k%c"2d=QR7Bq?a)o(T2NSL'Q4QV@0D/i[ZNi/8`k0%"5N^DTW`D1u`lSpLcJF5L/=Pi$u%&K`RlCfRcccJnq`pWCW^I.c[6`W)<RZNM1q[jBZ=N\+AJHtC,a'Q4<4PTrhGHqdcgNl7?>o\#ff'`K:\U8_VS6Ka/'9C1C'Cl(+0%WdN!pj+aibP@l2b8c?//8I]XBKoL@5QLogs`KGAb8![EU4_6X]%j*BWda2SdpQ$38"_W=i>b62rQEl,o=KWR$@&Xp!K]O,a]scG2%DcY&`jNC`p?]MaKb2_kHAU2!&+"a\(LsOMJ=/qS;mI83FDC$qe?&;K24U6.Fl,W5K/Q+$Z\%FY<hCXU<FDA2t\?XRBA;aInCNET`%h:l_G2gp9\r?M3?'e=<ECD\_u9m1=5/Tt`c?92BCG\lk_9ffh<2'q.n>LVD#eXChK-`i$"JnViB4=s]/XWh2ULfX]E[8O22mkE,6%,9pBo03-2R[F#5Dg[RVO.U7T1qR5@HF]aY>!#<Iu:"l[Kq8h\@::`?md($@VX5p5h&)Tfm&P(JhMtX]D/b'`tgJX<GHX#Y'XCODp%@QE2^:%-_8I_6k@[C9Y\mEXj;g7IN%e]*k7fuA69IG7uir68c]%4^VFD<,(c8(Q*[qoJ"pGE0>^q<eh15CYbP=K_Nko]+-l;=]*J%3D*q'kL""2nK/LZ2j'kmDfgAK'8Yb2*eX.V&Jqc:*4:^fh4rimBRDX9nc??K5!CmXm>frE$bLWLI'hq#gqZZ7N7XZ2F<p6)eum`u%h5d]lG^f"f=/eI-IV2YumE]81h;3Gk8Gh/bCY:mf2u=(XM^'4e?L,`GE:enqK!NB:Yql=:8-t6uA9[+VqRNAGgD`+e%c=POr[QfE%E0rmM3dg#)1!&,Q*+Qb\`p">rpmljtGj?X?:B>,+.fSXBcR$G2-rjKsnmh7/GpBhRcKB2Vk\QH,?>';4nD[DnW=r\>SB59!/'t/3%>pN.a>fUb[`Ke]eDd>e>'j\45e_th%jI37&g$lj)Z5Dh(fQ4+Jamr/M0^UI(WJc\1qrE#:E9H+7,Bl/pCUnB0dPpSqa`?ebOu5MD%r@UPa*dd&*lNoNlC``-roBnV!-$l03n.G-"E_)_`:?%m/%?Z#0oRs+IO!;8"Ghqf5P;a2@?G,f,CVuWe`S00A?Uj\E'Q7P9B-#[=%DoHD*X&pm:amO5`fN;K/=1IlKr6g3N43@lD;KHC?h*%%@^?02jlg$KU2h((cf(8e+8["bDq&)D<q0q?g(Yb+f*dJ1k?QX3Dra)8G%ooD3/=MW*D'Eb/++U1j#+eTH-YIeZRoo$acJ31M0%>\X!0k`]X-\D=iV%JZpClr+OI/4g6`KY?2rqbtA#S]!+HnR]C0UI\h@,Ym*%%m,Ve3UBEggTYuOF+Z?Q_@^Saki2;flb[2QnOn';5H_T0G_*bippEMDn-5JMnA/hL*jWNg9IP#LoS/N,<XbOsTC5+USj5Khii?&B%rPI\*]/.u'QmCIjiH4/R3aAQ7Zg\WVPR>02FJ=H]VM(B(6r6I%M;na#+O9Df<oV\OU_*I[d>/WnO%'_"c_Enl)p0)@Vpk@\Fg0qe%2#SFGo'Z*GUrUBEOAYrKPg$DK.TrfO?c[uc'$5@oc9Z^s$'M%=XW6hCq<.?RWh'XlW0Su[W)3s!Q=B)*RQ*GN7aKO7&\Uu[0;HC0%lA`6;;B\*>T9j9C;'44ffkuCjjc@3)O!]6/O)T:XMrh#U@'`W!YrfZ]N!ZoPN6*,*3Z"VPOj<.LR>c2$Y@X:XiiS\+B3aE"RfqlZ%71uTlRuf%BRtUt]I<6jng\7nlrfatdERN<V+(''Ek4)+Ckko[M('u@:q/\QAS7t)30@)e8jNDr`N.,dq$lp^EJ%Bie]Tf$`9#HSX%$((6p:?3QgVh1am0Z?jsB<(7&>>hSPDoc%PT6a1uHOuQ\l`S.\FDfgVS!30Dc:%,\V6@mep3_\<lnb-?YsZ(d2;-H092@OlKJ&GP%WhQ#[gPpSDF*'K]AZ4&=.!&Dr">Wb3>p_@T/QT2D7oIF6;3*ecrFfWFJu=*bF5FQhEq*P(c<^"SlWg3\N:N:%q`#\f8"]AVpEcJq%J$M"kq00#H5/laWoP(0RpJ,Y=g#Ql),BaF.g3L!>\D;(Wl\B)`n4)U&1\WkNH'[N.hQpt!qfLDko>u&Tl!\[_I/dG9#9bu7m%p@[%\>&QM`UQTW2;'X_:<%A&XZsH5h70:f9F>UI=M#>8`A]\m\b&djmNk54+"hIU[`cjCi\=@='Q`eBjr"Pl*irjYkrmdBQ:"s'<\Bn)%Nls)uZZ9W&C6,Qm3QZSIU0Vr+rMo62h%a"qN)`WiDcEPS%A$PqQe,m#+RchCk(Apgoss-)eh#BBD_5-S8^tm;=/jbJg5TlDZYmBe%+3nBJpXRdD[9SXalB17>]O'qOMtOM'qf_"3X+\TD_fXVa2tp1]ogWgHZa]#[e(\`]l\aSCHH#$;p[s?Rb<0&hm[bIdd<c6K[-qM\%Mj+%,0.,NLZgN_V]KPgJS;02P&$>"ao$Mm@Zok5Q_YrM)A!hYL49Z]Oqc!DJep+d?Wa7eZ23E2337@M*ZJ;p]"j1ob'"G[$^(ag3%p!UM?H=,Jr@JlQ8i4[b*#GoN_'cN.g8ZI6Wh5ACqDHnSs2<'mA\P[:qb73.RW&1999&4#r<_)pP;`ZRN/^i6rCL&eP\^dlJ\9['B%Mt#igH^5JsnObljqVH%TDJmM^?98niKL=]bVc7fOFF#1RdLBOmin\XZ?gik8=Vcf`G?hYhN]dZ#b6rhahoKiEn5au0p>:Uq_JtW[%LojuH_be%ogQ3'^frM&r2ob[-osULZV\7O/s#H<*)`V-1F-(P(O+V$U4-k7n5`s>e_`(K&O\?0N=NNHP='o9hP1O_dZG/n:PEGU/%!b[cMi;bO/!`*t7`C&`WDL7lP^Z=J,4,@OI3T.1o[0;[OB@)5@P[DE:6D#1k:j$q7?pbjQohZ4=0mZ/_P0LT$/Jh=I_:cu'?rI\H%@L"_N$a1p:-1pk<[\955]tb$WV[*Yh*EH3rchD"HT*'4in$t-o>iO4D$HoTPNZ0,!cUe58!qY`Aqq0s66L][<eIQF7(2AV4mHY@F%*WcCE9N)eo3i(j]C:ZhW#'e`@rMaq[rPj@$6nP%:M%(kB\3p=Ua\6(mHFN;hniDL:pUgpdA*EALY*Kp9?(@2b5L_dKAP!R_170\-%=[krq)jZ\a4sMRB-+O6o_-.mn]k1"fCJVYCRd$`d$UH>E#QnsN\(C/K]0O]76#u7M+X!MFTXtdM#Y!=$V^;e"3!_IS,oB$\h8g>-%JM`inKg+,IR>1?D4aZsG#a\<+ffcV9lO;Sk1No7*c)cL7Dj94MNRGBeU1rVM3J+FLgq5(>jC3i$N$\@N:I>I@@-**N^rsJKO".^u%4'P6K>B?R-e54)f^_SeefV#"a0'Fh#I%8b+-M>@he!-[5Vd+2UJAM%%q:)46&LJ;@`?LXQN@\=J1f-$<D9V'SPm`3kE81hEa+-c7%>o'hW'!,F^[,/D=.F#KVm7'IVh.[9NXO:/*NVGpuAa$#h3k@,,?"kF@WfTNPB_\V82e[4%bf?n&l#[*Ng/\O@a.t&^]bq%U5VjBt%W&Wh"jlFg$;(aD6>ZXqe8Jq(.+>>LV2gb][9[[NbXU?\6)1XHJdcJ_*(%%H@g;-:k8*6FLIUF4:5N&'n#%g"R7];ap_4T8+<<.U7%1>[O!J4%s7pmc9hQS^T27;rjc/KU@"cnZlK2V6o@!PI*^,NLW_@adsTJ60'$_'YV`=[72N34$^)K'T2J0S#"`lKnjpjT<"p(]ZfF%F9]'`<,)N.,%Jt]WBDIZN6L<J%rSli0FWu1Z7qeQZEcdl%!rt:qLY-MGut*WKCEMaZk%IEZFT\Y#HWWr^u?.7D/"(9$!8u;#psO`%V[Zd/A^]@1?*YdGMtam9)!pp2'3<EI'n/aCA\r4-Z"8)udD1;M(K=BX>^@;`Y$\r:/i6'+(cL9Z,u.'m#B/VafGWjiI:ltYaj6jF%I(pWd$nQ$OMpLKY$X@(]6scKt8R!`gSPL#XPM!jLZ^?or9e)J='r,p`BA5+VP^1GoI+V:GrZ(F''#*<Q2*)6O:%hQa_BMc*SLJC<%o]dWc+S]\T3)2@fJUk)uJ^d-S%a^t+3I?^rcRYEm-^M::qj>*>0k(JiV<^j=[W*oe*8Ri;U@ZB8ca9s``mVke.(W.'Y9"aQ=uoJe%9iPIQp682AE_i[e.+%^#I.hR*Q#F')FsO0E.iA:[qrrie2redcD76L@]@8u--]V7uVMSZmV\1B&)mp^5j\blbo.5G;a#gr+B4:bd%[j.d8[gghNgiBO%a\KU]]Zk7KEofo;M3iI=Z%j?+p<r[BDrb3edeqa]XIn1WnRe!N_'?dcD-qBbauC0t-s8NUN=!pD/QT6N3;p/W%EQhZe*Ug64mSs+c)`HBkGl9)1%%>JUpUD%N;Z4XG@IB^r%%ju\baa[X5\u[KVf'@R.jh'E*#N%qGjP"uGZLW_I?fGs$[X@/8D%gc%4utG#j&1+ED+Q3/4aRk8ejD"<YW\[lP63mS-qS`$E(D%k)tI_Djcj;&DUP_fB"`><iD6mk-HIJQ3K*W<L/^]giYf.UWgN-T_ce20%YrA(DBLdoKm($:_mE<5DNJ6de"e`H9QoCGWqEgU6cEYsGc#FraHFnPo,<>-FBWo?D1b,.2HT(9,e#WY]laR!HnHA\?@UV&G8C[.;%01"HYDb[*pH1PY%_=RCPa#T2_Z>k:]QgM969I\5P1[V43SpGmDF\HtE\?!<A_Rq7#pXpA<>A&dsVNf9:h7TP;2_l4gp[+MV]'[=b%!0aT#<G>#\HI;#)s-tNDGg:@JGO&M!bs]pYmXrngL4LlD8Y(30)+p&h/etQ=<i1&;N'FVV+Bb6T-3J6<>:*'E_9=@)'pCe-hm.Gm%YDJGOQ?u;ZOU<@?'=eOu%ZerZ9(_`7=NsK>5Hp?&:c7F33uT=m!FGD=3kNHh05!8mR"TZ#J'GOXk5bc[eF#]lUZ[<aOa1r.isO&o%>`PL>h'FSbXS3p#RqX@>!-]'_0\'tIC1mrJWkJS>Aojk3h<]rT2m4_?FW\1t*/!g]=J'B`Ra:hY%=6]hcoq@jD6bt*@`o-19Tm]*%(O*Q(]gXf$p%!<+)bc]:#RfaNi^_6jauOZKN9;sYqiEb)J+];t1VNijc#t_/M,5bf0@c3$$/h_(+!R-[^(*<mS'pT.ih.nY[I3Do%B]@f/D.&b(8XH-@_bWELQ$1ac/phWCV"^Ua>"^eZG=$o<8mTsSB'Zq(',(i]S3PQ@\Q%be()lu"9S;Qc0\?$\BYL'jWRN!-kaUd3%+H&.!"G"Y]]QAlSfUck,j:ZanV6fR`'b@4/$1K6%@uXuXERo:1IP^RP$YP#;]+h7I]#Rl:S<(C1j+U>L=R;n:_W#(qJZ6ATV7!Wd%o9r:AV?<L6CE6N.$O;UIO'e:>\44]fU<:93JKO_;\J]IeUSXTT_7RWW.6X=Rm>_Qm4C9mQLZKolFZPNFdhaHXPf1l<pbBcI@OJ\3%Ps1W8QCM5hZHm9[?f>'%R_gnm&:Gk*(SN@(p/o"S66H_eA(ASdKKhsqr0^1@jaNSN<>)5cr0f@nVqkikV9<"'.MYKm^5:@Ho?$53%EE!,8VMr)CAX>\'1"d/..`8Jh<;En'K>5B&@l#U5M+&"N]"CQJI@[fJeYl0F7b>T;H,R_E9U)J:lCKKE5pq+='gWSVF%Ra`0Q^^p%k6GbDd/M$M/.@/#7D/m4CXtCQ"3G7`*63l9fiQ\UP]D4E+&YaW8T#R^[EIcIg7h2]ri<%7_"+[,N0S,Y.pku\R]4G-@A+?"P<TE?%=QL:BS;B4cB0=)SV.Du!R&O!b*ifoX?k^X-2W)HpHuIG3b,S2i&4MjsZOU[>Cp`=o2*',h<#nS_=Ya":diOgQ`^<a(F@)JoW7gQ,%]j>'-aH706bF4GC1Ot:hl."K`%FlVic6:_AU-;W!../^],?=Z'%Ff[uEBb!44A;l+500RjHjq4sG"D'UBP%6lA`k93>.fdT/=lk2%@Z[eW`7t0M!-63R;E)&M:0Mmk8S+C)GDGJ+FDrFuPZNVrHJ%2i6/`6.`T@7@eBpt1mljUB?b,*DSGB\*BFD/Cl:r.dmZ&glRIg#o%<mM?S_D@HCVNe)Eb71gJZ&d40nY4YZG);&/$3+d9>!*b2\fX0K=s%@G^06UEI3H?XDT(3t-c:;:V_`,mOj_pMSd@kR@?8g!/p,Qp%#S<HAfTm:o;Hnif*u_X8^h%sD=KFV?Y[7AZ!ONoYs"D3FJ^=NDV>hC&(^Nhme2PoS5@dItRHJ&:kM@aVM2D?0<#^I*HV_OL[q@7D%YqnDbReg?Q"U_%Qn^Qf5k+!`gJ:P8J?DS]*m$7N@6#[[0$>PEfoW\["q]pG.a;!JZDC.7Q=[9f;ib&In<*d/80r=2WT^H32Wld?f%aJtn"Q"Q7*4js_!B19,tJC)'Q5/[CB43EmFq4=,^e*AIaP8[/7jAYV:CP/LtET2#Qfo$S29#@Q2Qon:^;dOEck8eJA:.h50[>!0U%eXD6u_Wh^PK)X,Fc^*u_>%4/B0/&O:IgQ1!"(:Q']qQ;G,3:^;SKKX((d,.<d'7/*@]JcsXOS+A3)!t+0f$l5'%t=@ZkY(br8b-E%Z@am!Pp&6FO/eZ13sn/>WTM/;HW<fADfOCDe2fY)ZSP[LeN/Ys-RWfg_O?E0#=eC+NA>Z3%#F^VM3f#,CU8&4p7J3uZ;4IUQ]gIu%2%_@qS0.lQlm2Q;UUrA6VUG]SgSH'?aqA2"_gU,]bM3ps4>V*Wgcmr!,MiM(K4;*e0-siK:3.JcNr\>-#/iI7ec9rm8hTkt[WE[j%iDcQA4@n:5Goa/m[jhC@8&$31f3.8I$&hf4k"PK]W]KiN@k?</>&u`Sk8H-7HUB(=5TUL!@5cBfn1<h6IeN%f!bX.l"f6BG(^VJ3%.ek)8fNIo2^!NL)-stTmPm)F#am9H=pi8!].PX&#!LQ+7^+1_Xq&S<iL[k0;ZB].sC#;>S>ZME6T4")ZWD.M)I`[`]W/1L3HZjHM%M=IbZ?B`iP3QR)/$4[uV%M7t\fi<orf?pM_bHq-JFM;6V]sH%fWQ4:!oaY)0o#M:d5o63?l!taLHXRu5+H-2K@X$((?ZZ9GU2Gk+%lFcRdCJp".QHqa])D;)[`1b"]]<b3bp;ddtq?iV)S#D2J2"G'Z.WKLra;"Kf!un5s#+-o:\\hB]?4^9#mJ/,emGTX"%olSaEZE:;%*\KPdCfF4G@%@t]AY"n5*(SQ7Mp67.B`iXc@e@a.3HM`:#i&,:5!fl&HOo<CD2l#cWnesh$/e3%UTE'7[e9%tNn*WQI88=R'P0o4%!Xs(h67Ne^$IIj)/`<6_jg8ELLO;F(@d7;tL:6m.DT;nC<=qJW+-Xn'SU-U,2HMQk2;."cd_k+V8p(Yefo275Wl4^GG7Wf_@[EXq%OS)3>33\>RS>etu:\h`aEPd$?'+=CtMejWr98[!iaIJ@$q=J70I^5Ucg>*.inc3(hHNagul<T/T[AL/.&F[ljA4JRDQAe*0bg1?n%4O1X4-8ORLA-RXn6%$+D1@=A-PSU>j&YRcEM&@QHdP;hpirYLK,W1@!YoUcN;Cm0dMR,Z5o%&,QE2@)04bbjT`DB@4b=nCS%;,'S%`N^O]qFu.aJDYjjA#+"a"!fe./5s'3^-9h'%m"i2ctQ)BQjbWH&A#nmCCEX5&8Za9[')s7,HI\.lg:Z'QY)gM\TFiM3B]FC$Oe'B%1!?UOT!q\4<oA"TN2#VIYf&G8.X&^R;UM39K(>'HWITNEK>n73;7UJ,;\eH>\!"gj`P+9&j\LGWH,#Et9a<-V$tXSbe+?^,45LsV%HFl)d[@JSh`gK)gj[W*il+f=SW0,Zd+KaIGR82@X#"Ge4+*bO\nN4]tQ[aITLmf^`i]&NL1T/Qo;9%5/AJ=JVq_ca>]6C\j8k)#0%bEWgPYMME18o`Vill9F=:otMWZthE&p98^I2ZjG_Vq8REB/rc0[V$o8QK5goKr'@Pm'u#fS_ID\I1i,G+"_qmi.-E9=;><,Nc*_W%//7>k1\mi;#7uM7eJrD3IQs8Z)pc&%XW&*^5!g3.S)G%,0N8m9B*$rO/l1-[E^q?pr!&ggr#8SOfe<]<:O9!.EbNqJ`<cqS8$/FZ%MV-!o:F<9%//.QG?U7&1J#%ZGToM>"6FEXRadTgYA=J\^T^33!QO(dV:t9"bN58efOdNRm3>E\4oB<2$>Q?oqSQO8Y#+i3aYS`h.%F)%n=b::K'-JpN]9]FcV_*TN[/"fkF=LNK&7l%'miVTFV:P++W<#$j3QP.]*6Od=GO3d7?FOC1rkD9qQe.E$6Zl>DY]X^:Q`mA$k%@fCO;SoUi,5nm,N(b:K]f7a3RVIMZrh8hLYKN!ri[2)@,"=%qL]IREC2et+E,$cT7?g56]5t\i\[+BX(JuCZ79e6#B+rQ</b=4"[%MdYTDZuU^!j`nE+E.G1kNLXFN,m^.L/9Wq%"rgBAK.5e==`;FH"Tj)FYH+!@Jn]IY"=WF7b:&kH;qa10KU?iH1&,3fe^a7$:>ts>%AX7d6%`OnWh:"1?#co=_l.C.?^4R$?APfVM&fRF6<6Dn15n_g@;G9rsSLbH!Ntcj)gRiPXq<Mbm\j))D0h3>T>]K'Y-f=e,77*Jk%dcBSnjd:l_L)lgX5R-u^ME:uD:Vu,Y0eY2K?HJB;lE6N2(e.,-ZBO`:>m5JbR`hNg5fp(e>&1JDOsoN_Ee&-p&ZF#M#iLh5EUk*R%B:u/SPV_&6>@5m8EWI:.(Xri&UB/[R]iL&m?U*)9e4KKnh0is>@>&2d-*G,2RIg$'FaCB=nM5X8Eh"ADMEbAKfL]@oZ&nFf$*=&Q%&,=rROK"%uRlM_;h53[0>ANC!/.C%b`X\=QeB)"nni^!")%TDa:c!NiksS'X_DcoXaQ0r\$_eciHS1FrC>(YT:K,_!Yt:B))ehT,%g#5(h;:Z.Z3rh>4PbtH4.07fjnEAOi95_aQX_'.#i]LdQo]*@WmJZDPN/PQuZ?^2MbNHl)p\H`7U8OndCuc]5C'5F\rEs.)jWrP)%dR!mB)#.k_1MCl";qj4^icD&ZI%YA:`E]`l!+);<5_+'%@+ML#Za6Zlh(Z6PW]$%]h+PFe!7(I#F"'a1jjtI0U5%<V_%N)%>tu(?%Mfg@])35>F-@C%#//.[k@!`@an:Kff'G.C0r+'b'KU2jMMJY,Fo2BnGZuZK6&=Vq5Pnc7`rZTSC88fVs%;+Ma\L]<=g#q,X2)%#h%]-Z!7am7BmRq?(]EfVa*cFK4MP\lTO#[;D_"_plDo"mqF0cPNEr-gB`"R:AVTCq)14"P@bp?P1TGkQ9I>%Zh=hp8is@h9Tk5]E"(%kNP]FnJm2WdYRRV1JblY9rD[RG#29OHqo/k'B-!62q@J3$=`jD_<#1#X%-C>Fj<Im\<QH1P)fRQ4?,@/$j)AP,M>O<)jsjK3Qh(-%31RER_Kq@g\Yi;""ieVlX>QVkM.O6L2]jh8Z'9=5Y,;i$%$-f49,j@CDpn@&F1b=1XcTgBlNZ:$cY3q&W1%<McEIcqI/rloJA@pD%=&6hP:PP/N7HbP+[cjR(XRl;(*3,"(c/^<elImsTU9Cm67s*nu`5nTaV_BbGG\1^HV?6WSpB]E>e1d69K$0;El*'?k.3CIq)fXNj%7>dPk'h@0.Cd#4B[ZjctMALN$)Nn9@EH`.G$d87STbmGS)fgSQ%\9)u')Ji":`/iCOV2?Q2@kd_gXd,D4YqIMPBjU7-FQep?0UOO%d/(9JcdFD'5&OX>d61V[r54GcrAHm6\s]U[921mr.j2s)5Zd\Ng[\Mm\:<P7hD,Bp72^md5$Xr"/V)G(jB%fiMUR=`2GsFX^9+gl%%(h]#n!YQ1'0b$U"St@=nu%%F)n;36,f@(ll?7/R[KI@H*,6G`Y&8.0l1Y7=flHfr:Mc]h?tLg=,-H2f&60[c=-Kb9NXOBQnSS%X%L$jWu7QR6WdfhAG>q[^>__[1K0n'+HVOd(Y\?`#\\9_:m[fac`A[I$"iq/psV<TcS!*EBq/J;FD=]tJ?9>eH1Dg52>P]\Lk<UmsS%)B.'P)HPE.EZJIg]0'>8:6l[iEa7G43JfAZ9`=4q]ZZUb[g,Nu-*FF-*6J<LTa8'SbQm@4aXqe6WT*3ORXJIs6H^mpk=MQ^ICQE^%eU[IMDj\udVZ7t<kc3L(b)^H3O3iXEOo'^'\kmflG:*1h2Z(78L8GsMP8aq+fb4c97gW1a/@lp_<q?\-83jS*g.MiTNTIMk2eiUj%J)\m8F;A1?gMMFW]@)!-o$9!4%9qlCS:CqkD+jGlE(BJU(2s4P-YR4BT946Y%+WKAO#F8mPZFj*8.d5<5?&_GT!7kaO2Pt21L.g0%S;I([[UJZ6ZYK/IX*A`c9`aVgn9IHn4c'fF<E8^1T8Cq<]c!cGo3tR5kq&7MD<RS2M,;^uauTX=M4^d?2BXIl,\W[cJ^MNUd7('A%XOl(_-idX31^>gHYZr<Nd?rHfqEtk@gUZKj<]nY5WHPff0<]_m'3#V7-JF>cNL<0OYW3Q&F.3Gp!TYSJ6QNsH?a%)E*mu3GILkeA%k,X1WDW<W;JVMnEDJB^46Ef`X;eP5M,c*RW$HiPW7LD?F]tT)Qf$T,Zl^e^mFZ]/Om@flUWTa*H>ZMAQoYA^g^Ua7c/l5P+65jN9%F8!iFg3Nk8_p)L"Z4qMA!Y+cMf*6Q:FUcnq4r*&cjgI!J(Cn8rUN'e<i\"Wt!>9==)o'T7)>$ka!5sHBbSbt3$9^2&CUB=5O*t#M%0ci0Z0j?B9B.q/)202_BZ".B(iQfGtVm,?"O%9-/8`Fkgi6T;_4c)apO#@q31QtIR_>\?u';,=p4^eVjbfOqDbE4B.8AL\pX3fOM%UgtNaCViHUCWsX(bD@/B#U5)h?H`VXhII:I>urt-J=B>Vb_u<kC;;3#c2'Aapm2!L'tKONSAZ`\PRt8UJMPJ[_7\;m(P'r."J<AV%)=\_lal4Yfdq\C.(*C!t?>Kd)]'d]f1,ATFeqAL)Is!-t]Zdck^;8#&>2"u`lh:*T0=l]2,J]Xg_i)mr(-Xk55=\<$Mg8N)l;a<f%rPf3K[/-F3EX0gd;WA2pQ5RF,`B8R$Gl6TlMbd^*56")o86L@>3pbecS-_>-XT)kr'>314jH];-e/L\)kUlYE-XA#,O$Z7o.MeVI%\=+J4'CkQ`9johp3o<$,<K9)LO<?PH)tG%OaKEK&5!?@LK?f@rDXf'#$&e]OT!nF*!]]l,%TpC(=OlC]hI\<fX;Jg+a*0.(5%7*q%YD?%h<!8c8oSA^ZCGO+'_bourm,+R<F=9464,]ZDn7e(lQBT>u`](Om9:aP,AFq]u'?Ec>6p3%bhIDuNgg)LUbT&Q]%mpf1@#;Yl%-L[NmfNGbJ`_Kkc_9f7E["S=Hh7C<FKWbH<=E)q<>+l5C-L'!S[tP<N/5OPbaI0DI(9.LhUM)i5@QSuB?h5JmEnk4Qo"5g]EdUiQ%+3!G((*oo[#gedcP@gS8qe\<8j`5n[nH%uKBdREe.IB\1_ACV)2jq-7An"+q$)pfCX<RKL,kglYXj5#5&NtT&]R,Cc;PMLuI<cRT%;k)DFhTpuZM<W)./.Wt0rN<f'kgcpo),!2a/L0P?2i5H[U62V#mQ!<OMT^8kmV]9Ljs_o/C<a0-,HBb;>XfFNeS[,uU0q6uA4`9(%>\0:&6sm43mJ_DldC_^*/2RF;bD:aiH$nXCNGR;4>Su"1>S11r-rA#TG(*EZjJUAX,p_dT32V63ijbBL!ht?YZ@>]Ik<s26d>1o1%.]\AGo!?5??UiOU#M8+,jM4?A&_TUI,N^GfMWcK44krWPM'f=,Ocsh,La^cX3O85N't:e\-P'"rLjBa)asp.XS*bWO:G!du/IZXn%JE>&ijeW$ek5)HU\BJ20,DtS.iG9f;8$U"q&Q+bj"0]W`O6*Q]pWH)"nclGpK(UT98duSmNh#p3M0SLeXr1*#*Kc>opSnsnfBd!#%2b3L(M-UhZ0I5rZ_!,S%SKc]"@Mr&0U>P)F;.qQEa<IA+@eR@;MWcis&kgd:7*hFukCJ./0+`j'LEP8b0ha1Z'bS.#'Bd:@U(7B-%.ob=TLlRbc7K.infpD85`tVr.d2IKPm&hO9_!97kj8r1D74!:H46nNBjiLDp2u^Bu-.*[O't::h.U`"b@po,!o6OQth^hK_CFRZ/%L:+OSBJ1\ncPD='.Os,l'C>O_+dNcnH*'FE0^hYk^4pQ3.u@HuSioC#OdGR+YZPEr=7/AKh@GgI'M<YQd6nWZNP."!UbP'3CIENV%#8,Ma4sKn'6M4nX'R4uVl(!:[AT(7?ZB2$Rj%QQYm3SH.!CTk]78C1U6O_12Q)o#c>qgtUm-$m/1nc9CFuF7[Y-;a93X:KG4rQc"%`Q>`j4$YV]7RVeDS!h.RT`7J-H@hdd(Pl71B/S4%KMSa(0(_P!b.nW^.nrPKqnQo/r+NCNh.@9@5k`F--t$3'H7*%,gg<$V$.4J#%lEfG]_*:$Y_2ET&a-*t'C1)?.o#e:@2UV(ic;k/l/^-ZKoO2dSrkZBW<,+(%cF.&KX3VP5@V7aubK^bkJ^nC+j5/PUZdh*2cd%!$%(fp$9g!s0U.T1!B=]t9K-;H.B\&9WFYGq9<q8^I2L=JBMn`mG>8*-L'B?<Zq9O^Z?T6<#kce_/5]W9@Boj"?HfoHbmFqM3aYC>n%%o./,gkFP@"40(p]-gH.up!q*6p@[^W/56\VcX%s9dMdu$V>")>jk6#2.(u]ECN4UJOic8mq1HU:8&]"WEk\elq^`mAe"8id>_p1g%RAil4:kof4-&:p,&D3o?5VkT/L"22icVC@b_<Gqke&0XNnE_K3j3O`n'5t8ooiiDGE0N#RJr2@T]7%o2B$hQ2^uh/40jOcq$OXo`%2],#"(0L3mb+.j_XWckIfrnj<)!C*B:"mHZd.UTaR8t0fh!+?2YS\B?5nn].L2I-o=$*[G.'VniHmMW(kH#dug.ZZ,krd53c4Ra:%>Y,VpgL5=a;&JK?C%=Ah)!Q,h7.[.EBYrc['.'YKHL[:G+W\sr_dT#H"d&u,s&65^3MMWg7/u7eU4iDX2,S.L$d@S7H*R_SY9423%6%JrA<tN&l=\0=s@a-!W.sXSIIg&[L%039`<Y;IXLoRCl:;E4Zp!lGRVO1G],C%cu4n<B-a`AG,*;pU0_eI=[MqG'X`iQAA=\An+%B(c9QOU1WKO-qLGP0PU1PGIfZl&bK>.mU@m(DC+H?P_bD^jkW>g@%U/_t>PT7Z8km>@f^^J5@J.0.W#7eNSMY%*TZ$&`j26"NXr:%_,lC4@K*NE69k^j)?F,nb)YGV8i<Hk4TV=5SOMo=fgg)HC=P/ZN*=WlPX'B<dF>d3BeHTE]$(AjI)ZX\CfBSCQ=]1Y#7h]B4*$of%"W3\>HXN2(=hFCd.n[uG2:n\[BPj)P\F1@1_2eg1o4p?&X_/rNcqdp"oCYH%5.K@k/?3%7&,6s^@JD7"IPKl%3IgO.e+br*bJk'Q%rnIdrq0A`rBpS5n_<Y.^Ve&DbN?H6Unb$aP[9=I+/gR4Kc)/Jh.D(7GT18WfE];[\eZ=#2^s#rC]1ui,P(/VobfmoWl+f]NIm[<G%VC28.oZWerm*,)qk5LVF/P"jH-dN*<g>P$m_U1"A*%EB6.(_$hV@0u9(OPa/FopE)oM&o+oR6e/Q-\.1e!N:*DRc%Y8i7^"KJgMe%)/C=+jTa:2@TUN+XJp9^m6G`+erb5nH06,AkL_huo&gL"oTptQp+bT7?q>53%5S.)3PD"[Vr=/;45`Uto.M2Nr&K\CEU2HSJlrZ.%bY,"IMg7P3\hpfT/d<])X%AlDNNr6Mfa=(L2.a(sDJWb<ERqdHIbs0%?2gj,BA2Q))PQ]tGmBt,o:Z]>#,41(F)%C_1?dq[Fn:.;%eH+33^H^pOmXkt=NXIn?_Kb0'pn;>[Y^<@dEn4]5-'Q0Jj?9)CYaNG\%#KiUkCt7s$&-Wl*Yg%U2*R[Z/!#&0\(l!h0Em@b&`]At%lU@*3Nlf*3U<9/#cf8SS#sH!%!C*\T:\dF@rD?Z<^"_**M_4<1DdDHT;q'S?l4O5A.t)!.1,T%NS-KtIomgp)k1<W%dIuH;^\Krl%Wj(df5Gej3(%@m[otNF$>i.3`<fLO;;I]EnP?@$E8hBnt,c8+`:!n>1"4tgIeoGfaohgRf#W`I#\#lKm@i:qFA]L#KMd_.LHrbDc%k9KNs1+SWRUFcRZF?arJNj6'NrP(l.p;XAaS)nm2]lYs"Hau$O.TBI>o!2[N)sYLLJ-XK@`i^lWaG,P`d#hnl&p.[c>Q.YnF>Hq/%a1!3MjK(t&M2OD`WG;U9!jUkeBCAR,U0*_8iEsBM!#5["-KhJI)&+IlG!s/LOf`L9(%@ghIX-D>)e4#5;r(_Bgi_5Tf!EX^*XJc$%ZQ^V=@h,4)Q%gt;)=dROXWogbY;U0sI<5>^Ub+1(%+An@!:9W1DkM.,XBOojksHS@bF@PL"7Q"3I<b7E"u:^$hf$U:5ZS_A/N5D7%!A_lgPGRlWq*'<,q6Rh\?`$.NT`!!S)nDSU#KZK1aJh,WpXQ%4kR5X"(Okh5@F#d`P6:3EFNo]C=\OjWd"3+s=sC#t&T9!#38crK%Z0V,_EShB&kK7.]7Or0tX@m(Iq/O1DLehDOnE8Ahc4+%'gu::c`Vk7LCpP;CPY&<?oDc>X/&>$TBjn"<Bg&A7OFa0@+oU$`;"I0L%/Uc\tn,MWP.4=tbo!e(O@%49?6g[)3agp0CmPD=3!\s_V0>211!uZ![5oBm21W3bO`!UfA%DAM.g1aF\f)rrn?'lZn_#R?d?f,!H%46!o3-E:D`LA7Q6?@tBV`TuiN0=7t<2G(c`5AbiFoCD2Jh19G-]_P$OV(C=Y?T!ef+*?tb$=a`t;#ce>L]P^O%^p>n2D+R4d3`9%%J<i%$fE*e&A_@<d0"O?5I(#"cMpA?Zpl3<&)g^f3>+[le_CH9t7*TV+3<3JImq[:)iDAj\D9bc^HRfSLojhg/]_ce;-UlpqTpKDN%95i`JrLUm_;<AWuO43Y&2N=H94Zq$>SdHCtoY">fN/VcJa^CU/=)BTf](^uI`R2rBe0f/YX>Be8oGO[u>6``nE%j);lNV(ihh-i^%0#E&Zh`t.)4`!Gr_nOV(d%MHHq9RM0%:BVbXeN'T,RHRPrEd.q*3IUm]m2*+@WIJ56Z)jk>9(nBg2JnD_kVpb-)KFgBfK;jm)-Q^%J>;'OV`@ooNK"ojClVOf8q#_ncd?\Gj_0q8ZL3$ah"B\ab6#?r2GAa8a'iNuDjF:MeW7lMjd"9rrU07m%bR(%=*O@e9qt0n'EN%6%#gV)R\U['?]1WD(pIDPm*6bm'1E(,bFI[9aIQ^g'BmH)<Mf^\3EI(>_Vam.j3R4!8&5@<b)Q/im4`WF)JO_R.mkBm:J$AGO=Y%2U%A,WmqleeUY6\(/u<B"]@aN)l/ebD%RNU6W^U%,P*%7`oebdG1p5FhO/l1+#p0=rlL+lC2?2;EoGhdSRj0_rHM/I(6/+lCmAdCX@2%/6n*QHKG#iGMsYt:]2-EBQ4t$^C,C:I.*D')fERL[c'aZn%u6'o^6D6D-2k:C*<uOU7q!mO!h3HZ8sbQ#BGpF@M:*e3*;pASo*i4%3V%:0?sd(WaMDN$DH25'^(%NFO2JDMq[Rim`l:n/h]9+fH)i@$7[k&4L<^@Zob`g:UfYF-L5;q+7EtgIl/Qd@[7%?K4J%PC(KJUI%6_m8$IBdQ4\)cT>&0p,t_o4O1J]+iQ_e<6kCbkHRj1;DJ#MZSiOF00.AP^mJ`*!:4+lZh2[0jXE_$5]4(f+OofO0%SU=ii"\"nQh%61HWRNu&mC3>T+:gUUInkfK.6s1J1Uhg2j+r9<"rNO=t0mFt-LYJ-JQLMh>@?!m8ZM0%m8B@*o=GPW;ji>Ha%?TE`Y]&=NK^"J"$%kKj[aTUT/U9b-"K%(]BjJeR:n%F:[LDE3n#]&=NKVm?OSbFolH6.Zc=0LZK-n-lm7:SRbD5n;^AJ*$;_FF=23VseD\J\QI$lEATM%DdBLbS:S)WHDb[Q]slY87HosnLZ]>Am:#JZf759$CQHa_cR'L;_9tC`:BP^n>Q)$Zn(+HQXqdP"%Z`F3a3t$\3+eKL?M(-_MdSF0%P45%apA4Q]Tr1b-=T!TBF%1mqcF*U7[OL#nA[r]]l$Z3>$L[6QN3l(N#g:cFo.j(hg`Wl4O^([NgVVV;qNGI0[JISMh8`\<Z>82!%7IR?2[.V\gNA)<hVsUl_,oZ;fF,ON3K+(@q)r^RaCRONIb$s/CdYl4b;k'f\0)Z\<o=%66@#)X=25H(lD[d2dBqa#JL1":$$+<?[%polVJ-Z?sF[ec6F"q+!a[?m3/2T9cUA<Q1IpNr9heB2a]PqE&>6NRAD(s[GuBVB%OYB]WIib170"FSa;5KBp>$]^PYef],Fgte*<%I(c?a-=j6Ca&e;BImMLgC6=t9)sPuk"$]7q+YN$G^a4-4Y&F=Ek4/+J0Sbp*(pSR(_&Sp8hYMVK\hcGrL1SO_"rgkP@DG]6n]<cC%n1"_(X:+K]R:0oF`ltq0)r_2B+(K^=D7kqr1]3hLqb8fY4kVV1]5P_'*1P:)agG;EG&tZ"pTP/F@T9d@hZ++7Z'4L5[7':I4PI48%cNrsOZ2=E'Y?,gTAaf&+AP]uG_b@"QqgFia<W,2cS;nd1ZI8p)_F>g'cjknnD\/HZ&'5LR'ks+4(acbP55V,&d7T*3ioTFJOrJh_%%J!)<^'giZj>k!-;N>S_FoH`KUr]5i<kWP7i(Tb?E^lCY8#.5d8<<)u3i<,%WqtN!mD8PmGk0LVPK!O];3T&?3q;rJSG6Fjb<S1\%XB_+s:Yj7"\]+*_4-O6qbq4s`W:;DoeWP50]s=TA/2BSYe6c-c$9Y`%a:-FYH7^oO>kr6=f-59c/;m2%EOmmflcc_JM]_\/R`,Eo%3V>P>&'hYj?*m/K3O`lZ9_`=-^%05BW@]lmL=U$_(pBOZr<Y&2I2T#OL,Q/&L9gDs/M_rngl4Wo*%O$^DK/LWbPgDa3FaAui4#dP%3pFsX]tUg4,+>BgYRIhmg$*Pj+1.#<W5W!NdTV)_R(@0;FX+(S?CF%eD,A:p=VP(<kka=n<hTo!l*DEkN-jDB(jK.hh5R(#7d4Am%?JW,rl_h-96qjWqP**!dLn!1WP$<[C0/`N%T8p)+f?RIK2BQg)]tPBG_m(ko59k'sq/GBCfHg939bFCmaYqn$\7m-dgZQH`b=J10%4re<bZcE7kSe'Gr/I)_CD*D3)<MO-*`anma"(L2$S.BgI'-A+?2aKX_kfim(DOo$Nonk-A(RlTqZ;7pIjKi".7.,0Ik\8?Ao:Km]%pL,ei^kPl:'IW`H_+mHuQF3B*L1ao=[3'%=*.-4CE1E5s]TKTm.ClVE&GB,Q)F*5,n(6f6#dE/QfG$d$mMLrtdkJ#c1o;A>+uG^B%_HCJn%%fJ4-BB[:,JGO)UO2S,i"j'ar@u5fq@;I0g+/4?:*Sbl9J.;tg/8_Db%Nk1440W))ru/_</G(??2?lT8RP6^g)_D0pXL6)%R$%7ApIm>?m?nPT<8(u\g,&\RitNB1p.T/#KFZ0rrG^nl7FKG"ET+lq1/_K'-mSE(N&":<bTnG+78k)fR`<r'J$!q4qT;(t"=uA4%)4eq4kW=M.AY:aoCM3DGei)6*[]+6D/U%HT@^A[\S"LPh"K???s2r?tAsE]nG0A:eqin(!NI'^1;rO1H$F<N^j1DTu1`W%nf1n$d%((kH.XWFYi4NbSe.`+,E"!3UO2ISnZVL=$3B%2&,Ze)F?iCmdLbt`0<95;;"dG7$]-IBO`_6n+O]qLeLGaALbWC@K5&J='ATQX*a%p5Ec4BA!=Rp?R`'0<?3YI^a:\q:jX3X#L"3L"6(^D/<k!M*LAZ>l+$[1]6FU_TI>jrkbL9:H%_bCoLR/X1%VIhh'sfG=Q::lI4gc%A%Qtb5IEWl9&Y_50:VRYY+.L:XBf(DF\%8Caqa[HnUO3[fs<cT^:tSNm.PHjL>DBfXac+;f_tF9dt*^S\+eeI&"<,hDh_PI2V,ms%g8'/=DJ-^(FI?Tf!nap<kC-B;g7MdiQM1SY$4+@,35a$XQ0.N9P>XWZ-U6D@6$[*11[L.>i(<BBHN1W>l03YE#>=m9TRM9Z@?YS9%(cWt7QfFWP$Nn.diPqA;B0EkQ;!R]FPAJ2.k0$Ob#!POi?_;`CkJuQ&&_#FjDf>).*;Nk;,'6o:l,BHnf/NRp;0ChKSM"Wdok/61%Uo'7.;mk,$-.iDDdApKHb5S$IY6Xa*H?<Sr^;e9aIZYU47a0E@e=KtYG\#%K/3:m18\[,idYp6/?#/XK2lRP[<r3HMiUJVS([^3I%Q)c(2Dg:0KR5L*G(d)(qj/l5a09>IuEr,[%ifgWMg[JMOm?b32k=;*\kq,4NgRabT,Q"Dr6o8!51m.WHQqc2I6F8gMD21-::"Q0G%W+IcrCq:sG=&1KpR:Oc(R@G3G:JR<Pf+\55+/:fD2I066h4Rq1P@r@P[ouRk:"M(`SZY:M;`7o[0&?"6`C[B"Rf#!Y[@Uqf?'F.#%HWSK:S$%LIMN'Oi?DkuDCW`ImPVY(?2I0CbY1FbbFZ*OSmWS:%=_6&>jjK^j-;9t)f9Aou*+l)$FA;X&k@LODF<`'-).h8S%5lMM%4)m/adnlfd$BLZN2`$DPPR5CHfOWZW"#)XnCq?KK]%/lBXg@8\pu:)QZg!p!l/kIDE?$p,DK*nB/@4T0EkcACl\r.67T>qL;)V_/%%TO/.bd-J:lBP:[dgbi[cS1ikl')^\5r:hT`?iL.G"C`UhM=euk4iGa<rormB'H1D=qZdB\1e-))4:2@]0C:YKQJq7^UbbCB:*cq%=hhNKd`':VF`$Yj@Gm;`^8*Z3)D,&JP/->]Q#D\t['inl=Am*FRVLQ;U<DC>[5lI=b`lOo)C5EC=H[\A=B+VH4DIIBiH7d';eMN3%)U[*!IZ4VsW^ce7gR5mTCNCj?)rBdr*0In=c/"1>,D4?-At-C5h6M>Gh+a:/fKI*8a!Zqsk&*_;EjsHP'PU1pk&+pl@]MD2F03;U%VJUBU`PT_YNK*A'%ea;0mm4_E?ije>Ilu?h2J/P7^V5n9,es&2gl6cf#6R>Da8*+(+gDAa,gu?Xh@mk3_k%s/>DBmANNV0Z2dq?M%2Ar_DZI0d&$p,FZLl>kn9J[Z`_q(c6U(?]FoI7r<.rBS,=1>g*0KjBjW>d?KrR$ZD7RP""Z\jK`oV5tSeF5;U&+A6EL2<"J\3+nS%mj;Ue/74on*(,.77W?P:j'8$l219lcQeQU0CD#6R6ZlRPbEe!mbGXgBh.JOF$4)9lbVtr*O`Brn,r;UZ?+m3'fp>Lt?)p.L2+;P!%,"#@f\NUBdf8%!4g6qs.4R]=L4'?/&>]1k$GuW9fmpN8$bI6_EGl2Dt(i/H?7K%@i-dI)Z6_"u5e[[IDk:V`LK.6mYcBsFs:!jt<%:31KY#ne+.hRqY$"(G4Z_h_fI3j&N?nMYlVcsKrt_bhHBg>uC2gYo;"pT;uf)8!fBUsf$_*U\Yo5#-P8HUbj,l<0'%.\EYVVnD9b%M7T8K"s:bI45;]6R$JbogNU/sTW1"a5<W^X*+K[)HSN.Ng(u$soUM8i'5Lq`f;dU!H@Gg>Reg!kbfA6O,hBg\:"HC#A$1'HYq;?@%Cu[Y'oSKt0b0[_=j5ma[]=bt?BF1g"8<oKT9^e!:+%(R<[VO,>[Q'$2<NcTb>&TVCe9d+U0=<@#hBIg@h,43d9O)h&"rj\Qca?a-%h]9*[;\-6>p0oSt7^%K9I(hXr?9*OUm>dIM,dRnbeF\IeCKf-i\$<QSg7REZ?g)_Y_,*2Sbq@%ZY:7AsX'(CNj1;MmD0XEDc!r!q%1-!=^5AF]&dSs--$3iS++doa"@J6-F>USs(f='Mqd-;(mO_uN5*]50b(-/O'JK;XD[uVJ<848KV7&>Tq%k_'Yd_iH+V[JjJI<r>@%n_)0?5<Y1b^'F,$=kin@jl3iIo36W_C0g+::1:ThQ%c'Nc/4CKCSm-<hDTQocMdZ@^Z^"?YUt8cpZ,Oa'CSXiHTeIjgtUA1PFAV5%oWW&X\OCCXGN^]p)jH*OG0$J'(?47Dn(]qWX')V%e*tZ^:4HR\8kg7f%p(m-nYA'WQ'qmoUFaI/hff:$iPdGdDnNUTCJYZ#i64DN%mq:*jMtQ94]t$3Qi@pg.r3l=sj.Jt.1egT1on6_ZhXmq57/H`Yfn#>>]KVg.#,1c(9j5`umet^`kPKE;O6.od:HrP#k+>F$SsrqH%/fpTIBJ\Y9LK>9q4EpG\h7(@lrIcWqPh;s*(Z)m5e9?$F;kG*pBt3R,3Z@W^X,kR+kjo%MZCOb<`U)3D+[^mgJ*Nl\)S;BEmIE-?%@uNI[fZQ'1[:u_hWe$<ceJg_;,/CRf,mj)5W%e:S0bSLTSh>ugh9\25D7n5q+UMO,UU&=fTVou"L4<RbfH*_+)\B=.iqn%BXC+nr%nWD\@Un3C'^5?df+l1B-]JRTA<K(^k3B"=,=m]KU4Ol6AXNWK)1%/E5c[V@u#((\Jj4<_V:N(0t`c',T[:`\,X<ToGBJ#^>p9D;(%^S\8OBogcuYA^ggmZ-Y4f5+TmEQ`N.J.iZkmCb"N0s`@_LdP0>=q,YB[Oo%j%[<l,`GP:%9K.9u>B-#@B6O=!84VO*9pJ/Qo4,r!%i2F3V$isR,V=<g,j]WMgHJNEgVZR2gh.`n#ctDN[S)%*RmaBji7RSj'\DLIMGp:r+qI<I"*t8q@l?*fQ2S:3dM'ppD&%^7o8E7CA%lJ_I^;?;P"!hL@%^Y_);o5I)-Q.X)\V/d&:e7h2Wr>FC7<dHhH:R.YV),LS4(E7"k^#Aq%a2?Q.>b82S2SsMqc:843Rgm@I#4dQh%FoMg[2HW-_O9O9;RAKL1E>Ds:*5GTT2$ON;\t`T^+*jS3_"$d5P@ahro8Uflm-VSPDAHX7*5K,(BsI`njoE\$Pm,eUT6);RS-@P'%#I%Q**\Rn?Lp/kcq_gPE:f_Z6X'.@AlgFoE5LYk#Q]ajLD,&fMY=Gqo+)B$NBSDq$;nc+WhIk<%O".No3pBX=BASkkTG;@A:&,]K%7V:MAD^PE57lKJpX#E4Y;+"l,?HpRF:fI,])rB+`#+8^PWspqtY@%1\:t,(0l[IOrC-rHslSmTKe1W1Fg=L7f=20T,6T+N/)f@8I%P[?Fg?bbQ*rRt(gX,t;o?2Y\B1f)KMDq[mf=[Xc4-J+1hOTot$)m=bQi4aYMfIa#bldrc3/\<fth:HTC#h;NCqDG)oNfJf4\$+[;%8tJaa^Yp!bg^)M8gV/+gZI3@3f2)"IR_/Fhg\E5alSh"e:"%Xs.33CD3UaY0rJ$@g\f]h:X_bBeh^nX#%8VAT4B>DSoc"t7em*o@%r4[Wt27:o<es#e"CHg/"eSfQdCV.<0_bo+[,YltCDg9(jgaP*lZG(eJA>RO#n"ILsha#k8beAPTSGi/0rJ%1@Y1,4)V]'2m'ot*G%n]d_fe\RJurOSa\\ZI>5C!+/=_n5d8fq6!^hf)f9gu</Hq@+Wlmcl_f@q^h8I`)-/NI5Po^4,*1&PV'5Y9#uX\uX`LrV4BHXuWR*%h\=,82@:MB.B>C,IJnoQ^Uj0_E7)Bg?bc+\l:fp`Dn&,>EL83PqGm>qN<pqSmBs&f\uDmjE&!.-/SEG^Dg5?ug%=;DQ%du$+5_1k%XDU8:l2(8@.*Yo)A&V\1o_!!d%,Y_;T:iCFn76e3QSa+t^B$:&FS-Tka2[N42nZ1uc1=,!?bbQ7Hh4t1hq)dk=2-3NQG",N(C<*5%?b`J.VnkBMPP4Zb>Z.DHO/b+q[]eS&_6DeHDd]a3R!noO2R^U4jq\1kf@<_YZEN0TK\/J6CuW0X9t=qCoC5Y8iY[+B7VC>uU9EHn%k<ck"cSU(KWq4oreSe9sjg]a;L/C@`3]aY4lff&#RfN=J33/MZDAD\=j-G+j?.338I5T6U4!a<em?YGBMd(U,_OGZef)*GT4i\U4%[OR$!)7,uD\Vh6O`?,!E@^JoI`S@r7`Tk>95IY!9]N>0ddpM[e]7\A'UT8:mg<Q2$V1ln+*#:0.S#qC&5G(,GE9g=">.OQZI:MBm%eK^%9hg+_QK":jS05n;AgGd@-Rl>Q9SP+I(R-hQVb&"h=\SqJYGhb#L040Otl+?7#B'8'4T?Qm7LL89sD>W'Ms)n@3H#`fC/bA,`%[g2'?8S?Yf]=3*"hHtZ9B\m*A]8ZQNJ$30<3kkD:*?G/BJ+)UIqT5euZbJEtl1jZ*O(<E_rqYb]]!1\UcGlU%9-5c+4?EB;jg/ac%%Zf2LcF`T6mgJTVXqt`Bh;;RFH+*D0_R7Ec%amt7#WT;<iU4PJgT,Vsr4fH^.pJD7[^pGMp!)4M_lnPQ+`Y9Uf[mH&QbRu&(KS8*%a#u!s[u[MHi6%<8X6X__2'In)!?Z^G]`2d3naJ2;\\'$B?$#t5fm<@$bM5,To?ks*n_t3nP#`I"@JSU!e[8EB7X9`0&oZ\,GO=Vh%p!:ee452-eo-roFT5.MX/_2JRj96*1lZUsV^GKBYig[&7fGemugLjjhlc&;/dcuTDQstCas1+(?2'4EOY+:'#BY0#42IBr=bn:iE%jn@jp3rS!t7R=Y/o>f2Ej-pQc]Qh&/ldFdbXeiZ(mXYT=j7V!8j];uN9^bE736i\&!JUFLfi?UnY/T#5q!4Afict2aob2L]\@2(n%4'I9@Xj5a\SG*CMp*KY0P5MoEl/8b9lG^/rgWt*4ibDfsld(&tCju>eB$K&;YdAQ-rIkW.YhWM28q#gCLDuSh(QRu\/%%%?[(WbP%rF*,5LU[)PqEoJ@2fR5n^8^]eZsC&#UpTpQXPLF5Ym[rU2sk1%r6FH$g)iMKgUsP9\C\RXaGYS\f.2ZYA`06]rdd9rZ1P*3^9[gS%5.Y`RDQt,>*F4L%h'.5RK]@-X6"GTVYX"'pi:oDsJk$lb@;38F'IO4%ma/0SrOML>$2jYBYPn.dRtl3[XfPbhHfZf,bLmVtT_$(&%m;9%-PJ5XOh?0(mbLKg4+0M,@s*T'"BC!_-n8J&-&DhhJpMo#.Ut2<`RfHCsCHUCBc%n3J]5[/]/KJd*rnLuQ\1I&ah7.Fnm+/jG%P1^1L[;2%0T"4:/]B/MMcJIFXp:GuJ5(r4=5JSftV/4f)LT?6(97YN>#f#f/M<>n.hDP#ep:Y&4l':?lIdQ0"GHJO@@';bCnG:V3%5XWWDIX=C+Y*&bh^[A8H]AHp4rTUGdmJ]Te`O;tlHG4gu[6M<0nF--O^AmNnU3t.n+,OkR^JXdco"j)BIl>';XbRkQMmGj3NSnf@%X>KpLmQYN1:d]e:45'"#PO8gXS@g`QNkM\#5CKd4djNaq%N*.upqDrAK1P%qou*'W>8NX0?-^btcht3Dria;(Y%iIch/P@In#Sq0%X#EVqiiY:G'-)<E"[M1Ec,pCV[b'j%m$<$?q<sYC^aLi9hu'fU71/H8>["l@XFY;]X3&KHR;_Y^?/8^/V?ht>jq8[pARSAaaWhmV%@g(s9BMOTi,&7Kfh7F=H:#qTW#_):3_$]_n]??`,r6L)SQoK.'rn72%_6GZ'$TAjXd)I<R]L6Kr8D.)4XaT"gl*)2fl_X7h\oWC_%h7hc_;Z`9]pOg39a$8t,//bt>[Cfa]kSlM`f<2:+?m!\LK.HKG-IMGuMMU.J^7RF@l>fo$Q3SPkjl^hHhg`96WQrQQX=kf8r.S@A%J[,X+=M1uH<5>YbIL,EAc'O'ro/Rr5rpK9ZGL,)I]64.r:BR@S1sF"+lTG'iNh_SaIo[%LbC;C+nWZ&1gWcNY[@N-=h!MQ_7,K@>%f[]h<:\=pV:#,8R9o_9L?Tb:/RflqT=ZW\iGgtK%RDkYRG<4^Nboc)sio)JN*e.Lt$d^.r?<LjqSg7+@<:9RbFM[VV(,sOpdK0'f%p[tZ.+Z@nd6eJNs418%E2rrTnSZcFNn$T@NG&EKLN.cA6kZhQBIk,@(#dr9>LF`AZPq2<[@#<sUR$Y#=8fJo-ESKj'5G"7MX`k0J%LKt[m:03ll(.KAKnecM,m\r8;JYZ!7KC.#Pkmts1f3`spOmh<cmt&dq^Ibs?pW%HR3Y2N<rajY%*h6Z<Dm-W2a)Vu+]*gjTDKELE%UQ)rgKVtikaD3abi=<&gY5?jY'aie1$FHf;p("9fn?S&W=AKqDhhkdRX+0!`n21n2?<MNV-jXTo'Muo8\XMm,Q&^SDiVND[6UCk&%@P<.%@!Z\<Wc^7kr>%qs/f$kRIhoV;YRlh%SSpe!8BDR.8#3i'r1HBnh)Cl\s6_9J3i`AI!9MX?`T"IG+s`nf@7($e^8OCm6Am6#%UE=dF.RpOKIHaXf!CV9O*b)I^3o+H8XKUlfS8:,\LqhT.VQ$:b]o\9`Z+7Bm3(-D=8f8<hWGZYHhTtt9jmVUKrmc3se;*h,Bh#8!%NlnoOr`-%k]4Yi6j"koIDQHgVAhLeYo"Stdh:_S:/C/23CV.nEL;.Z?mjk1u-&lmQcu_+Q*BMZsq:cj#=rP$BASG<d1Pa06ZekNY%gFJW%"4V"c(DHHb:4:.:4<>tJe(CMC=4a>&%=;ab9`K)IN:gRfkR]gK/*!h,IZ)l@D`a;_g'nTI=.:h)\]*,fFm%BQUkGk@^/;&(%l8.k2DOH'"+[rDir/A7%gJ5'ZR-!c/-Z6k^Hus5M<^YXO-_6eY[5E>Z]/\d[TGr.n-9clb=da.:^G(FeWnl;lQWL*FQ?IcNC1icM%1\;aB:Rfmo4Q-n0^OGWtrR\XlDq'8b]Q:Dlp\/%/g8G=FbNCqPoj:e<jnc/prC[%?lSkutJ%`I:Xo@YHmHaH:ig*q8\P`D(rpJ&-%YM\5TO:l'SU0Ss7=04qt,Q3)$Fa`B-m]A\qmVHgU\R1pC]19N=>-l,Z#4;-50tS,PhL'`m7I1Ot6#j[2Js?82RT]1Sg\!(kM*=$]%'\gk"[oN1jm\`]g%:C^OS)Z0&XM(oKl`]cI@4bjR?LSX)f3gaMR=9i!]C?P`?!e1Z!*NK5[J]?[ircS#?Kc-0G[Z&m>HH&=93j?O%q6[N9Y%GuPM`'>)p''&cF:F[WlLq/l>FjIiclP'R82I"0o=:=9edqqX$CZMF^0$0X/:H$'6/SmEiH+cnrLlRs+*'oi0dPqDg#8q.%gPSkdq@if"EIDZ]![qM@(,H"3aE>n#0)bI,[hDLR*fA!RA8snE7uPT$lmC'I4Plc?4kWN^@X@e)&[)5W),JPae[fVfqMiZXb@Q2%%fu]G;n"%c@Da)nTBD^84HOEW]"pHb089ND<^jsD\5`uR=#?TW>fJMI?kn,"U?`cfQLaS8/*Sbr3ZM8h=l(<$(Dnl5B#i0OICdfiB%h4$WIDofre^%IXf2:O5Imah&9);8H!&d$mka.(-p?`^6-i!#)<nI6to0<A@"?BEe.-iW2-T)oOBqsk9i-,&C0@$Z$6[.,e"Do54H%rD]OMpYNU^WiLF0l[QG;m@7?Rs,Hk,0,(CoB),[4Vp^!C\p4*M\bu0@Ab5iT9&1c"oRin@pk-0XL`9Q-*j3I@SaN<Qr:33Cl5TM2%mfclmh@P[gc`[9.?_7G;6?bTCC*%<,J%iC;CSb.ig:I77o0U^/5GC15\=SMC<+l4Wg"-.ph=CSX]B.B=F)<Q,_Tq=LgA/-(J%d!E%4ZrT;q<R#;V7FcjCH(]b]6!c3kLS%s_6\don)W'GrBELV%Su6=kLXT8h7Rs8LpmlfIssGGVaT;751b`P9KZc2pOhhqbTq*);r7=n%p["*E+)_$ep9+'mf.[&Jp)C."+>T_6HkEFY^08&-[[o*&h*&K*^[A@TLJ[O"gqoAjZh\=Qr:=e,.teriHhYOFqh"tDq\M#s3-Zmq%rpEcCl9@R]rfr2V"8`("p(W#4dP^r+m#Q=gq<?G/?S=c;'#V,a\G>==bH6EQ>A$2!\\7h$cBI)VpZAA02qCa,gqU+;r9<cQH1p!f%gFmI>\!LH>+'uSNrV>mIRs3>u`t^Flp9Kc+]CIPK;@\KPXg4tA%_LT4/d$i\opnk+-0:nD/C>E5a&3Cals.o0lk8+\F:<,SQnP`Z%_.OlsARPUMUK;DViat\fgfgc(\>f?u078%H?0oc-5H*n5O3T#rf@h<9M@VDa'EU[,nH"<r.0PI8iWEV*@KE4*pqX^61E1=ap])N0%'EU[,nU\i_9e8Q:'d#]fQpQ=:.mD0/:*W$2'd%2Mbd[_mn/)p`&\3n7Q.o=(R!NH3%]8Rf_YX)#0&1o\nbY=cbDWi1ar%90hu%U;%rp\Nfd)-nfKKi_T^/^bOnd..YZZiVO55/R!X1@c.=iH`_rujK4f#n<q_jUCt/$8"[c[R0JG7_fN/.GUYU.[mp!,b@l+o(6cY<Hk"%1sjlgAH+5#%ltNWnOAH!9Ag'$O&R7D=4kpqcd)Bf`[F@(aBkLqIJab!fX1qG]$eAo=.,`pRmB--8/=@')&<MR5.AW(c0Did?RgN7%9[pm0m*><mNk;^qC'>lE)_54Y7[2.Z>H8aI_TM#3m55PA5!YG([h7bj[_HoabeL]o5FQRmq]bZYUMA-,@h"8':Sj:h_ub&g\F=7>%$6nV/]![#h.Nb0@3"sni*1uaRg;"f2j7?sG[-.)Xe(Ofr?=3!I%1HbW\[M+tipFlU]@5]t4^3.#^3',H>eK4mQ%ui<I)H`[777";%)<1)[]3VTsie/i,diJL_rU$h3*GkYM].<YTVh2$N0\D^b:GDu^$#X9#=L6M&fr#*4q<_3dH0pEAZ0UsTYNrL^^YKjg^SNFJj*L*=%N5!fVYGM9-_0^O6L4WJsrhH2qh:>kubF:.L]i?>"HFc;Q&&8#>[ps]%E>GSR2n='l_fBOV9'_?n>nk(*_iW5JREgM7it%g`>qm#g%D`&9@<?OP:dtoQ6ZVHKidNZ/oP;Q/B`n95Ugd8&i49P"Ert$95Vu2K,J,4QWK!G$]n`Y+F9L9,UmO:YJmErNHa.b.8*uu=[K`lp4%=oXG=kA!@hhu*GZB8E/fUY!kK8e&AHp?:_!%^Gc'4+t0AfA:t)WkI"!rU/2o^:-[jj*D-_db*$dWG1_WA@f"745UjOVQo<>;q'CU%cY6K7%.NecB`Rpo*_a3dp).3a7:hh*^AXI;2tl);5-Asbm=tE2H^ZgR$1jf%RI,3.mn;\tmueB??OcsmDc7;BhVfPK:RpQ'Nr%'k%e&gOS5A1d]c:k^%QY4X)^6.7Alg>;l(S6,%=s)baa4>H"FX-X_io@lD;4&3*L+bEIlK+=K1%Fegn[.*Bj5K4[[%[6@a5?h#]MVEF%7[G4s/C]1*5C99jfCNW42#?VQbEJTnQHEVqm^ZTGBRVP[#eI^R]!3&2XRi(/:1YNb]F3"WfhQtCp]Ju4jq_Tn+>Q&B6l^2V-&?XX%i3k8`R^73oPI"l=]!cHjC3He1J2F\1bb.tb__;IpL",5hjgp@N9"8IBRuJ>1*ZDCWX@Nsof0@VV;g>[[6>7P$lZdMi[AtPP\L9N"%U[8QSL0V7"$ch8S'8*lK-+>f1]$&"fld$&&@[T@1=VgW"hEBT7Q$Sb>hSW)UB`ET^K3G!8^ItK*q<pILCDm_#(R'lhA%En^SZD(G%2g<PSI_Y\)5PTBmg!.DNS4KsUlJc#f>[mn&Aak'/]>i%jrdNY:<6H*:d--NdfJJXp?C(Db%qhJTq?Wbl.G9h9@Cbfmr[qC&p;lnq%5KVK*r#@^UKL;NLm<#QdL4rn`0$k[i2r/43X6A:C=%`nRGe%mDDGgH+3E2<d=FJ@_Iskr;PNU!/`5*WMr/YCJFA'Ph?`?uaaf@9S%+i:g/?K@_r^V7J"5Ln>5o%=\8%#9838M>SKrI4()`T(TPM`7eDh[Q(\E\5"^^eGlVf@$;k\p0et)k-"?Gu<U+#<B/@4T"(3ej3"O%)TP$$^3*7tni6?ZnZ@G6E&4)6E/8Z+k5VtMG8YYc4_rs255\B(A'QYY!p&U^ae)r85^^%\nG2D/p4rZ331@2FG2CUGpto?%>?B%\%(u^g;d-Zm89,ffK+5D/4E9H[obOaJDF,TM<DB>A(qRV1Ip#k:hU]6om8'p[2gH5.Ic*,If4FVR)$.`YD_$fbaAb;Y0K6=n\R;^B=%q;)(d5<&,!?gttN3F*$jjhKc@qs_M<!;b$S2=l=B^NsDP5N,gBk,cg>IPnqSJ'95;ELVHboHQRts-Xt^pc)nsNf>\Go?tqCiJ/K[%TB8?[IJEFLh7h8gc``dto0jP\#87+kYdBE^_:>cDs)*4Uo0qkrC_K*8X5=7o3ml9W\h\K2M=VZNk5Kq22`:j_Yj_=_%q!r?T,d3i%HoV'%rEso"D<LC=3h`1;*.:!J4AUI`rq]t,:VV;PFg/T/pVYsfmfu@4_l#2Sqo:MaCJPF(I%TjJGC=o2kL&8)d1c<K5KE*UL0qC\%CE#Kf2E^p9kPhsjHp*cUQL5dmf8&g%5;fY4e0NB>)cu=%GZU3_mT]UV'0Z0ekO9/_JZ#eP/CTWcb\?S*LJN#U8I$>oB$`nh&&*Ml%E\\B4`r1SI\)ek4r7X:nIJqLK48aEqou$OEIm/6@qJ\FM3l`Ed3sos\^4&-=_@IBI,"igZ"dX1JZmX1F1]4dh@?IJ5pS/6h++>1g%s0]jI[l9\p"32c!^Ui.?o52I]4S!mpD]d/P\8hQBk-LtfpjMi%5\=r!g&HX'R.6TXYsg$/B7[\kfI:9)_"Om)[ZeBro;g8Bi45Zd%p0Qh4M:q&5@+,*t'*.q0qqs^1GEhbbrQg7_r@db-c_b2>n.(SdRUMipSDSFoZ.?qD=$XhIQZE3%9e`-dq%D=DXNh[@ql<0R_upm.%Kj+QVQkHQrJ5s*9^\_LN!(A8)%u\VB$m"dDht/tbA]](X96!-C)r]O\RbubQpH*?/_99AfKHdjq)6P2s4#RsYFn-Q:@q^>A]8d1=%?4Ae)!pJ1#M["!C\3L.T%=?LE3RO:N?%b]B!0Ye.rm)\$n-I>^,GEH`J<MT*^r$B0=9A(re$HfoEH<44SgQ`u52^s6Bk%PY,%N!`%MJ5Wf6jJolR?10E/J1bY)@C$c764.1+?-*\?m>]sJ4,<Y6RNZRm<n=I>c0HVJ/&e"=(+0Z=V;#U%^m!nf&<BSn.\dLgT0"1#>6]X%ORh=h*)aT.#dCMc_TP1_T]_SWB*LEd5]e<VN`D0\Oq#ZS`n5:)7,ijJOZcO`7dDp9;rUPB`-];Ab5B"?5Wa&Kr6k06mL*E1V1IZi%8mG4"81]]e=u+*?El@PcD1J=.J_UMPoslW"J.:t.Ak'eXgIOjINdJ,UO2=B'D,QrPUg+Lp71B(/CoI[gNKt]X`cAe8^^u$ii#:N$%TLbk'pe0$)#sSLj8Y'ObDg6QXVsN=h=3e^dJX#J@,W`68cS.#B.X9FMRhgk%GCkNs>n&(kTP]'2+b;Z769lD3B7-oEEa``kN<T;5%Rb[E;B^UA$KZ5.(&f>YH+\kTeaFH#e*?^j03Zt1c,T?hJ\UjdF:<818G_3%c(?iq:=hp:)Vn<+bN3a>)pI.XVP:SDP:u[5LLj0/*%hsg1dnBKHS-'1^*&bZW/2Jb[4$`M#0!]X"1Y&$$MmQC(%"G?jS-^NFD]NE%<-1R/VJ?P5u8>bL#iPc9\`r]>.E7XT0Qg'T<$d48\%O?BPU"\:Y-pBZGq[t+&M[gVUXIP5Za&7G%$K`ZE)Gq,(u-MHUX?m?C5o6;_%!Qfit+;<N8crGY'L\Vp@)M021d;dR_X)R5@KA6ld%&LT/\^Nl%`E7,B\OGnYjr6b</;IP,m]qtP_@WOfM"c4e?h/Hh3*0:I6>XCbs+p+1!+>:O"E!ejU%LBrg?kZp4JY[;#6O?t^@=(XG%G+A5f61A<mdaA;l)J1EEHo\FQ&pN+,^lsBJ!kSjW;mntuNC?.:iiFj[q/X"3JGHuc.2RRk"/900dT1nASPa0$^fTJKQT-*S5lcL<%5gBSe#sT3/!0A^]fWE8?h^6Ms#mC`mn"SXRiF.PHPGLQ"e%e8).teb+!QLCD4BO(L;op`R!KHS,?lhMa"TB+F@O"K_!NDL7k8Y$C%94Og][D5M,kZp01-#NcM@tC\80>`td[K)TL+Uj2=\#7==Rpo<I.gW:&TEMO5o`&7FXKnkTeeWo4Rt1\,d)`LrR[SCt0df=Yh8`2k%$OF2o0hpW(!\]-qnFFBZb+=B/JJ&\A$I1=fjU?q\r4/^1g7X!ndZqN04q\Hr9p0.X-NadmklW+O_(Wgg"<$D`HBod@_2*%aJ';Jk%ad+QbS6Foija]9W,S9qeLc7hc\J!9tJDc7BdE6]jU<Z@rA;;$\>R0l!+i%KRhA"qf-W$i$c!8'$kq3-Il/B.':^FE)a;Aq(DLR\8%J^1?.:l4`MEe8i=9IhQSOgt5(dkRRG:e68YJTqOu7OA9KA3^gm<Er/Ymm:UrRnsf<#N/UBQO>>IW4DsM'GHTfJmuSm/`Doo*io?-%DZQ.)LXVK00;5HI`u/Oa`.!e/S7*`G_K&,6"+e/dFHo,JWPhFB#I=H6TFqqgkN#&s'##1a>V'uA!,)a"04i(1I3B\?!50]FJ\e]-%!Z=g>nPrDKJldWDP.1L2M)(=dV6M9e!\?/Rif*p?6=TrSOjG!.6Qke1JO-ol97\r(PfI4IN%>iKSY]CbaXr]a^h&.='/2/-pcCV/%]muQIB+9H$W,NCH!@E@;L7pWfP9B0G,E74E<raBE9-Qi3_'6-JTI4uRpC3f]BE/.C?8,jIYCJ1b?4e'QXN/5&d+]t"g751ROnC#j%]:`.*d@p+Sr5p1L[5A-mkFVB>)-Hq-^cO>K%K;AS5t1kk`Q3S%%bq%CP8Gc!:WRBJ+4^=`]Pf4I.tKQ=3eDJiUMEc1B0n8hbA`FC%%0p<dJBH(mcnl#L1UnH2)>gpZ7%kMXAtsXG0"1bW\=Fcm.=8TG.TI7G;WDq>8OZ-i9?$8u<2'ZM_sQB6F20-fljc:hLddljT`G.i%arY_]QRHnS)S7dRI3S:LZ9'02+mV2$"83=WOjr#(N#%PAC?uF:,rX>tmU0DKSlB3D^n2XQV&Hs5&;nIjm*=T.0t,BqnA`Vd.r+tl%Y7B%eHMAK\ZU5eaj``+3__LNK4+%XEeB@:\#j9b3n2k$/E,jM**Jd90l4gr0%PRrn>LC@W@+#ZXWUi3%J_lc@p`7/;l.#JK/gUU/%C]"Z.b\-8>%\UVlHk4!P].NdH4+n?Wm,N;?8HWo)n2n9rS[CWY%UiB@XtII6BJ6tbN=VlH3kGJro)-`iG1W:rbO,?7MGgG?%Xpi-%Wjl>Bi<8ON83M^3#A5-^'U%nKKG3:Y&ANH$;4_>1#i(sfBaY$)53sLj&l<FJcs$[9/poAe;#j#qKfTd0@+%:rTg8`<!"Y$Na[$"O%[04HZ,+*mn)*X/X0<BUuA]Y!.;tdG)"D6GS3\(DlbA^*4n<'EG)"co$E!M/<A71754T!+EN->u7'Z,u`AYV$:.q=1R*r0)RbFU?S%Ekk5iEe1+/o\@Ku"/n=WL"5>=i2S:F3`FnZY$0aFTJU8fL^2jB*e+/I!e$`7A0hI+Jd1k'as,\M5*Bm"qk:TDJb[=a!<hWg&H\u>%Co[R?_C=EXk"=Qn"mNT,.?J*Xi^odaH!lU&"`cR`:F1&<$tO.KV'gdJ+?Nt7!ZkNB;`a"XXtOW2:j,]`'mBQl>Tplp,@(ep_bGZf%p4IpNBH>AY>rDt?s">6hT]HADCuFhs56mL\8T0?b^]9#g1D16f?j6\YUNZfZC^,/$(^..C9^5I6`:3irM/ERnG)u4>2?De9.MrH3%S$0k3+Ca7e"m5"T&d(AZn[)C9/pJVp%.PVH\a2rn).^\l,0gZ@]K&MG5aVo\8sUh)ITZq)^nE%c=h"ckeA?:\1@'#VKf!E[A[F56%Edc%XLLh;MF2gc&42T.a1Lq<`0oIdgTr87fTapn95,$aW&d&-t;2n)-o0ttgOpYc9P=?,8AIAmOEY:!'9X9AK<Q#WF$]uaS(pZ4G%-j0Jn&DsJfJic3FG]8KDrecNh_rCbV."[Cjn;8#)kXkopMjMXFO]X/CatO)H$s1@D-G:<iiY3H;;=A$XOA5rM5e[*$O%,]CB$ZBY%.1:rJ+8b[[0H8[g+6?L$bmP6/,[4k*KORdkA(1VDU9?fo7&V+3b;1QE1@jD/7R.R9!.GY^Y>TneQZ>oM@SeJd*0`iM$A&=qJK2>D%)[&A?M)QE'd4+QkVM1Bm#cKG'AlIpsLpgu/$;ht'c['",=[k;U?S"f&?^gMVAu%r?'FGHlLee@7`5iLG2At?kT%1(-b<'.nW=8Qd%STTZO%*ggNltCHfPij5+5G67ETuWoQ.d0?`i'fnlpEb5i$8NGPFse5+o!JO.U$dQn/Yp!*YdFLnl5AYG1QE%26NLX9);44a>9Z'a%c3DqP*72brk6*B$$-ro-/qu5S\F3)e:4+VVA$H_+!E,&D2bR]q[Zp=@4tVK+pqk+QE]@KINYislU2W!JnM2O:#%*(:(76NfB$u(Z%>sZmM4GaS(ba(;FFhG;kUs$i9Zg9^DCR1Dok4K%q[Y8?:CbRZI5d!*Makkt#b,,NUM*PrFHm2T8>;T08G(RBJUVXWr;C7!ikG9Gg%KM-S*=M4]#/E^)/N/g3>7T%]&1_Qd_nJ9&ZH51tX$.'67+ikA'&-I_6&CC]7i"D`#7&r(7Q4ESkJhB:k3`89VL^+JW2UP*<,jk/I%\iS>&i$TKt,K1u6##t-$)//77+OHn#%\T&V4Ql5u+:oK*&Hq/;j+YRW$P9`TC]T,-E_Nnj^d8'T4pElk'QOAO1BY,l",UT?O9F=U%=Fk67d]3uY<UuAK`16qk=H7CBm>VjVf^*0p5TY##"N1h!"nEG,0LP7g!qM`\PpLd^I3B7o9e?OR?Y*I4Jci#"!fY5jHHq3i'6o;q%(aLu#JAf#%PER"Ai2mm9]N!n$aJdmi/;>D]O">iU=UKuWFF4g*-7eNb"Q!ueT6ETgEZV?%R=$hWNE,1(hP:=um:=UQj68B)>^I+L%,!8E:&KNpnQUX%^.-!UE0j+[3e;BoNNTt3</b,?VoL8(E`+V'n<L>0BOSG;8#=Br5J<!,$73f/8^m>f:@qKR8M+@[jOTNYfO/EaY%5-iQ9PQb7oH.A1]QUVUpkrC-VB>W,R!6YidN"%4</>O)GN#'eY5]\tm/rYMI#oA>cc;U0rABGll_(Ce>)/[=5EOE`1"7[Q9!S:b_%J<FBgYLd(PALS`5hAI$0@M6%r-a/]&MLZhZ(JFg3*m5g'^dbXtM71aN;Q,FcP(<dV0oH9,"tOQ4+HSMCeImiCS+N]sM[;(:MjH&J%P1lSV2F*@%!@T\nMpZ+(J.t'l_dokNn`q%uU7L>rXigi7.omf/@?4J#!o_93MC8usX$CSq7;0dj$9hNVXq6]!7A;G2oSPnHKu.5,%`W6W;+kmi,r`kVhH*d$'0h+eXKV6K/k-i\UTdC>UjA!P;&HE]G3aA1M!6Rr#CBL;p[F'\dTG1n0>?rp1!_LoI=Y=N",.:uTTt;-K%k!YMH&_[X4Km1Bm#=`>LfE<hhF:-KNRAe.EXtO7-ZqNL05sR?mJs!5kgC[qs<Fm_SZVn9PU;[C(iXC[&Y0At]=iD]X3aN,J1sd:Q%r"Xh5."t46bea`@$Rmh0BV.;5_7Q/`ko8hInacKpF"teRO\\YYR1I'*a]SW[Q5*3.T#dsi^lhf%^s?FE`p5N1!f6sY+H$jZhr@/A%Ak?C(\L?Rrosp.nMC>2)YaRSFH'N9sAE6^8$kGUb'aGMoeB(^Q<JAB[73s$A^b5k%88-&e=DXF_<B\(:9i+&Rp5*Df\iBL@R#7/U%*$7qi9F<S$=^7(E4\'&/hc3dEG<jH<PF]\)L6f"kO-+sE&2Jto#_bMVMaELY-2iVH$"@<lBJ0LZ^tP=qkEkjT;a>Dt@>9@8;IkTk%5p7d1UX1',D_02QKB65#B;'TFJP&a&A<ms!gVJjtBY2D*6!6$XZTJ`8bH%;JnDZc,e_UjG_mNMPW<65L2m(\91*Q8?D[j*IQQW_U%$F5A9X<-"<<hkr1A+Bpa,osb]A_>GsP\@#X2gm+Hd&AEsU'FeT/$-5rCp<aJ8MgUSQNHI2XCS+^lGk7ai^G4]O=4%D3Zss_a[FAs%$.2i`p0qmUZZV5p%9>J679ETdasJJ^,`?\u.!8CCgg[bu.>Y]a1Z2\/h3+lT1jg!#1AW9/^rigQH(d8Sfs5L`ZO_A>@MVd_,bl1r%C@!Gc6&cdg/s!YN?nCIQbcn5W-dM!G,uY@P0HW_)+tGQ$*JkNVTjb1:Q5hR175%FObe-ak(+'i;]<drFP2:4I%]mHMR?lM]Jui/2%@o4\BU,:NL2;sYS2)-f;-nr)Z=d68SCuq<u?m_)Q?*[_B8j7P`GYG1k0[%BrV'tMpBCIVl6PO6CC`u'*WH\eA;_fDN=Tib+)XMDW%"jZC3.RjE)[lOZupG/dJIoIU*!NM-\3?ngJ4Adbsm*O?M(DD1`/Hd>8[,a$dTKoY2_Fa"b3?+A(PZ_?&BJnaYWUUE@H/4><Jir5X%>!i0KGaS]q7Xhn0ZgZ:QcDEs/)(<!dW7Y9rK-;Q1BI#&>bc*$#om.C0*SO!Xo]IEU2p3'nP,+mL=`dR3Os>aY+>A&2,d;+iJ_#`n%_ZX,#+m_XT1(X_s*4E)=W6R-8]WYlG#Qiq%&Y_qXn0;uf@m)jg\1Cj1BFdbMQ%83/@DR&01'eK$0=R:^MJ%kjZINXVo6_9&b4,mo%W:sV;i^(dJ(K6M6[iI.<-62>L<01,"mo[\%+<)h'^9IgZV!4)nLI+nY08_dl4Yn8bAsNs%AKg.Sbq%/_Lk3#MD9W5k_&122TS.<<%4:,;E%*Ua+*$(eEVdO(s5s?e[6+E3C=F3EW+t%@=8*$pc%Om!]`4gsaNQh5+)YtWc>;kfKC`NMA*7R7p?m0!mn8*h++M$1QbK=)A%E)[ZHN7jIWW=e!?b(C:6?t2H2:DJG.+gZbQW,D-iQo?=J[j5>qgI`11`McIn:p8GOfq=7DMWbY,Fe*@fY&GBWL/phWUYtN5RqTb$%7;L!b/PraTqDg_%#jVc6=:p[W$c47k/RfJ]8HL)t/BQ0LeMLo06LeMj.G5Ap5h&-Ai50K=":Asa$-qgLE8/L8ee^BJNN@(5_<P]U%rs.VPU"$KH64>Xm@g`K+Ht#fB9]#ssM?T*HqC5eXXM.+eg886k#j\.Wi$SQhkqp7'RuKOs:om!Fj8/sF^<!;a>"02+%<G<E9Kcl'%7,oJI&mEAg0bI<65t$!\S5cS3K2O?1+Ua5Wh2G-[3R=I_XN2MWG"Aq,=!0D0UL*DJ"RsJuZ(`urKW,teGRV.pP`FBs+lXVmX(.o`%kl-A`j>(83d5MFY271L?C.,q#%l+%3-PZ,W`j=L:U[I7)8Q&(kR#tJ))A#3q=V=PA:lbC[BQDb'2aoDZU;8"o3%kZH..DkPe.GZC%i=Fh`KGPF>8b?:#[5n'4KRs'bFY.^2!pspmM']ba&XWm(UrQ/j;b.*UN9j,PoYA6Rcgj1Z2joGjbV?m-ko^UZ,RYg+'MpQr2@qRi%T]O[:Nqc'7"G45./Mk@r+:ui#S.UC^\P/tSH8+k;+[l)5E=KgXAPq-DF2NQ!'Ife"151qXU_JQa##k/cUaS/.SJ;9iY=f]Qb^^i+%h'm!nUfT@!>OYWJkW@;)Ke\e?%4=$YaYM61J?(PDRj2$%mf\6:`0J/?AVT99PSKq]FHbQ4P*=,l9&m*)?,cN3$q<\g#)1.q#:M@X%cBi"#-)[-#),mcoKD\_@M*,@#8SAdS8:Mf'9+hfH]'.&a9na^K0jli'V=G`a',*E*Wh3W$RA-bmB%4os;NYG9qM?>-NG^R"Kk5AY%KIBee"s/.,N>m1D]7OWcl3c\/01R.qD_2?<\6SS?Lu`%jH^54FAB@(=br*t^`5WXIIX2(k6FNNa&Gu+"C4d_F+=K#J7c=CTO[6-L%OJUb[LK`3[5f_$9MhE,uZ,AOWK%Z%L:`jcrWt])0nphm>rD,u%Q?<a/?4U0GfmaUp99"'e(uKrgQh82ZCi!!G+Sk@0!T_#Q-=BGH%,X%God++=Z#\D;7/tA`I,Pc_Z?8\QXW>QQ^`ZUO)W:Z*#5`co^*GZH2X/%e^'=A/F3j'/.Gmu3sM:i9V@OFXMX":C:3Q]4ddFi#]%BJ:.@7A(ne#S@6$VJ6U<+DfJa+LK5L$KQ+fRZaCTj<.!rH0Z11U-911B5@1P$6pX$0k:YX.4IlBlnEP".5G&K7=kuFKZ4df6HnY'%9b]'(l%4I/bKD'uL2`*Ki2eB>A:AX'(7h@@Itp_Q<K]PWr>h?H?)=Wq^-s*J;SJ)X2-?J&q/YZc_2+"d!g913JXOdR#cop>G]p3_%rCirkI<?'1&:<uZ]pN\9.-JEp7&?582H8(k9E^Z!-.P@;GD/=PG*d*H9S)W3L,t@<6!+^ViY/Gh"B(fF3>?3?P#BkbYpIbk-thUF%d3=2S;X^#%P,q!XE/->+?*,k'`$ajLQEm8PmHEoQEu@tX^"H56g1F`uZJ4I<(SGnk]F30*fbQ"AhU3C2WE1N5(qYQ=8XR49QTZAR%D$CoJp#bB*$8ff0B+")i]#i'uA48P?keePTlPM$q?mn-4Jp.#`6HSS",]?p:5`V[->>V:#:MK?>,]B3m!U#Wb4gaa`jU":ZQ(ikb%FjM_Z[TQ;1#^R0,Ag6Q@,X>ni#Qe"',bqZ<Lg^@B1n%:RjB&H7#/rr?"DD"3)S00].QbB0feQ=<KTZ9?P"8shE@0-R)NotE5]"4^%"&ZlGcUj"^F%c^-OjF4d7c#E9BZ2VW&F3j`?o`qt5&?0&?74.PTHE.@ciCsjQ.VI^TZdm99QM"O,)$/`\r0FPOV!9[;-!b2JW2BT%7E*>g,elss#Qh="J0;lo'/;>(5p1j&X.kR,MB-,)Gr!Sk>_VgKUk9F".tR"4H3Q1s08AD9`mN^d8GF[-_$[RhAKLKDEsguQ!1X*"%$4('A"bs[VW7TI:\dh@L".hDJVP8$RZ9L%c!tu<N,Za4W_b2=>4\:6-,,YQ8ZrR6-@;AG6[T.:,_/rr*CElFuON/:C5pkf/,Qkrb%-ss5V#QnBfbn*0uOs!514S2Ljf5MQoJO<IgB];HW8j"QL4"5Ks"scJE_sgcG`A:>:M&@Z:!rSdQPDlX]%:BSYq_Wc)8@Sqi_]D4s%,*8sqikc"dP#^R368AU2W<aNM$K8AYKLZ=5KET/Z$:\Z?O#oq@<hA>J$<5N<Y(I05aCn2&>Xl7aaeUO]&@-VZ&S;dHB[B'OEINX=%3$>IN(8*fph&1K1lAf.&gB=mHIDW]]JONoomS$IYolGtJ0W:5lARQ'7Cck-i["V8VQBr^[-T%rhk>FUAP&#_@Ao'jV3cbWs1*'.!%-$OYP""$#N8<jn)B4fI%-?4.,eiHP3$=<I^S;IUC2CfY<9HZ*o_C/GI]*]rM>[SOZKFEYLSI*J]ZB<lY0-H.FgnZkT8B;pGG5Rj:%<q9hclN?`E"rIjLU[1`6*dL1nkce:F:fR^K1J0\Rg@,RA3nhhVJ:YT.#pqPbc_2qY:1]aMaP<6K!%,h\"o4F_T1h4:3g!<0nO]%c%E+!do1/).5EH@$&6#tNF-;rJ6+i<HJ,PqlnXK8A=Zbm8SP9of,ZY_M%3D'&pH]mX:`!d2,;n;.!cGFa]325tGo$#Q4UYJV;F*g3E%hLMi$(pQWMCkWUfQ%h3@.p"*B'#0j)N0_Q[K+kbnGtT$MLi?cBW^_9JY51ug,oH?+1#?#u7o1?g9!47uYk]AbM;tEDPaJZ'f!)h1%OY[@gh:+4&oZ;2nZ"PI,?3e"_\j0MVe(>99@Mg&9MPQTRN/-Lf8@bj`B0&mSb334^Z8!(=H<Alk+?QqBLpdpI]b!MA@NtO23!+t'%V3!%h0gWrP:rGG*:2'i@0[NpP-t,IQMDZfE+=NB\%n.beU)IHBjWX(;T*S8)oJu'bGdpaCneg+7AA^-4Uh6l/$n4MfAF:.PdW;f-%(']ne9&A.C:)^!:0h.is#.'MLC\TFnXGOlJ,9*'hKY3`kNjG#,OO@?(cj4B>7,](N+fd2LXGcuJ.NEOfjPU4Rj%H6$L"J5C)dI![%m1;mCc#Kg*hJ\P</,]B%lZd*n?rh$$b1F!)I^4pDS<-[tf/`[4JO]D@Z3%Eb"d-+SmM")Hj:KYt9=4h""K:h[;KNH4A/^CqojT&k%F9)MbiXQ<..$#TDUbi3c_`(_4eHQ-R/'4>X43!_SM/jn81`fh[B^ZM'[Sjq7-[1$<oPu^.Cl8^q)E5WhOK9U#,`.u9PiZ'pq?[8k%`iN9ccYo!M-B\@4@IS`h7Y4GR6oI3FO";Pt>&G[>A>R',7=Y\^;'mV_-QbWH=<Ten3U1e!b1K_VTKpEO!0WSIb=Y_$/91,q3FM,o%N4+$oG3_F?\ILr&f3tn;E.5VdaTm4-#j7.[EZ=So0)OUp\J@B0L5]Gq9jnW+(<Dg'CP,`=.@?(iZ;OY1Qim.^^7A@FO(Hk--5VEc%W+GN:P$ICSYV://3b>D':`iS7U`1)H(l5hi(iYn]YnSsA'jC?p]G`oe(JX#8`]Yr-O&F8SfTRb*#sg2E6]2%;9im6$<H\P#d7MJN%aTJtGYYs"Ib/@\TqHG`04;\>:[6."]is>4U*)eBg6AW$*8&l(WBdj0MXrIcn^u8a6RE02#B:r%h0M^1J#-*q'=TYE/+AeeQnQ`C:%PFhF3La-IY;9>,]!MX-S;1T]EDPobT!J,s'YQ\Bl#V$4):f([dI\*A#+BD,BSNn=f/-=6SASaB1>=.m<JOILCa+WLC>Z>d%clZ!!%G#fk*P[\;TQ'6enE:al"a\u_jhdlY)Q3;Y*(Xm=D$#<:L78G50bYap3RD'GHg8!LeRB6#d%),O`"3qIP8pob<*s@.>WV_=,)W*q'%-OV)ZT+4/@(i(hH0j=]Nckt21:/%LKRk8/#;0W4cH:*mdJKW+[Al)0X6.RR-aSqib+fc6nRKM!6NM3(YY$XH0XRuqic:<trFqU4"%+OM2aJ<@,n#Zg0-UbqR[+:cPLA;iOGiOfo)Jq>+U;SbXs`(R6m:Q+:nTU`>lO,t5%89J.!T/Pra=MZ]W+!JHj!R]IBaH_H'WhaG<%"<%ld,Wg(:YUA*1PV6im4Q:T`-\kYD"<"2+J3h&<OA]U!X!Sr,LbKFOMO'qh,BEke]Aag`7KcgA_]`qV"+aT'0G7#(TM^To'3J'h%Y>>Yu(S3Ypnk!giO=t^rM#m(oS#U3)).;q[VGD!HT?M"r#g.iV8b-9V;jqh;3X$s?#U6`3K@&/-+Ed0d5$*]FdUb]fV-@aLOIZ]6%Hjo7)82+%,$KM0mEh!>fqn_uA"<&4jhoHcGEf1k4NT=P&-n7Wnc.<ATik`J:IB"d6,r4[?:cYl&;JQOF8^@e#M[4oiI!6enktTO=%AK+4aTVVc+eH*"J5\3iV-T@9;=BVT<D>4l6;Cban75$,6V6YJ)d1bdPomWVV\lm'-g^iU_imC@KY>VkBm[01>>_TCFghO$:!Gs4Q%^VmWZaTgIi;B88,m&J84._T06AL;UA*[+)b7b_68*7Jlg2tdjC7Nj1;`sp]?mhe7O1u=%9=Ys<()BXY&Ho.nb0c2gjm`TmuQ/c*b%/AW99`H25S_20R/Ai5#n<5D5O)=]P/Fdos1!6=>f'[&qA\*/'.&?5GM&S0PO9X/"t:0am;b)jn-$,&dh2($cS*Q(]f"K:8kaHnX_%h;q=MKaT)oKD`[3W8Kp$QD_p3:gft_IK]p0d(J?]_@XB(S-)_q%Fe$Wa]eYIBSRDX,^ZRO'1q^njqcJ2LdF1?L!r"M8r$kB.J6[L%q;C'e'#*WjoSj,A$B\.^6@t"n)BgD<W":W.K`ER.*^QW(VcLguGe+*:;ES;H'hL#'U,I1M=h0V\U#/:>#.fm'.pjUeI<`Sr;Z3Y<%X!*:W1pFTDK`be;m"8gJ3aLo[jY=+d,C6b&>0lIQ]j+Up`_>BSqE`KOLF,Dq81Ds+i\j8&_'WLZ//l6`MdY)q*6KNd<sO34Umc-8%<&?(mSSJL1T.@IWptLTb1'f+^&L8O0JOASpCSR,S$#Bqnq+/AcabRjm>&mFXK!Jr"#E<TNX"j5:K";6,@#C$oBe+`\/!:%;Q;""9%'G_p7NXE]Q()A.JHt+J;P@X/jodcDQ@RVW"P*fd&)X7kN'>1n%0p7*A<a))YeHJIT(pM5\e<5rq,!%)?P_;0>WPF1<WXK_iXr1=U%8Y2^r0`2r%VI?,RX<^VM<A,b"a]oI^8WpW.&g\VZ%ZP%E0B)@F_]gK7Vi;[U6n/pal66MI3rAP!A_o-Q4Z@=@WmK/7H=3K$<(:N.%I(bl2b1o3M=Xli4ZVn*m,3RF32WchZ,^U<BE/p_c?;rD)JK!15Qk>4i(cA-[4EgA5<<<OK2[31JNBEU8WC9LLA:^84W(O-%R1nbO%rdrbB0Lq=M-p,\m-p6f`<e>a>:1m"T'0dWA1!"m$T[^=gDj]ZUE[-YV6DQ>^*A1kKTFe,n*_a>G;\]Z8IQI+s'A68jQ)b8&?7PTb%;R""X6tsQ/,?:gnQ/,;Z=/]8X"^gK>k8<Dt0R6`OTaHh7V)^MGN7&sbZ]Q)gJhZVT2)Hu,:!@k#>(qqMm+j%(&XL6J"dk?K(^n/(%g.DXhjT?'IG%Lkknj(#4#(BQt>X=3;#RM.$=-0,Ie0YZsU^H,7abq@gfg9fkbTa8H(.IJm/l`6,Mc,M^MrTmH$u5NCF>G/@W0F"B%"=WNa#V93aP^jgcZO%n^+UH5bfL\7```*3I&8NX)84n9uO]d9%/>uG=%t+eKksbP$X<aMT-uC2"'.$7'CI&kIiT*uo\;U2b)Yl':%r34F2Y=g%DMJmDX9;,l6"A*PkJj^P2-j#Qpj:*c6a"p_X`6sL>BJhgVoA-OQH*m:1;KboT+gd6k-m3W4'1cje>1UC^9AgY%kt%+h%1#+5B'Vo%YLuUfA"]3@2E&+!"pl&[nZ]c7toc_FI+_[!K!K"c3"JHf2EYOl"_GpOP=kJU793RMELBRh&9LiK)KBUU@K:+I6MTdt,%d8`%Fad,>hT[-fc&KTb$['UVd`._e:<aYM[\dV_ie`r6YIJF"&=pU:KglNL.KecKI6Pb=FCJi.U"_I(_R*-4o0G:K%'sum]'X"]+%_A\9U7]J6]eh-Ct<n/&hbAX?@ELJ;1*L8%nGZrfe,RtEA]otdJ5iuf2O:5\'Rcjp':.eScG^)q&G%+k=NHAFF_.+'e<h+QrU^SVB%_5p9a'mmY$Gp?8;k=BP=Z+6s9HD6%YM+?E]C-Fp$dHRI&2\8,DGm_3Rfp\W]0dPqPVIYGhemCeF("3Wun;9<A/(&1'[>p#>>3)a4%"V-dXNt9GtZml?43!dSo2I$k]3,\s&8rH$N!>J;L5RKn(<-$tB`M+^Y$;bg)<JpP('X]B'jV:Xs&5Q!=R+G5JAKL1Xa3#goLa!C'%1C.H*@208HV,F$$^?@qGjcqB4=Z,JPO=g$!iep:,U*S%Q,TqGo.*OS'8+j.`0]@PYPfSjN,A'+l7E_p0MOMdE.an_>do#(>;'?cK%,YElCaD&KbY2Pa6-gl&iGI?d0:1D>patA5q=R`AoRPYTs8mWQ+GcSMi6"45?.?^Q@9p&)W?t'q/%d^`KJIT\r>@aiB6UtG3P![_h%n\h0tnC<FFnO\ER/Lqd=rW0ph_1n3<N'?F1in\1Hp0D#ZT8csg1KDof7RdtIaiTn3V>?3W4[H-Z&REK460$'!a>Y+8Df)HrqW>jb%:^i4ajA.?6LbR5!V#4-OWWFH/<b+K,D2PM`:Bi+OMH_9hqJq^$:QkK,"I5+i$aH`.@shG$Z_>lI:pQcYEkMT</%H>pPXRd&37=;j%Xl,WL0(BApHPFX1Ha;l[b[>\..7JOE<(JKcjQ1WM'lB6$1hASmU,\M7n7=f^!p$:G!dYW&5^Se`9b\(-Jn7f1n<OW>hg5N]a=[OU%>]^<[0]bq!(4iL3Q#'/BNaiZ^3@5Mm:(ES#`6c[Op.F$]c'kbn8'*:P'i+#M'NqG4<?b]lKI[W=#Z@'6CT8c*\H5*M)[i-,60q1j%@Uh$3I&tCE*34o]0'5aVH`!BdWJ?$U+$.LG'o.MXD^'6;Mq]CG\M;5eVp41V2CEr+rqt"5>NAMp-EGSu@l8t*<LP]uF\9FM4_)Hh%,aAoIk#@2Ce`a)9J^1G,6S?PSR:L6ad\>0o=APLKfFXN$ZFijg2e]74+`!j/"5X/1i^c<A"sel+N_DH$.a'n*^dc$gZ!q^\,YBTX%I._G("%&*EZ&aV?P[2*!Ng/qI4<"oBaHi^`bMgM:"0N&H33l!V$EM/5/Eds$(H<cWkt!NP+i)G/@QcbN.S.adH#'0YcFoMJ,f*=T%47&*H"=3mP"m2N`Ur=T2qFAPHQDq!Nl/T?n"=pTRpiCgf.pnLLWo&uXXckf4"]L7NoM@"Ob5bu`op.s<CYOB4'P2'].qDD\IM&M^%"pp^)WuN[ITHKtqdl_cA;mo$0gUs?,YbXPIc!(XcV<)a]Z7#[@W[Cu1OdlNTMK&Mbb7ZtQC.d:fMVKOE8SSU,d5ge>9!L>Y'i>,k%aiVIFOJS<ncqcnh&po\)SjbK*K9W;[g*&bM$Njh.8TA!uKpg+L3Y'.RYrbU48ut<H_Kf/&dQ:&d(>59Ko3.387Ot%Zkp/m^eJYfs%pr^U6^5h+djJ'_[cIG1S<S=>$7PTaL>>QH]4Io*p.@:GfdV[S'&eq\s\DrJR$^HI`M,k1!_;ZCmR]8ni8okW-Re3+f9iCgg[Wu:U%dR#P\;?W6EJ6<g)iSL>le:kIU&o5gV&q`4a479A*1f\69)!>f\/6gN^3.B:K$opC"R9Y@[ct&I^(UD8T&Zt=4#nB.>Y-72Ze6g1V%8PrY"QNog<a[/^"Oqsl.eWmP@An3KX[Yrj:&P*e%KGA_=J1K.\_3PZ5P0o?C$gW*E16u9!p!)bg0O,<GLVm>S[ZCUaE,C:WFuC1_%MKJ1_T$Kn_Y%ZZH3%Yo9a]XH</5aP%;`5c5.MWVEii4M^p;loZ'<lW*Rj1B!&6*p`A#:1Xqt1YW(S$+;8CJ?C0h%^CH$SVkY(5Ln%`4ese]*W[Z[PW&f?03/LkPEEmJW-RkP>+0MLXheg<tGHOGm.:8a3g's^Jq&Glt9Znfs/JH=h#$JMm-%fQQ)[/-A0TGM,B!PKBQN6%Fl`V(9al(ojd?VE?![u$8=8)PMi%<[d2l2t+9YT4-Cq>lDIKX&BB3&)Ej9d0o?DkZW%]WXFdERT8Kh38&*%G=V`FDMp5:p[*O$Yj%8Gn5:[4l\A@R2fQT#lp)=,]01`p'0I3U$uGl-XWJ2@S;*"Ne\G66'%a6cDF+I!"OJH@6s70Tq5+N%-Ytk=Dmb').++ED$P:)<c-1%8p%*'A[^tEFsld2K3T?nLb)Ne/pRu&/@a1ca/Ur'8P;`8Ss-:UG+C99ErtUl=LK1a.%tacT8J=>N%f4sqhdfuP;p-"/!DY,e2S\l%*jHoBb:3sBnM#WmaqP`X%RV)$^rX%Mj=uODACI6;V`[un&Z[/RSZ/EU]Ge>H/XNJIaWtlr/Gb*'b,\F&JBC8*02'EqXAD`*Z.jRj%J78=8(2i%^F)2QC'T&D1c]K+m;EemjKP!!d?l_V_<3Veoo>Jf58sMf&9%Mt.1'A@:,uoI0`IQ6m*^QJTA6W+uQR.[6\l&ibm1,0B%q(]sK4UHfQmURHjYgoIcAT\\6ami;)Smr!e$K`<8*RGWP>g;N`M)>aQfG87r:A0I#&?qcM/(VC]>&mK3WZig\LAfN#@\D0/?!)(Z%/a[@JON9X;A&<B!fOO4N>?/0Wg.Mc=%2DfLO<Up%3#Mj1.j%IMQ^Ct/094!mP;nGregTO8%G(jm67Wb`,d/PcQ!u1Q.3)B>KgEim%ALUJAPg_taY7V%?fG/`F=1BR-+Q7L#F`ZVAKijr[k>62U;."$t_Gk;sF(RcLEb(KK]O[^].IpAdW)+:ff93GRe<h*!"n2gdR:U4!%+:">g3IuNaliDJ_QE7OG>j#4H`!AEHU(I;q;CCe2inZm!)(cef`(LaPpD>&JQg8<-6S2GQ@lJL`Ulp.OP(",kd$^/0V^V::?PP4<%(&CZ&W^MdMbN4`i,Su\V:Q@Ee%3H>/\ohb1'#P"jRGmH;ND+.7_+A[I@VOL/Jn8$Z?AVo,5jg$('i@dr-@2q@ED^mIPo$>DL>f/Z%j#G*l95AS,pQE][&r:D==ALl5%ToQG&YZ/&/6<eYb<eL@kGnV3Z7E(.#kZ%Fj3(]YN83hM.<eH4<oM;0kf'4E>K&^OOZ+t%Sj9Fk%6.jDN34,;CF?a`G5dWgFR`*SnM$"f%asdG5"@oXn%XG)8<A%5/$U,N8PTYQ];<kMKMV(E3&dNZJ+tlj4,nHmo2DStm4BfmLk^D`F%7FF@>iZFlf)^6=N>AA8c-ru04)A5*E^01$GOsHZPWo]$hLD;s&&ochO/3)IAhrTe"MEB`o9IOf5W"BC/G?t^4!Y?&6i$QZga9'PX%;K8"4,pZn2JZ;/5'h>^;1.#L/fK<jW.>S+5kg;_.8BklQ-UY2^5lm\c.\*FW&mA4IMOgZD"JY?OP@_#o&$,M+!#qq`*6)6&Ub1nk%V%`J9>`d!-WI50`U*;Y;BG%P#8BrCj`ucI\?,qY2BT^"Xb#M<t.Bp>.GVW<t+<Lf=\?R;;bTnEHWBLdhe<GPq06iLp5nk,?ie"bl%-j$c9^T"5B,LB?&86%2Jf0XWX&B&9_=<u"!-^.)d%j.fdAdII,`2KfuL=`&])jSHR.RiBLcT5C_fcq6^nd;fb3%hm2+HB-j"s&8]%Vb3]FXlA<h6q#$5!cZgbZHN#0ZT#h\in8l3=WXl1JeM`Mm(0,76RZ`gCUXsLc/r*,(BPO&W0SeXVJqb/Fo"rHpL6C^n@E+-G87)D%o&m8B=pVED>e:/*>]#6Sd0c\n$K9tXfW6t"@g*gA[OH($$u-=#Eb#=&3@I"[5giLW8A^IjPZRLJ8rARmId.'sUf@Q>;@KH3=UeJ!%HLPKC]d^Qh<>?g.2N(I+R,^"onKC``D'95+F<s0sacWFnqsikh+HVC4ScoVDMDc>m<BUC%O0)cLSZDn"6?ZVqKcm4RS`fWD9LNnV%**Lneq+WL)7g;70cZ(TK,#?7SQ!Q&5PfkDqVHb.hF,qfeM\K.bP3kZ1>_p@f$VhQP[E2uXZ</\mYN!GMV9&dj39B%_N&/`^<@`IZ%]HQ,@VB<^`?t>0TGfq%d%q-%<&3A&^A%E&Bau>g_h6i]blDp[m-*%kij:c+8?DMrNB98bu2]"TS\;/FaX/W-t(*?>aGFEq2q=n9J%.QK`=b;RMd!d)tK</6>r?5A_aAN"5C4a6IZ3<D-&p9pRRg$RP3<P8rCl=Wp5.V7mb]fa/gjMk\5^C2L.;e>cMBcB;[TbC,Dj+Ukk%#T*0j8t&j#fW"5VF="^hr=cI"50:Y4?L/Glc7bn'1.9HM+q#h4"6D@@d7pR0Rp\6kPrpG]W!UCO%ln-q3e1>@>ZipSTlMN7pmih!%>`r&\[Q6tra<CE:-tXmMZ*lnM;c*:+9N;J:Eb66?]o+ok3WAf#V:n&.5maa:?9TuuXU3Ur%X<^7:.^%KLpMtjUnC'P=Ah']'2I3(%8FA::i+]4L;$:(%,U#1bjEVCEV^!=;7Du:<=6sLnjqT4Y;-.e;&a<l/?p`YC#kD^Ye45Xt?4gaG-TTC]fO^^U!of*1>ffi_68a!9%%C"4Xeh#'4D%\f_<J7776']KO)Br$c;D3L2kaa%%HS-]-U_Y2Y,Qr6>P+c'"K5!Ht#SMcQ33<Q@lRWcE`"Rrm:t`iT/('Gg3-!%U%F_46,(hWn_E>B3c3#1(kFV\2gcZ3X&j<m!F,USUa0.eN2AM5/ZYPQ<tOf?E9&19H:G?LuAG5^b1P0ea'!G(aNVmX'eC6ip%ZT,)/%dmOa*,%J6b&@<.2R&L?gL5X\tXBHbN]*T^Y]LnnL^M5a_T/pV1Gu]][AHCI/hEjs4/[\FZ;QQ/R,rVih;VD7O:Mt9;?sdRN;j?I@%(-Z?r==<DW"+gN$+m00L5mY=gLm'Tc<"XqU&tmi[Wm"lUO3u;5PDI=A-<=K2eRb^tE>FLpC;G%K,eP%2'a@f2&#^"hQ;Of5Pdk`j%mXh?g<p4+Ya/E&^6'A:GP[\LZG;fn!*6V!B*6qY6Ir*4qR(QT2n[jZ\!S)&5otW"Z6d`guN,1F$Uu\hk>aA"k'Y$CXP<bD?b#/P)%C0u6<-&cgp.0&n>iq#F0-JG8Q?;]]MaD=4d^US.eQDt?u5*CFfJR2Y7*Ktq]mj`qs"\Ak6"GUYR.Mk@(lP[g$r>u1%1`HR_;K=@n%bF)BI,T#>B2Z=8L9@H_lihul.?AbuKSFs+,2,7@UCW7J1kILAWj"+mlZ7pm)KX9d?$RGkNKfm@nB7<MUPY)F[bM$BV00go8d$!*"%4br*='fnq?7"6cQ?O/.2pI<gP=R"+eWM\TG62OV+:Wb2]q1k.1D:KO.m8-)TQ%\HGrdK;r,3D4"#mEU-6m"+T2fZgM,19bKbpY[^%$If`D#SF[GTNO6i$PNS=G;KA@[:/F!=E$VdlrV%-SR^U+G6jqD$p_m<V*q':VCJQL'GQ+?+"#4'?o8*rL2N\)KPb1f'_X\`o7I`H%C0*cH?R`CZp`h'X!3M/)NtWoJLc>jY8qI[FTNSE\6(M-!g09FtK?Fu:`F9/[0;VWXBdkC"N8`i6"=4-_Qi=moAR%E"X\&_:V]^QO%=9W-89<6<\]$I(17(epcn#9\D7U]m(IelA`P:971N.j'ET9FNA>Y'Jh"EEVM/7f^oe\n9f;s()K"QCndfOUGO%QcNlV8*F"=#Q=Y%BLus#8[2'g]+imE+[?Nt:6m]Y"j#(7;<oaDWaJUrClP/bj!,L+k=G3giZF/OgM7FXh$45&F29!YM:$AYXh;g%[ck7u$84i,^sR4U%7g;R#-gJDaGqjl,"WM;VpIbX/]*%=@b#4!>T45WlO.<8\]+f<T8!F?FA;]DKkCtl-67S)[N&8>HA;$m^IkL2)orNBjk.FKS-VcZO%"E'(?i6[=+Oa>+liKZiC2<.;DY4>kmTn7"a&L_@D#;sVB7YC9Fj9kIJN_;d'70=i!B2fI4&D=b\!*D*lKVSj,MVb\IJZ=5sCHj1D%5ihR]PZ"73<QjHjfpAelZPpoTZE2:2g,QoLl+JK+Za#3lV+T$(L]h0?>pVL8b'[7S7nQ,$P'uL;&bBM@cmGRD+5'[PE)8+9C7qCM%5uZ$AWl/(M(R42F*\9s?@Fg*(6:e(AQ^.tA3E$+KB'tgM4&b?s8B,=4Y;dOn5V@=$U^n0^_LWlko],hqE0k&Y2]f-[`cp02QGL_Q%Edpp+#)BAFM\(`uURO(H4gR0'8_Q1)l]m3hV%eo0Pu!c6*IW(O,oQks7@(HF6Z>/dQhV$L,FfZ=Q4eafnq8s'K5FNVB5%q<")$e<%jlBCoJ3msT"\^ssc<TZq`GWRu]]p%R``uF[*Y@NlU680K;1=4RQr4h[JXA0k*59aaQpX]d)>+C><OsW'8AZRrP'^)?5X#3;h^UT<%M<dABZ<pRhQ)[4gWkWOM$'g]T*Q3c$mjPSGK7C/]!eH^f;1(+@+daNRBU`1oJ;:I&Kt8ZYXFiFEV/TG;C0`;[8.O)R<<!<Tb8NZo%=ZIoZ9H\LA32q/>YBm8?U"5j3mF(O7#9;m0A0kW@8u!<`7Whdi2VTT7#u786=es$TKV3n<Nf-_h.LS__E1+Sqg.===2O-[$Lrrr#%@0hGl<MHF8^a@U[Q=egaA*(L7gWut4!!fAG0PLo+/n^+SP=;BXa[\-jpuA2//nT`8i\hmALi.41>=7"He6!]WX+$5f@dV7MYkeOJ%^h$OrV&G\)Z)*-!*M/Kh#>@_-i[LkB</V,hdp?4qP<Qlq7555oBch!q/!CnI-4+>EJr*G<^Y2%eLIl9>PHN0#e0RgQe9L@t.cG<r%Q:AkXKQI<cfmlTXM3l+PhLg6&;_$)Q/lH\+6q*qW(Q>7C*`'@t$LLjOV),Vo'BV3<iNK!&<OX5//^shhm7hSY72LRSVr(3Hb`Nih%TAJVFmtfmiM\$u*PJTKdEj85$i"hoecm!:KN#17V?8QH@r=Q?;ZtSS*<H/=-1VRTU5_VK@j&tZbQQ;jP/@GYj.Q@kl_ib5(5=meb%40d7XB]!g/nqB>G*cIj6/,n';@Js*M^=;`$aL`[dl,`'*KR72[)*o_]O1VBT@Esdf/gY@TTe4lq)Z)FFXL;4YWho\3Q&-;O>6OIG%AsA%nnmSj6G'u?1o@kT/kYc^;OPe+u/ac/C.g4q`*,23L3]6QV/&We&THPl$j>u'%LjD@4:Hi&jS#[^&5=o^Ih#34+l+0pDSbK\V%LWH"6E<JQA)8Jd!O[4iI&U=sJ(m14bn8r21V,[?1OYNd?6)D_Mgb9F*6;_UqOc'`iB,;#NQb^1+@H)%/i?Hhk!7"mr$q$]M0h/&h%3T#dG8c>FF&4VaN5<'FVW=qu@Bl9>]H0OJ3eo#1L7]o&mP_fY`-rh<;b1B_1X:`lkHeG9>4<U2o_n)qh/CfM)V:#Xh!j7k.RJaKl%hdjh0L,>Vc-])aJ/85fEb$H1NnmUa?7F;0,1R3JdE[65r",m*KdVC4NZNjM]aE3%WY5F']@Q4gJZGqlf/WO0IVK0\&a3TIdFh?*?%Lt\L/&Wj%p@o1F(]6[,blr=P>VU!jm20Y<q\lfKZ4lG+@=sf`1I?^UtphiCfES.21a:sc)(I'<;'3ZhH6W!.W3]2V1#r$'i$Fq#[%<,++FoQNnICec,$#PP\q;USqdY#:5[+^C-2UIrU1K7DqT@he:SP,YVl>[X'/B,qVhMGp2W!,;\Ve]ff="ma#<W(7PbA#4:Xc^!7r%XBN/\.YoF0.D2]h&oL&K?j%'j$$$PZg^"St7*TOmMJ.tdcF@-``GWk,</6/MSGe8B.p2%$TP/tf=%!3oQ7^5XOAUj",5aq<jl8A-%j<m@(B_*Tbcup*]R]AE#.+Q_miGLO0"2B8JRs>l7U25LVJ1/ZNTNj>UE=6k\-=Aoh(NGJuA0bTK$R6dd!fn+&.BeoB@\6tlC;Y95%W)jML,B?+*P!4Rq+@s?SrdX(eA_3)U\ISOhqM1RHOG(>:Im9_@EB#,'5``i!7fm[$5o_.'6'2<BpV#0/p8P-^oqYG5+EM,hNc5L>%GB:*%bGOuQ2181tNtQ^BJ1Tc:JYV8"?`W1,!c.6J-ef=e$3bfi7=!&/HB_\3#pH@&=Ckla(\,l!%G+UdJ1$Wd"@57PU#'moO=^5;%A!rQ"W,ME#G_#]8SM9n7orEjH!RHV@jKMD.<scpJS?)-NS=ZTQ#\59B6<l)4QDIJ6ddAn0+^/B/8iDen8mY<[&J?]U`(jj?hkT@g%D6n%jpG[ID`7e/>#LILiJppiHA,2i57jWe+oRKU'FfS%bTl'#MkGja6(\u'QA5,_T?qnl#f/gP]puK"@efQI?\ZO[bU,W'_X(F]6%c;7*XP'-S$ElG-;"42-hJDJIckcNne"D]T4RD\a:@Rp!.7&VL0.Hu%A''k,E1I]e;(n7/3'gakI,].P$/nd&?CF:+\pU;Yq?m7d6%*UQ`IY1=_[FAp*)Eo:0N/\MZY(-+CY4dN]>P:V.GMs-QQ:H-<#g)>W>P&O>ECXf:diF0>gA(Lk.WLQNCUmL]6@85Duj^@?`ju%3n%EJ=MY[t\ccB9eq"esMiTjE6Qt5>7mjSb:8oe3CCAj(\`Wnp?=R&R*f<Ymq#><&u>.BR0G^;]hoNQ;0<FIL[KF%gfA63Yk:UTSfUl%"SgPr\/B5I9p)f2^ftmCWTp&AVJB@G_:,UXF[[&b?sCs6K[lRN.]ko)GRjFXMU7'RFWB>>EFJBa-^7u%Ns1V%i;clCWBfT9NJEMS%01)]ep,T"mLt]rNHQQ*"h0"a^Jm9A(V`[kd1'Jg?7I<+H!44Hg&st2epLKlB7'HGM=1%D@XroR=G`4sLnm$&JXeQMUA&oE>W!*O1%Y8:\Al`sWnM@![cST;doZF8e`-@%E*0W6RkcjI^+B7Nb*:MK$@W9No0,$g->4cf"<bCiWrC0*E0l83Z(JF:NHhtA$l5VODSXJqC?%a"`eINeuLjlkA=!:.TLZf!SMC4`$-,:cW,Y(t_-\lTZ<?fPC*4k-+a._;kU?-V8G/B*6LWC(U+:-*et7!h2XC)!#lUnQe_I/8%0!%IB7fKj+nOp+-@tQ")+%ALq!e9"-ih[Vt^XmB%oT@%j4$U.-j_AI)roR+Am2^F]l:3Z3X#([O[\;GGO/k3^CSjm%cSVDI[hVS`C*E%A'/"#-r1,p%kNOL2:#f\YscUag8kVB1kThqp"HdNL[mMmHg+pMQ_l-%cH9%V0;3@IO!<C.Be?`RDM=qU.TS,;0U#:Z0QY*sA6K,t%E2,r,+OMgg$.kLD.,?(tXf+#RRPD.f6dShfV#!J1l+SeYH/q98aI],b)mVKhBn"!a[n/1F(N2$(RSH)g]"(7(dt]U&".u$Fh=E"*%.'#6/MLXNTUB`"ij!q0!_c0lIh<YrJG2NnY\1a+#_GQ/]I8k000PtCq\4YHt7$CeK8`ns?`-(O\9#QYRJ>:ng.4"B*37@nr3.W%X%jrUj.I1%qVY0&6g%eOV'"p\\0I"&ii<.\r5eoN[pg]?)9jgN[1!Rt)<"V>,tKP&>+=,3g/+90J\KN,^1,\;OE/60*H2*.5_ieN25%;FqS,S2D3l*%68"s7;TJmB:&8.em89BRRVn#e0s0fVBalah7-?+1;+IqI(XjN#A$0DV.1@P]B:+!K0iPL4aOlWRLHYe.&[kS8i)_%/t,Bg7/f*-N&i"uXCDmc\hYG)NP$.+@]aC=V-CQsoc<8g0ihbI1KPm3Z"r@uM1T!u&TJ8"EendIAKs]Ia!61r%Qe96-G2X0.KmiL%/[Y"Y/VOM^9M;Z&Q071/NR4;<q=ioc(*t'Dl;8hebP:k-2l%76*\k1-eES+[,H^+&`rb^N,rH"51?d:pgG>ND?oWXi_1\F5\nh69%;tb2E)EUZ3s7.$'q)NnYIbOruFf&o4P#rC'd=)ANk(Y)foN@UFnO1'Zkd.MFj1ZV8>"pQNDMHo27C&M@Vit1c%u6_jDDuDobU]8t%b<m<n)(YM02;H$^8l@mRWc@(WU+A#F^3#un'Q-ft9MRb68_&+=RAV>a-]3N^Wbt&,1/;"&TOX3u![N^pX/YbVS+T!'`!MRq./jIH%rlLLX*/&*A::NK;r!lZtMKoM>]J'3^#E?Lq-i<+._`Gl;qI)&j=cA,os1ch7e%pl;OR>_QcQRsL1'^4r+B2=bMD^(j2,Pk1em(^'%DL]Nb9@?:Zn@4p`N/_!:Ca$Omj7csF_H),S'P''ZEnTY*=S1&QIeS9g&YaFufXSN=H8N7;q6`TF%!"#GB^RCfgH7cLkg!3dmbTu"%J<HJkaro]MXSc6'b2DUZ8'$&/LKqNgXP1o4Ln_Xp_,h4ege#N9Z25&/I4[);1*cY/l*=#hC&$bAD[H(pn&2:Q3K+Af^UG*YP\aFo%?W94N*tTP7pFI!K'HK@_X7,+,!1GDPIX>C("NmogKs-,<WQg.2QI8(u,^Fa'%eGQSX#+@SSPW33g`iXgG*"ItPldrIJ^knl^92N=%^q#%k]sXQL$u8!:EO-\<@VtT1<$JH^0:_ij.Tku&TlVb4=`j@-F"PZ6<;d_U@=8*Ml,[#M3_iSfD,T6dnV_.^7ekj*70F>d-.kX0%:E]li,TZR'U8EU6Dfg'SXtJn3#>2gdV?5([I$``15r&kJi@\FH%upMXos$&f'@B2+T=?KI2+bFAEL3];ZDbWFl0T86r&(psNq=,S%MQKsl1dBK37F>Ik%i2f`Ja1WgIi;(b3V\L9>`Y7X56SE2"4Ua%<5TlVRKeZRn*D.W'7Kd&Y[pUu.S!/UJ$TlYb7(G;%!F&0o0>MN%a!in/0`)s*3I:elA)@@Ki>[k&7+_S\a1*I]NZ4S\k4jh7Y6t@2T^B`4H>lg116'CXlKar5p<`#-9!<gZOp^JMR$J_`VTQu_!S^k4%MpOi]AdKT@SUA`8(0jLk-(.uG%qO!"3n^+c&`gk@oMcTE.6#Q<>V<USLeDV#>K<6+#'bM\e-&<+8or-CHhLCEP6fF[fq7QYffR#>%Y,NTCdk'N,hMT`t[)5.>mDglW=)P2R/2mp%T_7eE8uZ/Sj]+,%@H'gIEBe7m>cDr^l9ZKjSe\H/:B6':b'8jN65$rAYDb?C(_r^^%dufYXrU8]&P%T#&b/m,k5aj`2]I38,91W7>J6M2L-akQB<(n#e0hV+6o>E>NHA(t!MYd1uB[Y\QZl\HL:K]mbY2M\W,j5h<YRhAp%B`Nu;?,)J8%l0CC:JDQ9i#PAJ7PUJPB\'Qgkt*iBaA6O,T,Hek6#_&c]!@tfe*Y.Ks-hR^X^p<l9E&4I'$CDKB.fBHGHP_?Aj1BT%IFnM\>r..7ptF[tlG!4Q2e+-@5^2Mfk"``,ehYbD3VA3Wi2RSJ%9!-Ad#GHO"/MF/m2p\6]\en*Em0".C$<(*e&a&^[#3T-6_Lu)%7<6J=;LJ<lMc*jeW@2=.O4Q//liLUm&JC-.&8_EC=dqo^,_,9[=8>?T:-q8[&e`=`I/AO$<^3\]oI!Y1.-ekB%YGabUYI/#.$4[`%+O1Wu?6sYi:`Ga(l6DD>,65k2$W&"uO`X\jFBj$jI_TfoVO$egj&J*3kRqc^'QIeU!ae2R8,7?L;h(\T;]Guk])N=DRg&IRhhLGk%C.]ToDc.FfM:A+s=[>u6O1G1(XEpVul5od&G7u.%"SaS#l6LdG4(T--ke"[shdac"677rm-9<h`GGbtC5kC-8B#'@lD.h6rAU+i%%OnNFnX.SJK\`Z#[)SZ.%:ZJ>2K`>.9$-430GW6G&5giQ2Tb#g1!4ZdB/P\8nCM$YqQWjP$Z?B7Ohfo\-dE-BRK2pO"(sGnVYs3Iq%4gf'B''@m3#=0^I+T71/j?^J@N\u^41m7F6%Zb_W=]\/0>!7'F'9G(;nf_h5-'kL"S<5o"%bH*,Y)=[Y7]NpG6QZg_.I(Y7NG'Y$%=6Zk\7h55ZA]pC&P!gc[cd80N@Y[ccihMsNdX)/u?QIfO.WMbC(!C&6hn:Wk$(37&'>lRWR^ARPJX8m:ZaQ\8PI)Uke)\!A9jJ#+%7<gk[jkmbT:JX0PcGB:mJc(;=(1H\jX65n9;'?#/Hm2$,[P)0)E_#Io5H#/rWegBB;eYaha,3if:g`bR2ckY0K?)0r1UWUH?Fo<k%CK$rMbjAjE[ITQK=]aM#oa%!aWtB1EUf!TCA>EjQhoORFIZ[-O%)"Qc[&?KpQ^h\GGG%ajbC$cbY=VBA/jYC4EQ1WnYgT(f77sSZ%bG3M1^[&Sij@Ogk<iMc7^R4(-N7B1rO/*KY2_1l9S.JeUJl"+oo@oo2IMQu%aWW_pn]%H^?i5f,3hr5fJ+.R;rQOY`ha)FD*kL%S%O2DVi%fJ^``^ppg3R?#4^uLb%GtLtHdiCVB?et0\eh>V]>4p'=qE:I+Hq=0Q:01=U879f5oOKF*9gqCDH!mbB@M^?$L9jRg[s'+H%.2OF":_6)^qam`C1'fpuj69<6Qt4<X+WR2sf.=[$NNabQNMRNH^^l$XWen#uqr8e$kuY=KF]L@'XN(f.WOZH&g(WYY9&q^&]5!Gp%('&u>hMM5r@I1/YTq4\!)J#Xm9uA`G_PG"lE3R9X'JV,4(HdteV$2dYCT7DqnB5f@)P1IbEU>[1\m'1_AupkG(/dV4+IFJq23d)M%lqj7RTa(--'%TjRrnT4PU=2OWs7A'IDblhV%?^*0B\qQtlnb-)[u4H\>Hn'<S04NJhPf$hC$oL=`WIl\*bG&.gqXP2@K=-1l:!5h%r@7ah[L^IXf-IPn1'@`PUi%eWJ>1n>FZq"F6n]m1S2?52`:_8,bZ"Ae,Bkf>,pDW>1c>0<9"EsY+-$0pFX4L$5rQK;)+P.ll%6(A%CU8KO5Vdnf+-2Y-,N)L^-$#V3*dFZ'";.(Of[(B"ml.Tmr*J?nGJg\"-Z%9OW>n$=btTee`Y:5bi&piQf0CkVPkC6.r7eAq5U\UO%h$.+WSU7&M\Pfnqr^FMj@u)E:po5Y/#&$V.%.cm(OYtQ*kX,$(8^!#KdBUCN0t(m"W':%R<7kbH7*IsRqVKa7?gC0*r3@DVj);M[%^A[6pp<.s\++NgIs73@CooGaFqN$.*Vn`+qs7>Wm]V+i_0E1g?rq5#qr6)jXjkJsjJ,Jo1s6ZHXrnIJP?[qgrs7#ErTE"m4rmS@V%lZLa-IJs2hJ,ZoalF4P)jj4$Y!?Gst=8#!(gfF\e_fKRg:'n`=E2l?U$!FP4ctSJF?6Bb;!9NJgp_n^92ulP45Zip\&G&$jl*m,I%Yn7QQiRF*R"%_SLWD:DDKLkO)e)$.oV7M+(bg?Mfp8X!u98N77:1`:(+=J>)Bou2E+P"aJj[OP=PcG"aguYfLS=C[;Wb%LJ+W:b[%^(s$@:D9I4:VTA)#(eo]E]$D,W==O=>U)(b*3%ofH)j$,1o%qi`5gJtogS@q0gc#VLIHhO9S;;>^4(Ct`gX'I_T!jH!SapuHQ@^8%0emhX)M*N2:V7b4$L2`RWuX?`#B9dq=!`[\*[%Io&`U)+M#$+XZpQ.SK.pBO/?qr*^f-T_'@dfuEI%o-p`'VUQ2>.`J$LMELu6Z"%&4Q@NG$qbnbZpEmf,..Cm4bE&=\N`+@?L<\%.WY#!uas6<]^7W;f39H]ga=l5ZN?da5l"KI%%5ZhoM@>C*k.4O^9CVSS.S)Pj7;e%H,CGsa0XnUTN8L.)'*:d=PAuNl#CrWWjXb!15*=I@A8(:gd?m''I:(SJ0G*\Pu6WMT]G/*Ib<BYpJT1,[./KD*92jR4:/7b[,eM#%8<Rp3:,(o4M'Bm)Z^7*jl[`^UR(.%4pb0DKbn1i_N,M!QU-KO+)!/]%,,>2bUB$BjV2)@'qWn]5+b1t.$]$t6"HPaD,De]OYDMT2%BI+4a+!&*l>NV,DS!WfMYs&Sf00^F(4WkfP$-e["''9D<"@>@o'*4i*Jj#sda`RkEll*?2ZC5V&CT&5U(RUtkm(:ckc$hh)\XRY\%?AX6k-E=b:Bk"=V4cF86FjTUp1Y&&F'*Jo-!.Cu>Si@<&kWS@rBu`V-gpuE=jdU,d/>+e%Z9h^%O@lb'8e.1'^a!PVYN7`5?.7cG%ia3moHI_YmEYbKj29U/X3tZ;pR:u*66T:Ar(61S1/V'YV6E#h/7u`kdnp][7JcO';mtkT\M"s2eW![U0P"%tg?hX-oX!u!:.hjN%%1UDsfBrGM<laB(K#Fe>WMR+!9+eXRgM'0_f2QP'Xb[o1Y2G%K7T*>r4^CujZWiq&9%*rr:KupO?>D,Pora\sl#6@d>)!bfD?`+IT%NW'Y8SupNN3m[SPX+89'e[@O08^;%3:))M$XE&mO'_'+Qg9OPkBYH4mq=!'[3AN=.j(aR"JCi3af11DDH[7nNOf4U3##A>E@N(q<%*(jbW-R6^,,#?`#J6'l^fau:+&Hg&Z775-Y+@>W*C5+9V(fuZ?r>LSb!TPHSY@[78iiWm1\Ub<uYW%H52@\Ke-cqujmAAK;l?2.]%NX>?fnsXoVWiIKaR3k2_@R43r`QrN@LWIj`NX84g6cE14p&-4sNEr@[pTb!PV%4EaYj`J:T9)/G:cYIekNgtn7PZ,BV#bQTe4j^u%="/`s;,U[tId]q:ZNG"3b`%bVQB!K:lM5V(!II:.SrNnV\hB7deNnG&q"_GVJ$S/akq8?I5]k4OGB#H%,?kO:ldOF90O/g?\$uPG%VhjZIUn8<p49hLuQ]5ek,H$n+RW:q"hW!,oL()u4Y1ddf5qNBqe%9o437!.a=-[Yi^KM&7>uaDu&H+_$])]of=g]%^&8MR18WZnO%Hl\30mfH/VQ$b\Zb%,bM'GCEKV#$p<<($bS8gOO;DEB!'[fU"KeL@Yp"bbVT*lMb_]'LnXmY%d\T;+^pTU@l<-\]<:oYS2\?_;02%15i@4+:/98a\^G5`sV^Z83S/R+fc8S<WU9u8r+Zq*'82e:XjeP_N$&bn8X=5Z&][51/f`qh8?8IrY3KC5?3juqI7!`*/XW/0sRMF%<%"[I,[Zqce=I!P:Xu*k+7YB.2Ju-H*j3Ee6O4TbaP-Ss?C)sX4`[nH!Kp8m+\g(`$G8*_Y"/*l['u`uVLs#T$1=)7]S_rh=dB-u%`Ubq13S$bhp/LWbBO76ucLk+*CoQO\'-e2O8]nC@\93t%E\?Q:*DKg8R1LU6J0Kei=R2sp1lIol2O^>!#*?Uf24RYLB_=KY#p#q"%F8H$>*oQ^<q^O+N=%:ep?joImbm5mg$Fg]5c&`:=&8\Y@RbWuD,YT5BRPHl/fg[e)m#s#4>W+7@gJqJ]@9sN13[$FN!o1$FI:M_a%C9$O4+s=/ZF7uf`!!=bQ'-uFXR;822,2)TlqRR8H#I(CU?VRU<=FPD,+gGa?U.'SX1^lqQ)aMoqH[W",F_A>'.RBrkCrc`W/K'Z&%4Fh%:Y&^0<)o(d.Ct=#D"$t&tW23`GoDE>TrI+$sQq)8Vn&!6?Fim5.,bu;e64>$jG4Rft0)NT*RS3&Nr8)T`esKZaM?QVQ$-`im%ZN+2$UeDHsre?c]@EQ2=hK\AA+c&=05Vf#&G[Bht6;YoLeK5+^;jp9ig"RfZ!QDGTOD/Y6Vl'H:7;P4OBE;!D.3Pqc51u/eC]kW+%,/fFQ69+61i_/8j1!*Ei.qO,/b'Unn)k='m?=_goOR0-\SdbiGPo9Yn6e`Q8,b>DE<?osWheab-jZN)gZ)H%qg,#<(]Yo.!*mKNf%.?@lcO.lp<T!@<fBRYL*p71'7n+.?JkpeFlM>.9Wd.mA53"<\72'Y,O+D`JL/-JLs,+Er%%+6r5l20.<K]f7]#tSr&$kQA)!O_0I%Y^kaD?%euXh,9Z>J>d?OLd?&H1cY08F)$;#nH:[^ddSSS9*u5GT`EfaI?7bG+A.CRpQQ9+QSi?TDC`]qb&.jW*qD&L(\7u"i:1*5%B(0ce"$e,O&^nOONqc9W:d-L:#CdYcP*X2$"]AL?LVH&BV:rh?&,&B^@CQdq+E?p0nq*@7+up;=O89an3?>sp.!-=@`>NhXBc%E#%VEWX1lD.pMa8"KH`);-BPe$uA$$#2&AlY'JLlO4f*e[G;&]f!0J6#UtmZ_g\E\ahkM<`_$N4Gc$d?Weq89-G8BJ+/UG8e`/1'G+&%<B2U^h)\N>^3?H)lubR1q\*k+C$us=GBRO+^O?]+\YD)fFbIU"'rN;HcKtb!J2B?s!g+D=+lIVfB*^.Y_^+;K*Jim/JhHoA8!_jO%5`'(@C<]"/ZqCD,Thc2@=Z;Qr.NnR]!;/@d]PSe;7#sqJ0G7MKSIjBS1`8(R6o,O=NS8)-R@<\[+HSX`HN*7+b1's\7W'.#?(P8e%T.L(l*$9+lN)`+bk'5)D08BC"-"DA?LW0>>W2oeBoY(CTW<Q_JjkltqLoE>:f;uVpNX->8#hAA/,`iD4N+^okHj6]]\binN.!K2^%KoI2N)cP-4JturZOrJMsla>tgl!?u,#l7q-8fA#Kaobhg%812FZ-ps-7&OWZo$]A2OR%d'U?/$Fg3%Jri5VIV;K2jQFo[RlR]BY$%B"tO`]ZWq`'W:ZirEP693jdWY.O]?1WRlW/cHN&m\oaO3a7<(hUfg%0il3?*LTdJ5d4S&?Q%d+dU.lf')%4Ih"2erhNo=?hr3!1!%W2El.g5$WVDU2kL_mU?T13]>^=;b-c,N>@/NPUhQ7=MTbH/G\AqD@*HJp?RU0DJ.S;G.j"m)jR^kTdlWN.`H#2^\g@9<_*9`ECK@%d0aZU160f3MlDaP;fACEW?d^</llS0FDu&aE]IS<pM#7`,&F;PH9<#r6Zd5Z8qAY^&^2'm3;f>oP9Jg_G94]jMC%fVVJd&n=HRM;%jE)>3$mtd2eHWmFa:o^]A8>s6/NHlV=T6E*=%Xu*J!)'HH_C.)g1c+i*4urDZFr#,oI'jHArMJ7U8Oh]2g2jP&%Uind@N<B'8s7-%G<96Rj#Mljjc5jMaVDW?3VYS8ljLlXMBPR!]Wj24?R<k.2qXD'D5TQ7+.;pKG`1arCXYMVW*lP`#%q1>_6-!O#eKZ.\`V9O^i*?R%;P=n]2G-c[g3UC;e5&R6B-M8)?iUfe9<eu'+73rT4rkB@Ck50_R_oGXA)5'p7_q><iL:Z[/E,CW]Z'=.f!_W/&#oI7>Y?k\N+Ger%cL"!E%O(R0.8%8=]/7dDg)hDaS&9:k^@`0W5p%(h3>*^u0_nX@PQYL_?;1h'cn1hBi])K'$UR1*76t.\#S*/hmm614fuOK^Jfkjd%_AqdOQAoLkpQ;3ddmd*Hjih(,Rro\V?k-PXoPX+Wae3sAUMU(e&*44Db+R.mG2<&Di\E,4Z\^4f@``]PR+S)[?g(7U2*.pD2ZsYc%oB1E92rhZu9]Fg5jM$YuN[2tsi8n9O_rY9q5\];#&EX9i73K9^r99+oM;c?TR8B;h9$&ABNoV/TJllW;<m7)%Zos.<-G.H\_]!eR%MlaoJb<mS:q%7GF;4N>MI/,O6[le(L1=-*jQ)OaZcXYk*,NS-"nrrjEi0!.0NLAsFU#Q^2gigY/N"gbTn]nECS8=G<&n58\>0orr%ko/2;J5-*S_(H$h(#RGZNN861I+j^,RfhE&Z65dJ8b3O$VDeOC("b%gRp!"uR#K@1B/O/Th'_)K%8TJfA5\"O\4h^i"*tEU2hBIo%6D4(+\M-iV#uHt6K-_J97Y$ATk;AiR&V$n85Ie9*g1CRXP7ZJY^"Hte27[\3WnC:^XHD'#@A'f)Y!4m=k6]n;8j<YEZb/)=H>d&U%K^C+0/PFP"(4mr#NpZ,bH]BuTfD*4N&F0jTle,Ac_2c>;gPU]*20u9:cSu]HH8(;i59%K_,0I0BdIMa[j]ZOn$4I/b+1G34&e*G&%4UO:MV`O+Y-FPiQ=Vl/265Lf)Is%$c<SoU]\\;XEeO%ZZj<[tq'9^=_MG8Yf9r%l0j&aj?PL3C;$C9VMIb/eeI\&/b-%kY7+!24l%r)Lrh%ka7"@qPkYnZ\`._&m1gb'AKm2Q3_=!_C`C>`%rbE7<ErBhp^rdl1Nh48s93Cs[9.op)s0S_V\ZOU8:I,p3if$1Y6YVOSLC%=:/)(.3"k;liU.b%lrm>a"jd\Uo)j/B<u7pD<Il1R232.0:&<`l.B?<=e]R0I*AkY`_ll6*D9`J%Wp%O+[&9?P&G&*npleQY>%:4%cXAct1Vu`k!EaqVabmQM;\`T31Mb`k<%MRc*2A;WC=f'.1\9AK*W[q5X=J4ErT\Bn@-fr@DYR%Co?`UYnB(3bU]SjVbk7JT9qu2&%I.agKRtZr]@\H>P/Sa"4\ua["Lp_1&Q2<gM81:#cr$7DVT%053!fQ]8o"BL'?H9keWn5!U@]s^E@,du.Gb2IOBf/V\W?MhGEmf:e%3"W?ph/fPPMp>2far!7$&B.g5k[!?FNLMf(.DP/3mD^XTIBE+Y8IW=EQe9n=mlouo)oi:."R3`?VS$Sr@&>5"!;5@7?j>R;L"MXP%_m<m[l<<F49e,R,'tV'?mZc*2q'-'Lj@CB9#nmHN'^VbNm)r`6qHGFU3d-.&puj]71TrerS_j*U?@+q$TY]gLao&k]!hUU"k5hBQ%fmmCu`UQ;o!C5SO;BGQ56;4uMTX7P:^]X7#4_pT&HsVo$9j.>fHclK,W5f.tW@g9d.<?!aJpq(_l3lgfg]mOSS)j(ZHmlS^BqS:-%>^(T6%R<WajfjSR9Sl=E3<6?S0a&hMIZ4tseB'6d,7a>/;j*\`eb/,qp4qDT<B_6rD7PPEq[^Elo/)`5G+\t5L5j@rTpg0o4%`4I%5D)VdPebFT^Nr6h:YBggi";j?d(!k.IM3F6i;E-b*5=P!!3+J[rG.QWjR%!qf.67AJVH'`2%6g6\DTAnhtn(oL?fAZF>Ont-"/5o%/;Rr-_<U-5=E'*`[uYl$)+p.A4kVNbj$E4l;KEkQ-km7G/\b=2\GLS>l%Arh,OX;o<)3-Fq?:'KDT3"c+3G&ZX+(0CF3:hT%CmN?%jV"#X`*'(*@T-q\6YD'!*'ViM%mAguhTfP30q.lW;!ljMf[<O>!ECh;9^MFcnX^V-W721/j-an?O0bm?5"a'g2,uQV6Smhn^"#UR%k)PDg@]j0Q.g,sYUa?!!;WiJp8d89cMhd\HF48['lCe'md4>Abk6bLo:a05tG@b/R6`4a:&\tloT\nE/Oo`@g\=rUP])JC6QfeXC%ieL'9P@L3IdcC>^&_?BXg,FGL6DehHH4Hb5cG($V`D5k#Yo\Z.1FJTa3-3AEiHa_=^Kha(1\(5B30lm/J[pQf4I#$0jL0hFq8(;F%EK@;uD!?0,%>WmZTr5Vq`\2:'StAk\6"&".;0Fa(LhTC%(>8FnWNf2irT-DL$O'p7MGLE:VJnN4?(=@&jf!AeHk_lGh4js'?KG''%'=S!.[YBo-ZuRK@gJVrJ"*9[=$E]NX>B&2&b0ga.ONc-KII8K\..IqbX>3lI43Ml(j4T['7*Y-^o!m(75<b?>8N97c]@f82C-AKl%l(NO57k.^];JNeu<90.rQ8^cHGu<us:VrkI_6Y2r9WG$(ADS1?UX@jVP3C.I`Pf;W2$4NK,J%8;+O($Z<>5M/0_I%o,sCC6Wb#0n%[dVdYVluDK\+5('9EEQmVni-`Fg7,'Mqqm01bHl3`$imcKW4t)3)(V%=M+_/HgI9OOUh7BeOp1uRe=cmGJn3)&kHJljNSA:CO%C#%q\2a,L<'^7<n%j$/98=3>X8%Yd'YE13o2&5XccHu@qeaMlKbGn'u>Z`7IfQc$lV5jq:EXY%@"Ct^*'sFURN2h@]`)^+j\U8Zt*.?%=0&i4;QYO?p^De>2&nFtUu4mpkNEKf5BiJ%)(eC$<kAS<<EBZ#(j;-/-V0LmW*rUL(D)kS.<E1_Y>WGM9WKTBU;8?YRcVi6EGbVI%Q4l^_cu[8bT0";j`e.gbL<s(f+[s"D-7m0-"PduRL&BcNa</mHf.mq,g>hH[FP29)K<n-Vq%0ATI]S7FT5+d_i#Xpa@T#aPLo2'n%G2JMHf`]Ag^(QWYpq`2&OWj/a$>-A78La!mL_5cSA$^/]MpRAjY9MRVq6e_WP48t.E1CRL=&niYcUM6%>YF:q=?)+Bc5s+NZ%p*f%:dM)SS4TDj<u_4dF^sf73$u(]f2YD>3)/i+c8'@`F6NM72T[JQFLA_C&+l,MSLC#Kj"Z]!gAUmI-PM7+M3/3&PQ/cEZl?PfV6"\s%8ZW#iI1jniJ?t-S4p:<bSYK?UKfrhl#`mP^pS@Sb;pPeOhd`Y8Kb0@%M4K]FlsM1*f:;E:3n.D(#2MZMqj7W6C/#TnIlZ&QYDGb1%r\5:,:naK[X_A;IPrU(JRlY:gmsM000*<Ku+&3%8!n:1L;`P^4j-tiT=9"_P&*R)o4^3d0iRrYpac`8[N]sd`e(2$K^R\(2<j-pd%fJBpmR:_X4AtC)c,"`+?;6<WgJAnsDaO8hB-%m[d9SejYJBIJW\c=0sZ*ID'"pK+A(2j/'^`afeB$sK`>"tD^Xkq6RfN^.9FT8>3%DRk*c*gdh?[Bi"kL2?pU2=aA#+<(o_+.`m8VO]IG80=HUhE?VhRs\d0ru0$:>$e/=Hnt78fui&T4s<YN-6a;dNkOMkXNIA.<#i6d%=,PnBhinmiT8Us4#qf_)\hu9@3FfN>HRKJ1;X,W2\aD>iM.VjGM"lBI7/dpqClb:CZ6Iq/)0m<i.51n1)*[_g`FOcBX$pm_kP+%1%@*Pn1okKmNH\9ZA/1)83GQ0DC@RGi"_"%OSQYC(6[A.A&>ci12!g8jMJ4+\[T!kFE?nXMjQa(<'fWMb3W5L-]ddI7N>JL/EGnF<H%QA_<6%mE"V-i!sjV,7J!=F3*6[*bq;ZCm[]mJX]hWL+i?#(ios$N%\P(a'ShRBHRdVFn67:],Au1hbGFdCYurYl_,CTW'.gCO@NB%'-'g[!<5N8ma.[C*Z9l`>W5Xc#mEJV0F(']O[/)KGs-^(\)U%l$`&Wr-sAJbrFXa'D,BB;L^+QOfBUL5.^;HV5"0*jB-]^GkUY\a%\MUDpa#Z'+%ml7L20C<\4,ofF.8_G$o1$JSSNuq'7nQLD%3Vka*Lof(+]Gnld.`*IFQ+=-Rh(0_2=jf!XK2QG<H;91^P$K0#BiK&%oi.ia[r*$V*.G9XI'R8jo=i_9"iOd/,EM,j,-?[(.8,s`DN3i&MEaT(OXI<RR0Z-(adXE"f%@Y/@%LV(I9^c$1SGC.:?s^f[J9U2%ecG?bW?)^4bC.h'dOu<U>o)7r1i'Ra^%j"F)n2Z3Du\/J#*gckF4_DFCE7jaUE/6b>1FRi3h)i?W<(*B<@a'47lZG*I\0ClMmm4^%rFSju!)QA6XuO1Q,FJpjGO(sK]@mSdC)Zs?G+[mn3VdEZCJ"YcQm&V2aEX30TRKQZ.VnW>fcGRKEgE<]bN.<k@;P4]3[lCS[>GN)%]Lsj<N'[T%]]@V#^P$K0*Q&>SXSkGG#V2(Q5\.+C3'a#<L"$tIF$gY]B9O8X])*c#_8A#al;P.CQ!$CsNIpWr.QN3#SZ,?Bb%R!.%LdpEs`[S(.".?"%k<Lq)^"#GMg]1-4>-E;cjKT@D=%XMa.h;W-"M%W+MNB)TR4`92Su</lg6j1B7*5:M^f9NA*6.$II8O<_OeHt@%3?j5IP-u`$ShqKd5)jI+@%(YT1j*E!]%Tqp-55[nmt./3F"rrL5($ldW'E<>fQ'G8:N"9)G,VK7W2MI)9DqjT8W?fq^8#1h<),l]%![)j<Y#g'KcWt[tX%C+C3&UTA]@`1Bl<NC!gP`8!]^0lFiu!"*.06/r(a--Ze5R/6!&EK3l$a)P(gB^hf<I!MI2s6<jrE_rD)+HU%0(`._)P@#MYE%V:5QE7KcFACVUo0+_X`24%dq5<k"k3*jo9#0uLV.b<Wp[NJHN9PMGCPQB1T"&3>r9I?HlRFm4s7uBp;]<FY8B'V%]9]"f>aNq"gM\\S!Ji@>7sq6Yb?eGoKn_-]5]Z3JKosm`q<W8t*id[WBp&Ed$<R9MS&4565h2.VUeo2m<lNnsG]TEN>=4*[r2uAi%2A*4?4+3Or\R70Aa4%.+"!%u[jTu^c-<t^T(1YoIAa@_8ng>S8;;-BOOD9l9a$J%T=t9IqP.LQ`a<DSP73)*IEUq#+X_o#n,&GL#%N//M4.!/Npk-,5Yi6%2=-4-728.E3&94T"9Ski`'f,pOiWcLj\8q(%VFH&JEMJm>r\Z3:PbN4'jm)rhi'#:Lj#+2e-O9E(5V6H`&%JqS'4NKd+gQ1B/ph<9V6Y:e_IPhtCrDqE[*6RiHg:NLqsJ[4c.:44E]%mA?)794=0=$Kb"og/R;GsXBQ1Me0oX1'@BS>,sSIZ!I!%;B%"oh!SoK69L;#@T7/*+*$e:g,V)g9)6`'lkH8]3XYot#MkV)]QQqe12)SX?5'W4l42=/L-?]-1FDX01M;))\PCfXPikRC(#Fl*%Sul7%i,n&oFb5a7fsGq%Y@EJ(Z^$i95q6&sB8_QP_!C<VD1.9Yc/e$RCFDJ@N:8[d!pk.BCE$c"Q;45qZ=iilF-K">as0H4].1c*%F4pY@\sBX9EK`[9g3BJYh,N4U;p=J]1VbK1U`H])7?"eBQO1k:?6bZAG;Gdh5a<"(M`cO>.hP9#8-$%%Uqu;CIiK7J8ZLJs@KbbE%gb/nMNn$$V#ZE2r7]BjD#3W"3gbq9e,`ToCMW([8AHhn3']4L9%6^5F>ATjtR^Sh!o8U#0b@Br/[PKgrrIm$n)iU<\:1,C6icK>N%nuo(<)!0=(e*9'a7R54#L16,C?<L&qV,ACmPQ6^aCA`%heiM'p'4qa[!+nPR+fn?-S9@6hVj+ZE3;V3]WI-*t"L>S*gc&[hCk&Nt%`P.F$!?]b>@b=[?;3P!?;V8j'SDm0[`BVE$-)^4QI_E[SCPf:tEnODCL.u%1O:\NCLII]gGSGDe1R,:'Z8OSZGi$g)kQ.OA75-o.%<d<$\?2HFs&IkPM]q3EVi;&t*EfEUaC8P5EX=4eOZO3`PcrFgeX\UYs-P-Q-9fJV=D-o8u(!8X;L-H^18p,DF'#+Y#VLORsB5/pl%ZnnOW5VMoWAY^mj'%cM1<ECcA;@rnlZNI/i>?X(Ie'7:iI&/S=rI'!s:na&i$[^FPL$pc#kZH5Y[7+slaKeY&CmT)$%WN[55@#*u%d.5(Hj-n?E!*s/?*G[eN)EJ8Z&,;ia8m^KF&,lK)Opdk=r#\,AFdJ!&go;ROL".rd+e-"MBK'oU/T,[=S0`V7/YMK])KPR,obqa[%BHu0u]s/b1g`Z>pNL86jN]$1aLA%sQ^AKNZH_Aea?IWf&l/<7j1IG\Ja>_Wi*p?Qu_0HDpJ*G\/B2gJN7&1.BqmiZo'F6Qt%H-ar%<+.@DLYD<L'ZL+u<uN,J8qL$>Ee2R)n+:3JYOUjCql2c"7!29+Z2b]7WimfX_<Ck0YZ>#uf;BJni7bP"P5;[7n%L%u%>h8<e';n-%(*uW<f2QGs+G)gG$E)u;OqqWU:QtcY1"PI4QbYLEHH1PTTtOIj7J-Ck=b%VtX<P/)\4AuuCsDU&%Qf7lFb3H*%WY%uJ6Y72K9l!Z%?3Y&s2%*5FB=d8C?ghtNBAj"Q[QeB*[./$T7c%[8E?Rr>k6oca2`VEAm^mj*\(THSYD*88p$%r%7+@4NjOVhmV`qNbk%0Y5/Ib<p%I*h3%XU;pZ_(V!f3@3O>p(Wulf,SG*piK_F)to+h"XLu\gD6\Dn%&qLUN0WTh"I>&\SccdUhG(cqoWdZ,.?0Qf[DDa:$CG:_&XZ+%]>o%`QqU^&2n(:J6s"C$])CRg&Zfk"70PphE<:6@<))=(f99B=-&/+LD2^Q<JX<Q&l.G$r#KT#@*Zqo;!MY_\".ct/QQ)P3g^3h\%oP;lu5VEcJI+^kScst8oOGFJt.bbCo984"u%d/"#'UIkeZYgg,AZT/NgL[isSa*r4(.)k'mW#mV*e=Mt4e>A?oDs%i8\h"IK/gR5%\crV;*Cs.G=O565.Dck9`%&\LU!s+m:`ih!..i8,r8.?ZiA/f@]jB1UC<>HhEJ)#-A"bhGnQP7hXSTA&%\&IbBbIV@[R\=<Y2%?g%<e-k"U476pk)R/Yq)DdBbBh-h_R5%R(_saBQuZ3Z3Qg=fY9GF:D6GbU-cI_!U9E6*pbpr(N^D>`COu([#"Bs2;..LaJ4A0_]EXI`%'r6'9cCB<-:H&NXCL85-kLX@o#IG2$!ot&(1nC%L4m(9d>!I="dLeNa1K58/&o!)U\P!6=DP*]'I`W8?Nl3JLBRL(h4A`.CVkbW\%6M_8e<W8-ZM"k3l9V\!#3nYC`+K]:ZF_*'Y,NiroUgf_:($[m3W%(#@"D5$l3(',90Z0RNSa#u\>V<V6O]/pLgRm3.>R9RPrjke*%E3l3I>!0eT&O:r(Yi,oMeP1=*VH.iajWS24*DNGB"9DDf"4LIRA8J$ma\-tpjp`=H2,lbK>mKTd2RLXP)2b<eFt#(04Or["9kAuC%;KZ6XgKcR2PVrbg<`]!o]2?$]^S_DWF,(HSR5gim:PVsB$=kp<MLF8XHrV63e(("b/;N'Mcp$AjU!r]#<D^A[UH-iSkRDL*#^BGa%8:Auh8,$WH'Ur)o_T*O$*fW7HcH1nfcR6)@ST$sXQ2I.eZpf1-d&ho2jJ]4/7Q,-*/an-NP&ifo`KEOKk>ULG^m;XBVYQ&\RnClq%WUZEdY3qIc+L"&9e,"5(3M&[Gdh*0WoRp,N6q6#GePX*Eg&X.oOSI@$6X*K*Km8(F-bhG4"R_FN1ET!t?^D,\H=P\0chD0VPsp%*%]16cof;X;PS-e01rKIH$E%3P]>s+<h<nU=D-j,TM<^Hl^W8t"J:8OpVU:L+99ZeKbjLqieKqQ%"LF+I%Zf'ah+\XHo*:t`fqLCB[%PJ/H9U3e1"a-S27Ql!\tUc1%+V-MQ;-)<P@`REa\/XfF9;%8NJ<\OQCfD0TW!mbc*UP6T9:UVfLmfd;nk*Z=eiP^)+R<i*U#Rc7:%.2_#P%c^TqZ^R%(4WV,cF,78j3m[0*2/TiIVI,3!;4iV4$W/>.4]P5*;B?k`omU$?Um1UD_O*PoNW(j.RcsLr#OQ8<d"stC+3[dI%[K:S'qe-$(#AbGNAjZPB$&8nWlJn0'`0KI[=V=DiYo\6\V%\b3B*Q]UQ,?MF(e^,c.;up]?c6fq;KYmob;qn#E,f#&J`o:0atWE?%3I%\1#"]hM]*"S^YsIGq$%nG0FopL*)WDqcbJdY)KDWl__mD-^#U=5;kgTabjWAh4S$*]1OTG+HZt`fKP_K0+a.F[u.kHr8ag^VM%RLp,9`Xj0HYuq35UZSV%"#X)s(n_AOG[j8Bm#"p2A'dp6DdP]<A?8'r9Jb:)OE#k4<COFR:4*/>THn_KeqY\Ae.-DZW`t2r"lu-T%U4!>]k>ClV!fHjW6<#N"K-K_<IZDm&B:6&<%CQMk8JCAd/<YZ!$;(e`HBcFuWcsmWU<WfSd6[BDh4T`mB^)92U(+.PbMj0$4\mj3%,f@0M[&.U]Em"K_>V(UC+ZfRl]F#XD4RlU$P*seCZ()E!jeEgH2a`NCb!K_-X:er15U:+GH4IU>AGCu_)LBrc7H%)6?o!7S;\^(E%4_+uWe-I][P-#gIFWj^9&XRU-$Opbh"YtpO2l=t.84'e9'X\$bo\ge7Zk#'+4[_HUQLM[dPp8IGJsOTb.RF^P,FFc/1)Do,-9@(V%8Qb,T/4kEOETpd4_Ggg>ga)EH"73]4T^!c\7F5*;aNN1oi(%e,!$EVJq"O\X9ViI;@_*9sELdDIRd]mlAL^hG"LAJt.d%N_RinLN%_gp$(+#[\"ph\JD&7Z4+@\3CIc[0t#\E!a<XXM3liYPP4imd>KiYb#>[oEs%8j`^7eNZQJ$C$._nZT2WdKfFuVO)o['B2*M/\5$A%7DH2aeKAMX(!`Yq!1mKumR7/8lN%M`!uN9;m/5";.U.m.$VlHlK`M[d^G^TlABbjFW[fZd*kBooF5sYbppDgQ:b<%i9=_:j?%H0X%B0Q0g+eh=jX/Ifq!&@W5CCMe'!\1lr&V3/_R4(gd![;qJnm#ZX=:km61`[\rJbTSY;3Au?(Ys#Ur[.2"-A8B$_rfk^;C,nJ*>H3q%67nZX9qYK;_8FNb8ZSmo+Tmh=4AZe::QSUS<A"oe;b^%o\(pVOWG3R9QG%dYWObis0t1s,?_HRF>:k7U*20AB1fo?7bb=S33olL%%+SP?fbK>rnIEgLt.)qbaZr\VJiFjV%bgP-eM&L?!W[oD&`fOLth*'=f`m3?"*J:@YdGjIn9'E^"-q-A/f(DI*mo.Cmb0E+!H8l4%%F"_.$QEh(T`Zsob]"TK8hPs;9asP@lfqr%.g'D%D11P+RdU9KmTq5*nAJlZqlajS(.dn30"XIAo5dQ5feOnm"AQB5*LW;0u/k^bM%mV-rpmTQS3`&W6g)=OE2cU9/G)]Z>W<RcK)/2Lnmmcj*(6l42bE<sSH,6>uKXSS&9"D]9GCg'nSPC0:>d-S+#?-;WF7V^bsr]E!B%8J58U3/\K?<8r`G)9FDY.p92G8uDON(qodQLU3cO!RZT*W5LNA^:b[%:4h7,oI*>>]%<N`cAh&jN`(-'8LFb@4)9OJ3JrA[*13fO%!79#Bj64F-W%p?Dd]\8uZ?(,I9KI*4I<JQ^*'B`s1/X[=%+XmAO#adb\e)(>l_kC\Ro._RmlAFHieQ%h8_TkkPRYH,8'OldH+k<d%.$K^;;K(!\.QLX8MeOXRia]ajJXKCmG<``'kZ!D4F=gUuVmH4PS.bPg;Di4DI6kl+_6tDW`g0ksl-":mrCa*Ch86\]V_t\j]K[=s%LZ.d5QN/JblT1Q>Nc^&JhIK92HFt-?1D3+Bl=tT(dAVV`]?/eSc9gq^+c#8jr3&WM"OL2\3OLjFE-YrjG@"pW&6dPt7@Ju!\YQk@%\!_$O;N>V5D'h&KL-UJj3pM8(jfm$q/Q#]qSi\s)YGHB+pI/WCfM'>%g7iD3]!$d1#W,)b&:JCQP<0AQnUCKg,)gL*131[$TYrK6%".67!peah9c8?g)S).0MK0@lR_reE:W(M0m>#o?9;PVl9hQ.khkm]`?a\C-4?KL?)E*J'PmlHiOZ<r9Lqg`A#<d"N30bU;A;1T6*%V'>^(=cOGA*6O_ahVLFR-9%&QdIb/3E>KXFZRT.>2gC.W!\(n5m+#):XY1d[E)!#P24ls@++-V>Z$G?u@J+2M4-uRRNPr"o7>n5J%H=f4peq\o*HPX)$6_S7RZ:e<'XNq,&!QU=7,Bm*M0I>&s;pGi$mOR02KcqP)^.pRVi^&'?,3)l/T^H^2QI0ke?Oc0XbE(Y%5^2m7%<_5C!W7-uO62:24:j:09^&*Y<XrF!KIfaYTd)_`B>7Zg_(mr<:?\\9o.LqtF0DRsrPG2)4C-V:1Y7p17.(W<8Zii<sIQFm.j;6_I%?9XFo@a.\Zo2'8Oh6$6Z8hDjhY>MW,]_4J:-"^;@p83I9`EiT1CPDq3,JIk)j]+e(kLURO<X9p+J4tC''$UX/7Ie)&%g&EG,=dbb%:T.hW$5j_>,T9TTRWKP6HhHh<S!QX`.s/S1b2USeQnYrQ84amS(fr#A8h(Q!\d%f,Wj9OX0VLfrhQl]k&P)1TZDcGpWcY:*feaAk%5uL$.d#>X78d(K9V[mLr\!cVp4VHTL,S&T&Ng+bF_+5.>ZCY_d($[1`^-[?ad1n&+T,7`+rG)mL=Tg"Z(ua-&)[19F;M'm<[JXII%LD0?;>gG!NHb-D']5L6Ubd>sp<u`B+8N%aBK)ZAqbDJq;n%1%[S7)WNBca7B(BfaqFHu/Z[e5#J-%jc(F_[T:.G(Zm`8>?Jb5@@V%Um[crWH(HV">C"Q."Dm.(JcIY]mY:a]KO]VY0mFAb>!!f)EbS#qa-4_[p)Q7@lf@A;"OGRV.RT/o&"Gp,5p@4.>+7&;2L'R*tfCo%FsIp_X/b/08/lcies4d_TA(Y.7_WneP?:+%ZGHelRnIF1h9,FCS&;KV[WL?sd&\T_W:opr#X5$i08[VWC#\TIM19brTGIl;V@-!^%9MIkjm-XVZ:b6=;&t5L%p;i7);g,WL7,7EfIH[umlE8lfDR<A:3_'@[-ks@m?T@`-2"@caO/d`JGElqm:Iq`og>(j<q@m+Y@lh)B%H[YF:r/u=$->=>o4DqLTkI,J;UR8Kh.0/I-6+(a"Al5kRla6\X(fs"^f<Y6$Kg9+;Yu_^D:PCS1[*s(#rKaRm9pX>)(CTfq/dDUr%E2m&8,ikh#Lh)%u2>?f_[</^/dH_1'a7)0K0$.UI;%i,EVP,bEBcbpDQGt"W\-7_a,er9GGHj!T;4VMe?5-3p]ZTlK_mPW,9;7!C%a%VaP`Z/'=br!:Pj;L:K5leje'h4T7%7!nfd+]+]Po6K>&s%Fda(9uBDu]t?OK-ZI%PWbKBZ:"9J15g'mHH%-W8D)SYrKES^$+GI%1>>iXh>Y]s!8AbIqmfVRc/q+=Zf;r^OP88<Ik2b=l>g%*V@'Y4dfR_=;5+fR;H/;E6u!.PUq>8ET[*FH:6(?[:j%p#(E!i;k0^Cc%"gTXPV__nHV$Y39L<XrC.mc/_OY/SR>)t#C?QU`2'6Hr5D!fb1!h7&Z`97Lqo&JS]kftNN3k<mu_&)oXb7IG_Wb(&JnNJCq6=d.!%5[=sW@,2C50`X31$)?!M_XdJehKLR!)Ib<W8FF^CY)kUIQZn^&gc[PuEO^Rr.>N,C0WU9,A;I3o0rnJij'nQkf"RBEkW)8@d*KDW%ChcMAC1d!f.fUi9^/Tk'*,dMu5@&:#p+4q:f/YGD"k>eB>-])^jsoDo')Eqf4CpKPNWi';MoI2Kc?J*FVkiG-`D(8rhS"V)0`XmE%4>#_EfEXs3@\Hkg;kXLqH&Q:faQ]s9E3r+"`s>)t6IqL:[X6QD&!a"lr\,q[Xm95bi^S6O\YVCMRfdP!F"f>+F^;_fD!mT71o?;d%1'!RV%tdO*Db#\i*IkYRSH!_sj7UNko>Z/r`C5!qqB8dcWdo$0H8*Ss4l_H7`U_u<MU*PP)iqS1[HhtB]cIa:0Z/M)<*U^,8me44%'1:)]7:E&=1d-XTFF`:]eq;<QUq?2RO05q(IMEN+L.g1s`HnN)BQ6AH'c-mb9B7@lo\u9AD9og"nVfJJ*a^p6QaG2FCm#3eC_MY?%dVQfe(o\f;VlH\q]YH^?n^/6IS`#\1b%jbV?icqP&\E@DWPg6]3Ob\r+YT^h<.dt<k\<G+Yp$usN^0+.+0(gtP8UBc\U<_"Ai1pI%I&Sru18"J=J1qSYT>?Y\n'oANc/U6BUN*Ie@bon50t3j_^*J!2n^P=V4VMCoRuDjSa_:4M^6KJ-h]pS]O5eDu5GIqWrTZp/L^3o=%%NrZX27@L<DMBR7Z^KO0ZO_+HolG=/?ajZ_CmTMIN@E+WV]3Am)%$)oR9,\*!K?C:dWg_tmoaE,3t]RV\"nHcNgQo=IS4G%>a&5Q%=KoKp,YIRi_h.8;RkF;=G[/H.M`uNm,^d5G0F7WF@!KFI`8@I^0HPmcQKR2jNZG%Jh+,kO#?[BTj98n/Ym^5Q2E,#N7V3'k&S<t]%T251Hr=MTT*fuRdYEe$bs6%0SXgEKu;(Bk=q60SDjDZCC)'5iBqEqRc/RS()Z=[J+No[^g8/N"PH@CgK*^GmKa%bGe68MV_N&q2u%W?to+?c@FT-d!Y;6dm>/G3N5g-d.A4_UQc6CSF@r:+\'l:I74g*ukntlm@$omSa1G%Tm^D/r=36N^[SBfc9RW0k'$)HgJ-g&>3OY%B+l(V^DCAH>7)%H>dIK`*=f$:j4mY&%T'J:OrhS<2RN/s*PZt4rGe9J#F!6?%X!-/MBuNrd^[.SUoOF9rQ9(j9Ej?0UHi?dGnL`k%iK\3#;$'RS&qEJ7I"2\S6ltp%<$6i)+)X,lNt[l-:`ugm@4_N6],q!r<*d%1[WL%aL);mc=)*ANr&aRe[[-D-6d#(1m1SJ/RZR0-%aLC7Y(%r`q_3Qpl44R'pbOh8*>5g5`_Z=bg)ZJ"Y(-m_H?IH^@ZC+4SoYS4gg>fD!RIKWX!@'ek;HS--O(W\17U/]r)aX(k,7;eB%,)WZUmYPTk.B)ag_uJR[rF@oM68uPYQ4s7*dlt2hZOC`#(FVQW6r9l]90-g/YZ-5RHqJ\:YI#eLHe/iP7`1_NhtN[LE>@79=EA,\%:'!L:@4I)+3kk5R2fVF4H^.c*BJtp91cXnJ[R2gT,T6#uJd7EG!p$*r9PqL^Ch;/e;sN5<l,mRZGd=Z))-cc+#WYeW_lXh\cNdC!%glbKP20W.S$1[=E4L*ilrV5Isc98<X-h]kL/>]>#a>F/YU]eQF7_q6<Q@?HKKmaYRpLE\7&**6JI!s^IC@"WKJ/_Zm;%s>AW7WO7%N+V/GC$;qWCBO6kAXg0GmfAN2EL8tRdQF1MNbPA@`QJc/(/9db^b5!("o!S1)+#hZU:Wghj`Pdq#m'a-^$klfe&Ck9Jn]JNi><V0%Y"XL`()MkQIBmR0Nmps],GF7rPkAO;Phk,XK(U3*VE;'j0iSG"KaJB2`@_@.W>5l:de"MnlqVRVZjLl5,uTK*[!I].9lTb.;)opR%bGp$2fD<GDBG9msYO8>lB?QH[DM/sU)kL=ArXB/GEd"kNNK'h)f/_Iu@8bQ+a#C/b+r>`)($h7o_q/(7U)*sq,+hqG[Y/D8jL(DP%WO+oFT.Ck(T:4IRGXq)2=:P?FfCM]LkjG0.nFa/!C:SrU$"6ILS;2cfN9R(#Ht.4C:NY#VbEjrSFj$"%4bn_ZY6Bs=h6RNP3lF=H%iXpfj[&<Q4c:#&PJC7(`=s)'Z*9,c'$#P&+WoM-Yh5ST!$cLi8UEq;;KIWBJ2=3FA1S9ih+0J"(kpL^4/]:1XCiKqN,KB^`!1Po-%n!lBk=![lkjD2(0/Zu6$-3_$8&tG]j6j$>8c^TJq@6Hn;:3"LM"?H<1q.b3g;41U`AM&2@73\1*YYOl4=f[ieB?,k\PcHJ,_5_-M%N*'[2EoNU,[pJ;Vlbr'K?nb09ZcQob<[&a;B9's#aYs&DS3:1X`f7ZnRPg%QjQUr=$"7Yf97k3`Lh+ZU1e#>[30*fP^8d)2aL>)g%go#`1-W@W@&\&3nq;lTDY,hrW<k..hBnHgNaEtZa\[lJXS$4?f*0ZiXP+-PB5`Ct5lO+Wb0a2IZBhHbc5URpgE+eu[V5C(OFo^Pb%]V5h>?fc!Y03QYYF)EdWc1b3ZT4l!ml/"`0FI<KC;9,8RMW(mk>[XsN)_5pr3AA<AVOFm]F7^Nt@EgASNDPNdP6<a0P4,3D`A8D+%NoUBneUkr=YMl@#C<Bbhp.83'+Q6DFdoddc/2\$H%5GA0a=XrdI(0h?Z6\*f=r;"pM/M%?M]n\=3-Zpe%];nceJn<8nK="H6c3Ea%6ohO/!fB%u%7(]dS]0MfYRN*MM5,c;P!eYSJ'RqTLnuT[j%r)@!=cYpYJ_R?GCm/U;SXkY?jscDPTW<=EL[Fk6F+;oFOHL&fV@H2%363>$Dtq[ugI'icGl7:6\n,4\k[75FcncP2f-JiZH_D=VSrJl0n8kj=1SGU+70"pi\&OUP.[D1=hh2"q--F,I)>aTYHi`eA1?+.Q%SU[$(&>'C>56,06bR8/e;k@R-(5o,>R(/;IEbYHCo$/ef.UN:VeqAb@X!?+pOJDW_,A)`Vr@#QJQh):-Xt^%(d)fBdN_g+qk%Zo"%2X5Xkpg@$Mm2Q0G,7&^P['F5:+iQ&a\RYhoXW9_sZ1YJ%g%>&56>5GDn?bYW8tnSK\,=qtR>0FS="<omr@tK0]P"usqX/*`8g+E-%rLo>M!_=gH\po]AP)Sfe4im/V(oJ&Z(\sf[O5&.Zi]HKN>QDup*n>uiP[N,7mb*[&![1(KmP:K#B(47.AcIYlF.^*aMcBb_,G*mJ%[]^i<h&\![qY<m?@snT8gD`ttl_\_?Tb`he`KEu5:D.K-AsIg_r`5T,i"O]&r^*Q:Fel:D7;=OqEM[gi[%FFUq[:KfeWej7%BuH!%2`"Iic&ns'.,9$+_9G@i=uKVZ7<So2@N<*D]L'u6dlZ@YC6D6NG::.<Gk#5B!ZE9$*pMBoNqAgCD`q#jM?MFag6XV@FX.gXiA.td%-gVTLoomkV$sr@W>tnZ66+4kOe+J_XqXOAZbJpRB\W1%heqEe$nW\j^^l;`&.p=bA*_e&7OVQ.5i]^>k8``'aia7_/F5TeYg.@ad%*g.k>iMMt[fe.XK'eXJBBcud,=.#lG'(JDWk,*5'EE:\q!E`VEF/cd;".[o,+`^i_*]],H(p&iAUOG,a@J-#2K#KPt*k/:#4QiD9%\W;[1q$XNfh24GT5"`@YPpk._&i$iV6,-9O7i4tDgf9IG6F\V/f7m1W:^BiKSIbeo38NOUg9+A,W@9EoG#GqQDek?lHSRsZDq1#,%;Zm<=qfsb@QPH3a;#1G=c]OLUGXJJ3G9/]F-B>I.[2&;d7f*,>oSW9i>ZaO<`(,,;n'G=F6k1=jQC;.1cV$&u9j`Xre,@KC/^"Fq%p1MBJWeb'WCKOFgA>f5E/FYPA$a8+7(o*^N&o#o!.WbH3]75d6kSfRf2!);h:qU@-Fa<]HnVsP)=l<I,mZ,pE;r"os8DGLHOat+8%+%mi-El4CsK0s+`M#F$DW_"u20JPMt`_6r.KsU+1!VoSgEPr$#Z;/r;(BW0KDX-3^&-JMG5;$Mnl_^>\F+[P=OS[[;+]dr6W]Er/%.$Qe,e<a2mD-uHTONc&A6me,I@[RGo]n/I'8&4raQ#@,olXXHR<G"i$%Bld4]W3NoDX5INVQ,S"=u5_VJaJ)/0`,3$o?3IQ>>sWI%TTXV<<QZ/V"Ke=O,*>';@%O@!I@^lX[;UsV@rWETb)s_UcE#37o0.OQOCbTtF&D[,o'Z]IX'2)&Pn^g']E,<_,5>.pWI$B4p6FPT%+J0WU%cHKi*'Ms:RbRX]%I#:l6Zko8!UZOcQ+^Fgi;'bpqS5sE/g'I#'`lsuc=a-.F/3*_o9k2ZJ5g;ikI?[q$U_)PIXTbnL\__L%##>]Ri(s7DL@<e,I$B+5O$Rmr3R=%]Q@@hu:V!C*!i"t4PKIk+FkHCK=W3PhW4X8"!a5Rq?tGir'fMAW$]uh\jJ<!PbN(5+ggh>W%1o0+nn>%R3@]tQO6Do9)P=V_qO:-%ZPHF%fcUC@h8lWVM2BTcgb9F(SRnMBbL&3.9#DB09\B*b9fhS9iYF2MO=ut0Q7Sm#]5C4kY%Se9;7RRUg%Hn#Qi11A'\#F@cm1XHQ+3YsnpT-o6e1o7iD;m9/g8Ys>_R'4tMK:!:RVPtq$V2;2NQPPP@L1TsdHiF9?Z:eInLIE-s%_d"E4IHlIk3emC)h@<J?(j'l9Y*lUV@uO2h*``2.e41,%D,GLB:<irpDdQ5XGQT;\!6Pf^GCZbc`-?TS0N>X':@YMD7"N7W,X]G,%Ra\HmPXh:F4Qj)0b73^6_eJ:kJO:@'p<]A[i$+/6rj\HO>4d$e'eN/q?4@t3ra^#?q,Zsk2tFKh.Pc$p583$;kVf'u@e3Z*L@hFE%oHe5uXn[6;]cl%h/@DiA\CB7c2HP.fWNALZWlpoSA`YAtU&&&#-%i_C\=d4/<H<k"LHOp1_BLV.:&];[(;o0%.A0K6aAO/).p2[H%8'<O>-MJQ)EpU.eS'&_`>goa$']3&d</\>QL%\=cJ@eM^U)KI_4c:#+%mkt]jB`JO`SVB^`"_''JHfZ<j5#uGMgJRD&5_om.4NmL%X*!F4&R"#*s!mJ*O$/8]VTXueHgs%RX`j'rPDfZ1dMhb&/-2NcVi<gF%fNnm!]b5ZV&L\A"0ssG+0Vbj!+dDUS9>WAeMn8AW%&cn%`Rd,I0GEd7(t@T&9TqtS.r)Z.3d#"ja]bY]^:6(F'V"h.4ncLI5L%6HkTk"?BsKLZ@6J5$&Op,>.[YjWJ&dQ!jGI>>2/$ZD\k$d=%>b=g$F3iR+qo-cqA*80.X?$TjgK8NRmG/IH\'qJtP(K#_=iXfUm3e?YY+4'`)V>gIB1lHX4&oUq>qC(64HnbbC,_D;iU`?TUP;,(%!,LscP!?G&H/h!jbap";4G8OH]j5l?-^t$ngfX8-WC$<eBWmK]@XKIn_C'R-)Z;pS_u^1nm)?XRQst'U1WFLQ^U\A+*M[t'TfMT6%Z.,ZY&Lp\ABEZOSNa3aA:G%DR!2OPC_M+H\Q`NhGB^IW^3agO9S99G7@sZB6eH5^`$ZO\%!Y1J+.mC=>HWUS;pY@4YXd)@OXJH%V%X4X]s:BaimO33N\.`SV=ql(a+WO&[%R81(N*5sMnRHUV39@H.t5G!=,YBs;s;V6J"-U)k8b^ER?iI.omMUSo_:!De#QC2J)bBnA1%>6IcnR:^%I0@R4L2U>ZSYTlP1*`Ycr3Nf]#UoV193Dp];FKKU[g,lfd+P3l\7ERpM:FUVd(M]t60i8[``;5/;R35*j)h;"$_N=XV%34qt"re0>U6'dJ%pW.]VM0#M`\9=Z=l%GM*iP(S_!Q_+dO<fh\@-o,:,*dJ$*qlKAqi5+s5j`+jEh<'MC0*$W+OEIU\WdrZ\%<W\%,:)H[AH`.8P']^Y2gn/G</m3*S6S-IL=1n!F1B:!PNF<QpHO-Vhu65Wh6-T;<&FTp0<Wh%J5ppp<d<`o@+fnITj\G,*^rds#PQ-i%Oh(MV-Fc:`?B",sNXOGLJR0J1o:8\cj5_u[^@p^lmn\Z[.S],:!8*ku'e<K;o:Angj4Y\b[K'mT'fcWn.7Nd<`_Y4"?:Jh5@Ki(;%1\;@k3:lC%/(IQ$4][0q*[&]\?GKWU\S>fE9"ob8i\p4m$P>M6-lOZ]GKq6IFKEB_iVNFkf'n`R?b)7W^%rmT8qL*d*?h+cF/PT>%+n&Sc/H3Jt]IX@rQ5"0Os%/4?<2Tf]''RRaL`N0Q?adCYl#?J)C<FddnWXtK^m.WU?/J+&PbKAE:*&.KD:LJX2I(pu[AnOW,bY7P%EY7N45fb=nUV!gCPL'>'n>tEmP,KVe5e'\:iMPf'!)]Mu5*OC06H`T`FW@`!`Uu`(HqHMiAXb9CRmOYcd2AseQIKJYB$#gsY*=L7%%4]oYeC_2Pl;V=B6!Go5q1tLo933]DdZOoE&idYZ^Rt'Ce4[86_$k"#5')Xh[6L$r+.S&NX*'K1Y9*hb!sE;NdN!kN>[5c"]s3F)%orIu1-/?,4X*p%<[==3Z5r>)hf<H;:`^E.pbWE4!iKT%3"$L,F1U_`!eSh2,a0rb1O0%@r]_@Fmm8)Qg[l@[m%j<Np&q3qR[6(rH%Z8%su3V,@ACT8Wu<h/;<0][PK*T-nT*kF/[Z#kA$?\SCM#=0;bb=S&XXfof-!Sf6RFHuWuICf$P:`AP.l^"^Y?qjSM*sEp9i^sO[%Tou;)@fKNIo\3SP2/'Pako]OaPO%ElVt]b.BBgH#EB9OW-2*'B^O*?dd.feg0Eo`s,''&0&m_E`KjR$opRn#/Ef8M5ahu;NF/m]M%ofsd.s6ba8O[sMYCFc]ZoTAcCZ2r_r+b+-p".W;^Nft(V<U7CU&??OjpWV7dXD?!JG:>7oZ8/V^%c86SaB+R=lgS1][.AeAd,4ds%k"_r)eTA^FBK-i61o.6<bQ*oU!UFut[6RCK6__(?PK8^&R7C;(1df9_oX#>=;.,ekEBNf:1)dtts3qUEj_oebN#8OMIRkT3)UTu`%Zd4J#prenG_s>auGX5-RjO3!nU\sU#g7s=Kf;!=Oa5u(ef;(t/LqQW1?M&Eu-m;7?<M+Eg(+:47/^I-uYKU'feblXRCc!eIks6!\%c0+T!Fj)'n0(_Ziet2d^VdTK$?F.557h^H"GPVC8S!6tGq>,_PP&/MtG`#=r^@kNHkbUB%X<QEoS4cb:MtY+'G:!Ck`G2qB[J<pl%6%*]+D/5hkZtI.Nl2o^sUN<^9Si%e)&TaoZ<E3rCF]F[q&W9KYca>IoUq;7CNT?55ini50n,SHToX)V7VB"Mo>*-dKBhdI+Ed"9<%:eQt:9Rl9H+2&Q+0Sfk3l70;:T\oYYfM]nDC@.<#*+K-$oDH=JIW\5(C)=n/oqP+dJ>A@(`3@-cgD6$iLH8rG\mR`R%_6De'M/OQ%q1SBELr9CQT+d)V<mZL%XI_PoOfVnJrF0bT5U+cFFQHQ\FP7Ht!qj%3`$,dSl6-aAA5j:D627[q?nk2eLka$?*Oq8HA'bZ!k6)??%HftYp4A`uGeF0r.*@5,BR?f$ZgMH-3O#M9F25<FV6r31oCF4*8,eUf3*Q"505t18CPmB5VBoUCkfmg\\UukU>gQYtMl(.;L.4@N:%]^R[p<5.LY:k,=j5c?g[`"@R9p2Fi=!)FcSjfYT0eY;/;19Fm9PV'"+d+SL#GPBP/UGE)J;Hum21ls(TF?BLE/T8^aoLJGC$IWDF%4ar?^#!MF,&StUfE%(!W\GdPcV.VtLhDSP-KM%c:ac@XUj3hF"LeZWFMih@nhnT])#+b0J?$(#YD7WKAE9BcbA.W0q2kMKNCSqi7%/PpL=%1l<(O-X.<#Q`6Y<Y]F0B26#r,aOcA*-Fh;^+0-08(lGb[3*>tBnaa&#$0cD:o4O]<7Cb2//dG?`,%cco3ZO('"VeGA&13/%KKq5#Bd>qfn"5k`k(oO%BKJR$T_/[nU]L3g8_E\uIfI(I"jVBlM^GOIaY+K=GF3]e4>eg4m^Mk["MM".7b32[Zt[T#V)q(XlDNBW%<Mtr)$>0`0q*D7RCN;;OVS;rMaA!,+"pC62Z`0%qHSTT$6qi*bdU[`2[_qI$-)*_7!35fD,A>[j1=J?;>?%qfV3q#G4/2^?mj?d$%kRTn:jg\WCMl)LjGB;m?5A71V]OB?#NJ<Aj#JhhuSa7i`%J&l!>d@'8&&HnZ(fr&+r-QnH_HDtghr<o3cf"PAjo_=HDol^Z%#c82%[u:S$%?o6AGsgtn,867*+*F4JAXjr[66Lm,TYI#,aL#'>YG'ZZ8M/A$C4;1pGc*[_OY5a#rdMD,%XQINoVeeKG.G3Q#0R,68Y"BA%KP'!-]?^us1eOa)OdC+!?EbF6%529k:hWLP_,)q0Sr^hl:]tjm\^d%#^7q?KKYgaJW*:ah?B/LtKhr6.KCj+u,%RubWC9$1V.*<a%e#hr%^[7urIoA$/e/toWIh7PDk:1+9C(K'mo;`NC+VAf^-/o+qNIr7mol>>nd(4]AF!>_U[;5aKC#u$<ocj[]\]GI,W%Wo"9n@B-%5>lH4L"4\2TV&f]*abI(pD%1,4V$lCOr0n)R+0,2l7b*s.JI^eBtt%DmMf6?%l^%n8qBLh+d_0Cp]h>HkI\L.hN%*l%tXH,?.D6;%T]pN)$>Lb,ZFh8]292)@.Hf3G'L/9lgf_4F$(1m8J$ft<`DCU\8jR;oP0>WIUR",-/p]hW`QJ"3Gum4n7V3*qZF4eSc:Bs!LK%j,%$9:mCT+CI*Gt1aFRJ`g3j3?_J!!rh,cL?PH6_@_T.Hj21HXT"XM^Nh0ip7E-+8dZQl&kAqcoIVG=\m>:>UBH]`$I9Ic?.63%U/tU%mnQku8WN(K)cR+D&YdTDem-FZiIph;dp@pD.;S?"edsPX69F;#\[Mq:7<GgpQX*b`+?q*(9'@E8X5q-/DP*oS9WIr.-d'MQ$3?p6%,M?KVlbKd+@:;6EZ,CnhZ8u6]UA0,`;adSk^9B<?kB;T,9$)!c\#?,QO<ch]fur,<HIMG72`j8"l!4[Wln-bf+2hCiPMh]I6"hBF%)m!!H[!lieqjmS^HmXBcE\EOsfK6+gRZ+POT-X=^R1^'s)NL&&Z2jP2;$PY!_bG<4-pn8&E"Q)5TiIn4'JT!4=:P,3:\5HFqI=_D%h[5EVb@U>CJ^V]KQ/MWhQ>qZ^lNb6N?S;]GFAm^Deq^6qW\MAZF2cLb[K=1Hj2n4IFn_HG0i`g997=Sk3f=ZMWADRLj/%o[T"MEV%"qrG&1Nh9Z=K(Jm&///mOQC([[h85'\qq!nIo7"W\)n/NC>5+g1n/"A%qFi86:f:<1.OIn2r>[iESiqREa3!qN-KTNQ,+-H=AfY_%A0bs0ZjcnF*(d5K%AY(QVDGH*cGhYGfGT=REt:mtSEGFjU_UVNP!rp9qi/IFmJ5rtcO6uP'id>ca^Y1mEJr18%=43$#d*/W3'j+.%_NLE+<HH<:)Ne_W-LH8,fi*PqE?^r;bm]9c];i;,1*K3"]M:]L^2"qTXp.nP"jfr/_PuPGG%H^XqZ*=7\+EokeI5fM9EPT:'<9/E%300;_lZ=oB_+`ZFPMSQ1qEOcA[$]+J#JjF%V`80$j&<$`eCUGuGX.'T'Co`i7;jn"G4uF"ig[ahG\`raBXU/XoNeUb^;UQ?p/r%W%cN^8L,)^^$ZbsU"4'=HMGnEsIoAaj,K!H^Wec4ZR^&Lisj=+OJp<BFXOpoMGC(R"+7`7,6[O?o0!YE6hQ[>faio%tjP1Obi^RRoS%hJiT,)4%ada%m4tp%(EJ[pT-Ps7hMer0Mp3X+1'Ff73_i5Q0EQr1@p-jTUofJ+;.joWR0Oj'Ve./`/blr8XFLr,;W-pYYuEs8'?W%reGDVrquNjn=RGn?a$O0lg+RXrpBAc/VP0S.'?65OC?VQ:i\p^%P28eg8H.t&YI8CWiX,A.RKh7!3e24r)u=iXI[sc=DG=,%aMl/%4&qt%5aQ#.JGl8i3/9aoHZ"A:Ir,K$"BO1Z312'!nFZpDpM?@PF/"ss"Z5:2ImMRSfkfpbgC'g7'-7X<-VJ/*Wg3skLP=)U9f^*A%!PKiL+;a][Kcq1AU>cfOgT+oFrmZ$\WZ5-Wrc)of-\66BB'=#)]KAsRGo)(VHsYkW:jX:T+KbStpOW"s^i_p`Qb1Anmt,:eAfAIb%)P%^+F:2V!`iLoS%1Dk5(M'lEcZ$-f["Q"=Q(A69/aM.sV#+RU%/LTs+B=LBW4Xj0:OoIu1n_jC0k.fuQF[,#6IFD^cj!X#WSks^%)\9/>"nU1"h[D@f*!5Dh"U%?CU5l*]0*(>er.Ct:C+61mFXT(HrRtf$>!TbWU#sd+:7:F.jQ)/qgTL1uVc5I'F<6WbdFq<#h9aQP%qRHp_kDKBVj9+E#.L:^;lI%![Zo6P60>I7'FYOWLUY-4q"*@MKEe%9?=73)GE<EXkear2r7IPg+n?ij51;S^,Q\E_QKT[gdJH50s%05sk@pZ_OZNH5@KSg=Eb6]%\5Ha'OQ`,*.fGW3+C76qV1NFc0Q&$sdq?g$;rYRPaiF-'>.+2ngF+r:r5!*&jC4cqS9r;m4;rYM3_%?tloA;?Yhb?6>H<4"C'jS!e8DU$9.5K8;,J9F&6^<i8'k.J$3_Z;Q\gchj.pPBXN0U\jZtnPn(-bd:>J7MUFs!_@iRp+qk5,r.:5%SI#[jKg+%MQ+(+=']EYM>(6Y1Wl[M+Cc,d8af4`Sp8V>ebuYG@'M\kF_;sWO;[(]n0n+^sV*Z9qJspa?HP&;-nX2IYV!#%(V)O@!%#ic^SK*BKVM`ns...YF$-M0@tiMHmB$r$s\h%j'(9GRnl!BLq$TAV\<TE10Z1g,-YmKWZ\9'qHigA#KTg1592U>[4o$U5,A+aA%F%o+nGF;.mXGl6\`AVTc_C&5]23dA4[AB+0C/BF"%,cLC7tf*\;HDKo=;JK5cPSX)f/ncrKjm%(413!E<0M!3@36LKF4P-$l:gk[CR%`$&Uf$,)L*l6.GCRn6%^VA00fPd$\%`,</H[&"(/B`tj>oA'9f;8+G4N"JrmMo3BuM=p9slSj#b6%$'[>]UPJ.4h@$:1fT9qZ7n&%&LrY;rq.`j3F@/$/Xn37FE#T9AJfOd:HCaepSub$H!06=eSeVjScPirm3VqHJ=*:.SZ&RN.7CPYd,tnVm$RMt+K_)rmE=8E-H6oj%[/k,oV:)rJdKBae'sC_"OmX>Fc4Hi7!d1G.U4-u8ehH$YEEu))RVN\pF]s(S\*&Z8qI&9nc9/#"G;)<""LOPt4%W1W";9OZoX.Jl%e7#8E8CX,DfoSJs2no@*WW7F6.Bn*R;BN,0iCu$EN"[!;&gRllV@[ciT/hsVXhsGSEq'(QoXCMKRL!;-<WM')IjXb6c"hg>$;F+R%l<f=5V&(tVnMY'o]HJ>mLQ.f_=?r\_1mi)DUON1WJf`c2DJF-s1.g*HBbOu3g1u-7gL"@92%9QAp=M?Egsk&<1u-\4NNo8F!'b,W%+L_Ma&3O!COW?((Mu2g'J!o@G8AO2[qXe1-Wktm6o?B^;auTraL<L!CIs`9Rn_eq(Um%k#-(-G4d/Z:_jWitQ^d`;ll1fD/ON-qj%m;`6<,V@]qEe0jU+=q,C`?L>KX!SIC$)o%tc>Qa+7[0aeCrZOTZom#Rpq5K[b;_1YZiG=%HA(;jXG2AG4cUEe)I9OXaK>mBak+#0%e%Mqp<q+OTdU6Kib3\VWIbAjG8qlsdZ3W.Z.:LHFHGTX"EtSTpq7Ns)N\&W%!i+"%?,b*JS5/?GF#2pb]JNEeTR(0s;dECm3d"&$%Q[pSSb8>s7(i6AX)jSm,YfT!5JrBHf!4hm=0^sRiTF)@r"lYEEI.jLu:JCE'3!#ik-Vtil=4)S-TQ'W.L,sCG'0'$pk12P=")TGj%!(&g-a\/bjd_.(Ne7G7GD:(bLQ9&+a?.Vd`89/tNUQ[35)?4&>`W,=lnu[<:mskA\qXu$2e$oAVs1Ai`jkKh6948V%CV->M4d*q&%r0s@<;M?/p+`IaLS]33$X?s*4qR]gQ(+EK]h-#W`&=kja9JS=V*+(D<mpC.pKe4)AQqF+j*$R'`VM:WfQ['kt5>AmP&U/J.W.:/.%+>L<B.HCBgb*(Rq;Lh<blbTSR6f6D'LsE-3;u(<>"#D57ZfT'nIdQ)FdA2WBF?VMc?'0]DM+ZYb%"QHV#e#f=*@J<4L;\X\X=S7f%0,+J5/-h):aH2^dAN64$?Q9WhG[]*ndB-UpRZh6]lD/#K/=%(V4e`O<!og<"C^O7c(8>fh7sD_^L"D#LL>Z,BCCVuq(KR(\Ns#%*%3J-I^ZLl6c`%uSZ<=NB5[O+[k+qA@)lYGF0Vq_,&B_'#@W^DiM!'.5urVC%fgK\I;(cbA9'2Hpk"tMD5cF3N]E9naYKI?"Vh)1pL%lTfT8R)Od\50c*YSXP;71R%SQ%o96Dc'."6V=Y-kJ4N,iF^DXud]HbRT!e_>KO-l(p!<B!^:Z.1osGcl^^hPG<VJTm>;qBSrH)U2%mW&PDrrmEB)=$cA,Ui98;G08f=;lip-`-V&o=t=&K1gJr?_?l]O5rEQ]hM!Nok8@5`Ke)Ble9NkX;Jq]km@;4^!PrO(i8*0p[SKA%@WBA8)NQ70kMFA3\WN;oe="#K,rE8MT?UI#g<l:TAOf'=>`IIE@M!0#(aBlif$)"ZFtk[rlBMa.+'aM-2o_bICV%3OmE$ZN@b]:j%fd1h>_VcYCg+ep";$*`G2HaIQ4a\jb+2;g2.h]_pA\h3_7Y;3%AtLW8*Lf"(R>jii(b2K1oG\3O`hMqh2s?"q&q@,^EK$bWb-^pj%gmLHo4`0?47n4l)NqspdBVPbR(Q'j_6tQ;(IR-P)_hHC'f.dH&Ih0h<_MUHf7$la39@t$;VC\lIN$i^Wo+ZE<m]&DNl%MedK5n@q%hUWj*!U%"[2:'R`>2gI5WJ%*6CG:-an1-1k?B@fT&mJJIrq7-d5H56S'@>]a<$@3l>Mm7q,(ELQ1d!+7&:3P&EjEV+k=u-$V<'\2%r%+St4`sH2>E'HZ%?kp!\D0"+QJJ'.>(=8HdV6D#]]S-M60TO7>oM@q^VTi+riUl;[jFbUCSKTZK<6j@aNia0jYth2@a*S1LWb!2%3B-fc+>m-KCXT"=Zr$&Xm`9<K04EmK\Fg;hQnb"?q3lVZWs,e&STX;)k*C&T5_3Ib_C:U\V90->r]6LNUgFB2V@XL>GAT-)Y.`jf%'^t?ihF#I2`0EfHXOnGBs-7+9$uQ;3OSeF@*]L=V3+gg1g\$-2>]5Z*b`;#<in@Sh)2):a(&dRn>7<TsBDiY=[8fK^SbHG9luLZ!%^;K]YEH'4c3lhbD6=7pmPZ9CSSXgHFiU`"?<[6M=]%Uj&$e=c?!nF+:au=LOT)JP)Y/Gl'A.1$:LeQuJNf^56S>Bd(SAd9nq"-%#%`0E5*/YpLaM(,FCX*^o4*LA37aZk8rD^q[q?)Vd%3b>df@8nYj"PBAQdpO\d_.0d0_p&lbSBPC]F;n:PqYb(9JMsLF4ON"dI!'Ck%]^>mh(iI=:8)u*#>8@knE2Hj)$05nsK)&s45e"QkhY52oo/F*LARI7Gg9tcq6,\H_G$VrpGq_A!SSi3[7Ns2f2miQgS!t_nVJPkX%HB*"?2VE>J`[T0pXW?_]i>q(12@lGWb8C<!d>)nU`VOd:\u@qn$i2on%u9QA>6<DU)`A[%5%>baTcIuZiTE;@:+MCX(X)f%LR8$j%*j]a>qO25^WU_2s?6FpN\pLt"!l++p1S.+^$e8BFNCFjcM4*UV)a>Hh)pG+9h*PNrU_bhWdh"@;DRi=d!EPT9a+8pNEuP7FQVZcY%8cr$m??;hN(b:LE/2GEr.qcLICR-u4hn24krcPjQ\%-G5eK[);HNLn`rs5h<E*`3rrC`k15fQs.iQG[6_\e>&KIec:&k6%Vo_.^/%aK2Q@80+9(NrVfiJ.,KQf3M[KXN\aVn1BA(\BGjoPA7Vu-<)Re'.PS-A`@?XSEQTKG!uF0l]5fnS;?iQLVR]aSH1U%m?ggJRhMI;%25s(q/hQS4>"GnAiWps_DDB+J552i4C-2DgL<*L\AsC%35s@o((E:H`:M^i%:(5?>Nu%rNL^lGH,>4F6`2?,7(`Ek6!P'psXl3C0%.k"s66np/r\q:S,1Yf*o]?#d<2&5)RZ$7."@k%b)s!kL^WM^-bV=6kR,4]n9`2*<:iBn(ZB'O'U!ZT7_s+png9^5-TLJ+uJ0[=YD%^'p/VPFl_hqKTX%ha*T8k&+6Z"lsA,QC\p/QqI.j^O?9hW,QQ=$5/"R[WYdDY,V&+[M*'OI5b8&A9--<HK9\(_n5SZLR"\+9nQYI%Yu;*AA-85b1#%Ud'(Rr:Fa%fdN>33i]j:be>sH'^ob,bYAJZ/oO08J8j,giu%&(N\]j?:WT3R$Wos:hLL(P>Hr9UG019dZVSXHb0%oC0"jHHgtsJVmgZ@@17(gs[Fg<*N"i.L^2j!]:"79(!8d?'.r)fhPPTGPu252@[?V<(E/hRjTeDf0O6\HYX533^jbU@[1=B@n8r&%:B2<TI'*Wc>X2/P)iHK#2AgD$pYb0EkY20I?.SMH\o/op(&R;J/O`MS`#?kfU/Ku.3]goL/1_K3"q]-Xe-8rbOMpScX"5/colR/Z%ZhGh>RI$#4Dn^S)K1T#`F;#&,aS81$EZjG``*f1H9G/5gl?*0d!fqN$ebr#&!V_4Q$:2@Yge0f6&]*uWAh6<KXr3t/:%hJrgX@nX%!$/!J9%U:Gm&\<81_,Ec%5$.`!h7Y&6V#(2n@02r$3WTlTJ8IO/Brl,)o0JYWjGbL?8S$1;XCnZH.E)V!CJMTTS-!!<m?fY@<`Eb%/Q`hNbQAg",2XV<.mkYMKh825NuNZVKA+o$5,lh3R.r\+j$G^Je(B*L:mo5\[(/aG&@=aBDHXe:EJCC@/A+j<&g%OS'R(h`Wi*hI%k)gi'!6*2D'0e3]1;<IT8iVGX8>g)iiaA(J]G1^KF%be;jEc$fYqjDCeqD.CkeeI!K[O>EcnVn>@$)964&)N69U5kJ)DS(%6%Zmc%@b>.774)iEU"[.OE))C,gFFG<XTn$71b_46KnYM_]_=LBFU^dBmOXs6+C&)4R!lGr.tZZ9'N!Oto&N:FTbOj=>RD)TrL!)T9Q#LT%YNf=de0tFH7S;FVdf(t4B7ZSLNOHW')>iIs+)Oc2eb0m:=K'GS@SdL*2O4@&j;;.&/or[J?)>0fA/@Zp:-kk4D$N^*I&RV/;T(Qt%_J@C+gnD$l!%]s`?=UVo\2s^k4)X)ef>mhGgIXegJQ^@+@.+ObiL!%f-_XkKO/P);*R2Her9`J#!g6WdQEfB8?;qJD=&-ibam@&!%U>:\"`D2?oC]"Kmat^V]bk8Z<"gY+EZrNVB!Tb<&dh6g`rFV#30,<0*3+"SuG!P,_IfD)sa#"u3=JQ=D59M(,=n,f+'Kfnk^^B+X%m.B6-=XdE.KiLmJKIgLl,:Li\g?SF@H(@F`^p"IrX,k0h0,EZ%+"-9V6%_r6Ma2m\A]>m.B]4f,6h/CE_t;t4*qT6r)9PS<O%KT5%lh0N:T=4PoK4^:F<i04r5sg*#G%1^U)/L.W<$Rgg<^Z$@,Lc[bB040l>k>)0rs`iqK[=E*9_4Q.3NX`Mm=%6"cb*".E)3t2410A!%QqTDSgufQgjm9uCQs_63Nho8;G0H*13.a5n'Us%")Ph<I4>F@TKCMQCU:S\T,bG+Sf1Zn0`_KktMhsr@fX'ds2i-!AlrjLj!;r.2%1]"J04UU#Z9U;%]qW>rFCTG&Z+NLAc!EOP^\mcXX(@f8'7mml$,I:/5#$/;')Vlt)8Vi4K3/Y^BYNQFXGanZ["YtAbJe/V97Y8lE%D1Y*5ro6d^M6ZM+jpLr^\tuE<.AH`,Q"VLQD.Ku<A$!YQQ3KLL7o/bk8/01ED7QsY.B&DH;Hbp_U:&-$^f<.hAIf7c^YtF7[[Qgn%01IOeC1ho,["oH<`_`(K$>W@r"kFMlT?SVs$IOgOJQN4BX^Top)V"ZH`?f5?U69IhG-T"DYpD@+jiaZ!Jo]/i4!NEP@m^dX4Z5t\%2>WcF7<F\e9%)JEc!7!qE1&,mrk>8B)YQ4oD`\_X@6N>M2.Ps$FW\HF0qm#G"YBH%-7Vh%/8+kZ)7I"]/K-*>a4@BSTQCW59$DJ!%0q2J)j7%tdaB4kgBtlF'XgU%4m>CXRc,OFI]T6?'=o&25KM7<.CiS]MK+&B<nhd(UPtbubXis_:fmfG^H57lhfs00L9C;^^ncu;4%(5mP1]/Eb,rXgE8:+!R$4A`LcOT]Js?/:\j`G]h-G@=?Sl^/-f`dA5s#q7Yo`$A7Kd%I::K`^d#dh\0uKj;sAm'00jOlW:=2TM'9%A\BuA`C]d?WXdh&=B\oGF`],+24F1K\9GojV_'^%L0TAjDDg^7&Sn,jJl1/O9KO+V0rJpul<QC>ROsr6l><1S;.Lk)qp[7d.@RmE%)Qle!6d9'qL;Xr0PW=di2@=LgGLQX!4E>DILa?X<E<5O9puDd'_lV/sF3sZI)<=^Xl'L2l]D<>63bJ239q5NhMe+`#$dI[C22tLu%+VY5>,Md:?H_VrMBm)po\F.`L7eQXhbFT\'n.6<6Bs7S*<]&KA4q?+l\`kPl0p.iqbc)/jR_jWdkW0`bR68)8'bEeY']^d_`jlj+%T';37fn[R08Z?kEkqQ<o[*^Jh4%1dXqZ`sRVR89ar\q&ZD/(>Rof?W3?&W[5g(e89"6qc@3];s430LK:&6T^DG:GOQ]o\a,9Mo!e%l4fGEnn0h`]eR&&K3@NKZPq=1OFZa/Kp5Ug?43XNEcm1lL6pLM8GP(H+@/2'ZFq*e(::scOBN1L1U9?/*uq669A?=tDXU)0_!beC%L(NY?euTOKXD^Vj$I#M+hISL36'+dN</8R2eM%Lmqg.Eb_$QRP_*$L`qc`<OgN,0j?l!DHa*o^D@9EP(%-))&NNc#OjPl@s><=`'%HC9Z>1cT_f8c1R+>Nq@TRbh_P?@\iQZSaP8&lM;pcm638k'F>d'iHuN"s\(F`eQk-3$U+IbQ,#'lmG0^Kg7Ii6$75%Bia+erqSXi%ru:WC7+-r0SlJd$5DdgNASaD"g*8EJ(ka&jPkhU?;s7g@+b!Tt97j6*p8%=AWE!BMAp7M4nF-caaqF)M*)Ffb-n7mS1ljZa+Xrm+%;MK<kOW9=aWC=J0$8KpLK5G['JUS4]aZ-#Wk$@>Rb.PL_k8j3(q%OK+G2"CVWqUnP^ncA+)ao4;+sBQ0J\VnYiR><@eJ/Z.c;R;L%NG6t(_Ps".Xj#k,4A7Qg>t+h.ggkB7g"<]1?c]#cR79uhHnpFRLLmfrBE95iU(`\^'L3E#!GEA]!)qu&*[!S0b]-LSgj7Z"46;C6%rrlfaT:UN*jsNCl<W2%rhuDj'gV8.2iS?TorF[4$qn)<R]X\4ks,VNF\)f1IhtXD8do;u9s6IqEq>#e1rpI8QJ,%:CTDdm=07Wcd%i=E^#kC<C&l2*+q&,uMlrVb2ps4,HQreIuK\o3&kQZ(Gts&"6!DltUoAt(:o]`%*fh`q&iP?%XRO/hMB2*#,,FD_/.RN6k`OLXI<%[*f%G=m#b@1.)FkLhgZ-Hai=TJ%>RLT<:EVT*tMICNR>iqmZUcItkGI_/K=>2hUq+QkV-GN'Ms6_[.[BHqskI3"uK'r.rt@&=H3p%&4IE:2$CZ"NMt8;`S?UZBm'PMFP'pW+8O1GJri8t\tI[ioI6$`D#tB&#(RQ-'nf'Y'WGEI+C#9PLXqK/*g.eeRrtd@`oeaDl+E$S%3n<I@O@p(^OLE;5"k*cS,!V2q-eiMm^?/];^jZ>1k>b1E;kSM(JZN0+Jl7fU]s*.rg4:coqKN/X8Xsc#0c[_I"1D:=.ieaC&u@.A%D--MFOV7IicV'F,MbnVZYR"R#(0lbo^T6Xq9M]/.(`pX>d(eKnhN0oq@nQ(<%^*V3&BbP.IuF\Qr..K>)+P!#rcjZ`""T-Cm6NuT%S+&<E,>prF?J%LkPQr;"%`3A<F[,[_!;4ud^IjVm5YU@hr>HCX!0[3ZBWqVJA&SNY'BQ?]%Dnr\lAWc,Q%dM.2qCmC)HYG+<9I&#%C%'/mPr9YU_2nZS!F4k069'mk6Q>5Fp?;ToXO>D<_dSaMiY9O*@;ZGXHW?%uYjg2e`8?,:)=sFZp\SkB%/n-0Q!6<c!VD5)*&mRP%L^EdMU%qdVe#(SZB]33<)X:g\@<).E^>!N#^&IZ)T7>>-2pX%dna4Z55X[Z%3L>j$r943D%uVhl+JriTlB>uu.K3Td39m'%MB$J2%(T;cbC/j0Me7U<JqqJ&DO9@9t^$*T=2F4&BPe"VG*C5>ko8P['Jop7a?Wc\47COA0@$bm70)>c&eWZ2Y14ah_`[(\D8)7MQEp]<^%h;?^kR5J*/AM-tB?3*[GTn;4u%U&hsdMp-qZ/:MjI.uNW?/BK_Y!$"UMQl:R\2cs)O/.2X)CJe`lECZV*4FMDM4cPKNPoU!^;Mno%5;#L?Rq]/JmDN&Qh3u'`^1ck2>0pYj4I,NcO>t;N;51J!>bmJrT;0)tb$B%l=_Auq3'2k/7<73#7deGI7[q^uN5$^NnbI%AZa]`H%<`p<!bijD(Ufn,M$V8*u["2!WY"8iL$R!lQ1%N3>+G6$)`ZeEe^>jq:^tBFNA^YPV?q3%s^`KB*'5'n`Ff6kR7L?sPJ1@B%C%k#7%4]#1Qf=4,VPhBO;BSSrB2(0Xr##GVT[oaLI"'Ae!G">F1,S-?@0ZZ'^aP`2<;`JFWI,kZ<IgkBN%a*,pP!`5d5`%NCljjd9dA;O8%:&ldPE5?2DI?e1I"JAN'8ksNY_9f$r$p&(.=M&:\)<AOSi::Gd3.c05!ToKe6bAMnrrcI`FXW2#>:@F#QT!8&#_MtLLcW.O?L?/[%Wh]HV$aVHOh5'HH,0=q+JC!plKB+6OE8%tp=XS#Ej]36u0PCIjH`JQ!=1q#!U%U9U'X>tUiT'o1>6pio``?Oh1`oEJlU^:!^'CL5%hN*X2+ft=G!Q/91imA7+"Q)0)<tVGc^5GauPgO.$Kg9j]8b>K#/T<OaA7*)qYeo3fBZa"'fs2bi)I)N2NIIk&[/cAj87G],Fa,%Z%Skgk8*`hRmqD)T4\o@uZ%DA\U&Pro2UYt^-Co1geX,jhm+Hu!Kb`CS]e0a4.2Yr0l_iQ"I2abYHQt\ZROAn3?qf>m.G%8#NH#'mO%PaXaR%nX[J:e"\JHM-7OS!ig^6s2dG$mo0P/-3CL3:fqXo#:l]1V-^E>:+k(U'Wer6)LTf/kr/5EC%lQUNbAAC2<GXf()mY3rQ,1%fX<;l*\b-)FK*gHi"NpdZC(qr.m^YU%.#k]&//$mBZn-b7P<iU]5,enMea/,\.`AGf?cFsFpl`ONcnjC)ld8Ne;o)BZDKG[bLAN:%$8lj:/&=.CR5CEUhYn7\gO>Y5]tS#ILI=N'rIp`ZV['FlZ3a?7VrN<k`Lr,Ag+Jm?ZVCOu=j2D5coZs.J+q2kVf,0r4J'tM.M;W\%_&jde,44])Ml([&YF?>1A9ZksOEXZiB)n,(J]d4iR:&]t"@S$KrWBb0"7aq0q`N\;K</)-dBhL7?I"?)0fX\1$8o@oSjIgTC)-:5%!*T;fG:W)[TI1J9`8S(#k@']LWZQ9tINq$neRD7dh*u)/]L."maEga.42uMH4'"'>>G8Q8&X7UdNlumiM,5Q:9Y=-dH#^]P6;"30%hb)s0KQhdM9:=YU0@PPZ3cHF_pIeq_F/]oSW(b+&AVF3&X:4I(>N,@5Lnd%^X-.)LhSr9?fU<#0.MM-gF>.+ANb\#G3X7bSDbU%#%EebVGPMUEG%47l.lYaEUe,@Er<?LYd"=-W)RmPS9.(E^1GgsZ9O62F:=sIAE>?\Y67QdN.\.KEgo\q+KZ"kiLd)H+HNAL_3\CK\^%!SK_UXo!9PD?]h5L+R(q9C2l\_Udq=96l&&%r8$nn2b)q\<euL*6&?;ps!9'\lR(OT=t`]LL^K?b5207'C,np23VnN4DjCA\^\\o%TKa';AtK&0K^`PhI;=qY8fI;;Q]+0q#SR?u3.t\AL'TI5.=A!_JP7\h(B)<'#9q+'en`65,EPS8ZTG)m`MGCQ<1n=?.*K5TDJD4b%JD8TO-Re0"V)`gnK2['rdH:+^A^K7UX5J=Dk!+>N2qsn&9P:DR9Qk-*_ila8X$OY#b6Tu^LjH#]1!Wg2\f[T_J\c4DrY04j7tGs:%MH`t,f#i9(K3>$>$Q*^.i.J/?Bj^M<..$FEk0SMB1&J5j7mRlb;r-)SL6CmO.rX(;'H*)[`*pCi,D.gAX#iCE1MI.-!Wa<<FAGA`%^1>O;r6lhgcbZ]:%km%6faVL=aIQ_8R>SU&mgn\'iAX+sf&=Nd4BCCO4O-AWD)O0T-`!a[jM"V0"L0H^'=6rj.CR)?>F[*SXECZ0%llX'<D8,.E?Vr4/+hM.7_UFkbdo[-Ug#=9W#f^$febpe%e8jWIDQ\+^OiI0fa]qrYYK>cNh,IO<c.[aCWuoE2Edk:d<dl%S/Ut`c%)[M;HCn>]K&,nsN[1P>/:f(+=ip6e;4DX%XCXo7H!3hr6$k*@..8\XEG#YQ!r;h0qnI:.VKO&=I(R>ERJeT-#kM/6+%U%>pj<\jS%6O1"NT0#e.gT)6g97+bITcK]M\m(o>JP$O%>1KK;0800MdnY,c6jT\f"P/$E9KqnSD6LO'"_m23>I=u=BD#X!ffN;-!dM;UBF6p+%LF?ZAq;HBXI+DAX^%C*Qfq09'7P%EJJM:tA*V'=^.&47nch'J.0>8_g<Fs0#MSeFa%jD/O;u)UPE.?dl<ts#`Gf6pXH>"'d>uj'-%F!/5[X3'8CV>JW)b8JXGNa3lm0+d7J`"tR,Y&1+5%q%"W1WFkeP#JhS#kn*mHq`5re*KX%T(Z?s3T4nk>90c.p1EU3qd->@pYT3t%Aj+lISMP;6^@:Ao0rj5oZ_BT%_82#Ko%V.WbQ72&V]AH-,H`GOZ\)'UA+&9\;\Jk#0]=H$(i>Yb6/F--(hEXk5aZL>X8Z'aNQtl"%Ks[\SX99PK$=:@hd,9XR2S59Y,UDE,#7Ec>F,]^q,!qhOO<UpnH/f6(K77&.`Ng_u&tVo?030l0^8qN-%eo3_EuK"$jJL[FGdbCb%5h//9(R_DI,4nUu3GQqU7X!IhQZ!j@&<E=3N+n:W&uL%W)[Q+7\--e)s%o8S\u9R44NuHp.!?o5LBnY5L=ktn]Nu4``5&(UCll=X%.9Tk:W`%PlYV[aN8m0o$QlRmr^t81`ed9EmborBo">j<S=05udV6fI+ON3;;!oKisC4NFDUK%h*FHcYM?/S#:k\OW-koZ#PCCih2%J02KaK.&CQ97,55RqeFLm<I%je<oJ;&V!InKM,/t4$C"ket#rcAIR'ZY!4"Q=uL&GPa&j3og]%J=fbm304_;MH*\Q`6/*\u_t9!a%f,+mo]2qMuX@R.<m_;=K/-.Yi^e@9j&s<nAM`T!5&fT;*!28_;b6$sX.4YpK!b*>)V1ZMiVOG-#L?'r=9=%g'SC)1=.JV8#+`)U^%lMFIY!WtZ&bX]97"Z?n<o)ND5=oN)1eYgYc_]0U!#4Oeu@'3!c4tD7%=<C6\eou=/L:-l@Sb``kD1b[96fI#,UneQ?QA;$/Af*`%%rBq5fZn'+IG<\"t9#YWPS$AN(Y8Pu0cBtpIS32n[fcSH`[t,eB9Zl=LD%:E*D@#[jmmGtTgQ+C$KdBIb"0JE3!p8&d.XbN6G6jsa%0]ZhSL"Vq+hUIa[raO,9aK$?S=B5ON=OmOR]63?I;O?A,!E@^()1gH`\IlBM,W@8pnuX9"es50Pq)JttU/SgDClkfiC%[\DJ`Gq\%E-UD<RAW8=d'8uFf)GN&QGp*rZX!AD2XQi8(A6A528]\:%<JVG?BTg7#-k7*Xm_L)20Wc`b,B'd@R!uo5Eu;*^eR?0L<Wij7#:>P%d$1n)[Pl&@+56Bg=);%B,_TVJcgG9d/Z3>P`!WPXG+W3GZrJfak4G(sI,XI<g0CLRH?e]GG;l/UJ3rH`Frf'BXJOR%'I2A4BONkN%6_b#lT>[6GRP%3E\lf^1T:Kk.>Eem(<\*5Z<kjocE-RJV3>tMHDQ3D?JO38A<;+Y0)#*rU,eRTZ4jS"jW<le$%=<@k"i='dd2)<N%oDj'bB^9V7'alNYLl,@BZ4jM&TR-[<N#n=<-GuYj<P#Er&EF_Ye1bh"Rcc)0)##?94";:R(h@PD.(1^r?]cg+MX,@/]adFaZF_^Q%94uXD*uS5k#Mo9cP4UY;LdEFIL'D.r_bFEQ+Xm1\U^qN>Ppj'BP0Ds,?SOV`:hm^9+\9+16bZd:<8_r&4[>QRn[gY!k?9ucE:_K'%[<Pd#,M0aI1*GriiX`"Zll8&l)Fltd[ZKtqlNGFq/]H2M;eYQ/gUS3i-X.]J\g>7Xm/d%)p'0bSb8P@^aFn:n<BhEock_kdY^)_'%M$l!PrtJn1KZPd':'Dh(AQV9X)e>^$H;*/K6-jH&f4NFGiH<l\;9A/d'2C"%]7PbGTH)OM@&sc^`THpZnhKB,-?JZ^@nUPQHLO*A%:N_:dp9+1o)Rtct")OAAPCU*]%Mqc1Oh8_JU!<#%;-%A:e&ue@*GEREFH.@%PJquI183$Ug,X2R8nFP<VonG]7Lj0kLO>&N*Ej\#%JaP%5H2u'%_%2?L:"+edJGOK7)8n<?^Y<>'\5C6o(ZYjKfGu)^q2c[m(FC^t[OZbd=L>8?O`dr7XZ9\@[1*6)VU`!s6IV(%N)*"8%fp*VXUZY)glX%1ri1Bi!)ZP]>kf8PKf<<0fU%"ePfU]-'OAW!fEjPE=2Wo[JX[g)$mee4<+=&4mj<7jilQNOX`hO.>=S-G]UF8Z4%a.e>J@?3`:blY-olp4grphrpG)cZET+RH?kL!RB]Y-A>^:"WrVUa*n2K60BK6_F."&Cm1Di=fQ/72=!b6VheeBV*N;EGO"qTK0fP%[@<Wid2@"^hK1nk%Z4c-k^$)'WHl&YaK:)p3X.TM%fusgD-53Y+APk+F/Lf98qt?m*s6Y"dtYHCUYb@LS$%O2ct*_L>n?K;b_Nps%HEPrlm\]:jOO<_2bdmp9o,e]QO-M_+%,U2o86?nSZW(VSit[00:.3^/7$4+,SZ[aN.r1Is>u,#Y&%WfG=/`Qp3aHZ#Pl@?A;%,9%%rb<3I4;`Ga^c]R'm9&qY+28-pNTpFbU[(4SC&1L9?Z4"Qn8?YH(9k(:G"cF0+@_90ZCYf<4HT5t/m@Fq_Q-gVr?1E'--Gg=S?+Xt%k[[/S:9An<%sWu5a(/aGAia'*4]I`L.Dq5;>.-,CKa2%sm[#t=&%Wk1O6tL.gcMuu`R_q.p@,/Ior.Zu&$d7s;=FQ;aa+eUahuh%%f#(%\DLmVFa4t?h@>h4r6&Vgg?m=pqB#U`1,3s7FPm=T9k3e$1=c^NpS`_B+hWIQ-/,#HF,Eb0#Dk"U<ef-LODX^5*FYd<64\1hA%O6MS(LKRWSorbe:pn0--87Xk/a]a"QPOKtUkl);ElO@gZi^).JU>QI'c>4D%MgXtu4cIOt3;V_$;93?tdA51fnFEdHgZQJ]0AamE%%G^cq&o%*7=DZ*-#O'9XaCpV%.91C1&taeTUm9^oW>0>eUaPn&6(g<=9$)K\)%>pI-(+reK-?Z)l,eA#6)_N5._-(iG@N5.>U*+/%Au:>.'%CS]3UC28itp$ZU="qtosgNuAm7V6?kcC"U('<-Ounj(OG[D9#j06WK:4klEZal<ZYrl:mULZ#ha]i?O+LrrB!%6n!2\nN%R4o04:@?k%:[Z+R2#"U3\W<J7^?Bl`+*E.G70Jn2LJA3Jn8:Ri4LVO]qD<W]_cr!ofU#6rHPNo6CrYASI1V9lMlsucdj4JG8FF*F%iKi9.JTl.l#'t=I7/.oHaaK9BaMgLAT%lg>NTMC6-MKg;L%6a<dN3Ku6ED-u*Q@tLnOlrqQ9F<4j?<j5[.075#Jl9/m-0bi#H2cp%#:B1^d%/s9K3NBR!@kWUl9:e:bN(j%Ub!mH-26A\bm!@bI<-!-m[:CB@%Ul#iQgI3M=-lTYu,Zdoi>*7Y@[IuoD!'pm(Qu[;0Lj[%X4&Sbd:YhjgnHLu97P%NgHbLf;Z!Z/c]m+2;":K`\CoVQ_5UoQ[qCW];X\LR/%Z=7/u"j"QJKS:Hcljlh@`jL\Z&W\*[]ZIr*[_9%K0E=[UX\!@[cYUXAbU0JG1*I)pJJ)i4!gBLI8F^I:0LY@+"*r:bWEEIRmCtYMP]Z'aB6Mk?J0`GFPE8iaR$Y.AsV7ss5oX'G<aj)%mc,6Ga%Y07<3*!9KIOSF*O73rV>!hfb_^Di(V/r?,kG@&b"2K)=gHNgcgJ\GZa($&]apaL3g3D)I2F)D3o:Ll1knj6rh<$Rj(NLh%Re$?9JZAX^cc>H(VT/57M3hB_jnU`!=W#Lp%J@e=rcE\!Zp,/Hbl_#]XTm9+?O,@ke-ZU`3cI$`SC^^h%=PdVRq,s^>]a8!3XD(l%[[]SY_uRDin*bEN,O+Wg&u8c9Q-b7q_'Gu\TQsdf/;U/,DkTJZlk-5=ad7+P8IE1ul/sMjnGnOa4Zq-W,@m;B%UsjDC=e`19su2p%=@8IP]>#MKFfA0t`d5":g?'PpecMU;I9md.@#aG?a^6ji#8Mbl"OFOng.6aW0E#KTTm(.<S!t$][8XGL)Z24!SE:d)T2FA2G1"gF%#sk)#Z53C5k6g#t:$IJ19-i/(*_<i[3#][T5-q4n-ffu&=MAeSB^kqU`'V.i:_B7f4&pK9i]Q"_X(%"gAO"rZ7)d#[i4E_%h4#(b%/c>fD,D0=m'Ho\Dk>3EaHQmp;iakC?q"=i+9:sjTcRg.t,Olpa&Fqsp$2]p`j?2jbRW]aK=MHo8<8=)U3L"a)52Te(CeN[$=Ho<O%FFZ'dTGPqHE0;M?Wq0)N)f)il^RnI_A^m^F6IA-*Cpis8]1n(-7>qcE\g<a&AoL@<>0V6"RU`d!<I.RPcrB_B9q-%O[pN5I?bUEE%B1%^,<nj!i@h'&Ir:BtEGE>15\5P+[\H`4b3VTPFN3f=`N+1)%LoIj&-@krUQ8$3EPM.$jedc>DiV/3rqFn=Ee^.Pn3Xg3Ga3'Fd%3.ID$el['@K@U6OK!i%$MtrMG?uZZWo<:Beca)+NpG__PO&eD(OS^u'Y2imqgZJTL%q86"4A"M0gM#5ckVb''G3)OBg;R8j5^*;J%/'itm`P._bLVojNQ?IfGSp<mJO?9@5\I3,DdBDEe@u0%AKlQaB@JY@Bqo.^:o.^\50:E$$\J,d;V,%g'NpB@POl1lr'p=d*F(qhG%rFCUig^G0BC'0td\S2[GIt3D+Bce0fs+Hi5C:,dk>)dm(_GlM'5)4on-@A129TOh"-2qKkbuRY;)0FAlXc)>2X"LNC/0<.>A82-h%i!\JE2'2.Pm^*fr.#Nsu3Rn4=k&LWmgU(r=H;mn8@O]d)Y>ce#IOA^M]7B?X+r[&RpdCP@[$3EPC?PuJQGh76m#O5'0l5\u-S_84%h'3K;4W[lb*[8OB#8#'*RfPHj\))&ZTePi]Z.p'j]8poq+#-,J;$>LQ2kfYW)+IiB'$L,0W4<q:d^Q;UXY^Up_3H/"e?#Q:N.Bjl%A2lG/W-V8KH5!tRSqta4T1OY'nq9WZrf^i'_QiYJU$R!(rhC\tQ-N9f,TuOf=k4qKj*K8j315/jmXA'bj->ROXj\WZARoPi%0Z]j%7N+/F:uc7NrtOJ(Pe0`AR%P\%@:O"Na_QH@Cg-iIee?3!>>s0=B-T0u*g9kJb+_KU>2)RSS3&Hodm9u&2cgpHVF_ZfDML@Ckj;3Q%LJp5n=h9pW/&Z,G*k5a_,Ma33LgnR1JM1Rr*&uTK/M4jg?r3k?>&9ohK?]g\ou=PYV:a6dM_Th>B2<k1K*gejCA.SVY"g>n?`-jT%/Y;G3f8O"fQ0JY]%R*/0S(h!s321Eg.5>b&()@4QDXEObPF]+?M?mI9,W:B))p'`b7WunpD6t$kEM*t\="sZkDAK*409k3RF_&?]%"E^\DokHF4fN)=`s#hGmJ+<O4ClIJpGBl*8n5f`Cs50UU=kOsFoSr%s:BX1&48AFJ_W17X^`_*INT"]=2M`(:*hc_N//BL/'q$tJ%6%:s;TVMji/XpC824Pun2'p'`TkjLYZO_6]@f\sIM*-Q?Hs+fA,N1\##d+;[_;3>d%-?DP\?/)#q1L(f_sA5$gf)H3!Q!Fh@_riQ%%*>pDi1nbt.'I=_!=:hM`uNqXQ1G$;-?$(THJUhqH"be\^D5EJ9otm7Oi;R"?((TgUMQ/_Ns,OO3hVjAEaR?J7ks5e05Bke_F8W^%"mZ^r<D4@rD/iib/0kH@S$)3XMXS3"8"NP.On8Rs$*N615Dk"6q-p0\b>I+;o[:&+W#fnE7APYO,]?Jll%[E4KrEjMdPF&Vet(>c%_o\I2]pG;*L,>P$JIOYIc+p4tFP>9c#Om%%)qWo&IA9r3>&aN(H3"HAjsJ[!R:A8!oF23p/_tdXSbt2+k+.BBm8@%!Jpt1*F+3o7%i,OnVl.0lo^V^QO?/HaI`muXS&ZcqM"X[h/1T6oZods2i\QaX/jD&U,JOaEHGZL>S$cai]j:X,)D4aX%4lm=c+9:pJk&$r8i-i%S%^45atQ`fu,#(0;0VABbP9LR;nmGL0CG-G[l6L?-Jd`C10X*@.smaHQ^U7U9!^'fcLV.2'L_SgKJq3XIAk?]4`Q0CkBAB/_A/=qq>%Pl&DLE4Yf&3XY-"Qon9p:upSgesKS_):UtLcOM^+L;.M,-F=$N&n0?1dG)^\GugsQL!`&-F0_UTF'97fAa`)ag5fK-?tVK^-Gop\%BElf^&%3.EZI\Cu0.MVh`d'?\dE\?e=Z!SIa[!$&K8CWkk@?eJqFcEM?fp%ApQ\:D>7I*Gj24Y&AYs;TL>%HdHQ`@a!OXJ.mK&?d%9bq99\hk2/+F<3m$Am!+".40O+@c_Z3'?!#?qlC(52P4dN,=4>U8'`*H*us2h1Bc0fH!V"+pG_:2:kNXi.&#s<,5,Z,$Vm`l'd]e%oN>Abm@dg"Y)@j](6BMAb;YClmE4(OBN,%g4DW<U7u6=6Pe(TNPT![?0aA:5FA1%t+"8.n\HlD3!"h:m!F%<FU"\o&25[`ChgT"e%H,Y[7I$X9:]U:0^4'_rDU,C:fLX+6u*Z;N3"4Y^H;VpX&fn.;Ia)FU?"dJALLgUp`VLk%r`SUZD"Ag+358)iV`F[S2MiE%RG7\Jm%D(=O<!6WDpUKN!X:l?C+-_sC*]NM;dm]u=uR3NXc6L_7=o`GOnQ)#%]@\_q(U8%+Y$B+O&5V9S8ilq7l-jJI3Z$,VV/aMtuW0[hM%lR6r7?K,`WE.XB]lNef!$P$aNfU+tc"CtOE]Xj)e4Fk],3lA=:4o)3Hj7@nC2)YRRU.2M*3*J*P#B5]B6tRO6[(]JElgjP4GG<`<%_<K`boE>uh:T,bdqZO#W$Hrkoi<0mQ5M8/('P@)HNHKYEn5/XQ;[gVjF_/:4nbc(UTsE9ZoT0U=%Y.G<<$Uq(7e^2S)%-51/msMM%=<)E;@,bV1'o(4]80cuJcYG>..%VFQ+3j<8/_`QB<%P2S/tt7P#$@4]9*`ba]A:h9kFios_,bYZ+rnagk.3e4V/=XH!4tsMnFX<#%QFV[/QpSmW%3DXRElMZ=U.tAl:0%J8RsN.9FC,blFcquko&q@jbCbVN)/<@gkbW7D(*lFtp&ZCcQe:,NC[I8lB?TXobT!HZ?Qr8]%'?,'uXJD^[AK"'3:+-7)auK@H&C$&id2NmsZLHV8($k-Es5jDM+cbKUpBF-f2F6]kOaoO\=3&I0M703Fl!S3nnhc#DLiZpo^T`U1%@ZU;aM"eV*%+S$P&WPIAh8#'QPFoW]UuSB;9:@R\c*eN2il'8H9m%=!37r;kN]uAtk_"td>mAtG0mZ":X__rh[K7r-fu6EMjiC]k%Q8N9^$f+t=XEO5i%X<:!jr[)$3kn&jqD&SC"T,^"\)i4u[e&Wr](^B.A"%0?g32>;k'q41?0WL.Fq4(>4goDW9tIQeDs*4jnh&_,%F7A5%Ws*7-*e(9L[r[jaSIb+6RceiX+:7@j,effoE:$!?[\$@i$/PJ=\>]B2CHnFtb[Bi$;\&,A$_(0(rn,P:13MtTm,unWfkis/%8peb,$a]dOEr;aU)gXqun:#3;eUHc8d4;khm@i3<7YE[A'H'HUmAg@!KIQg8[@pY;S9,A_2tR4C%K-:W)n_[7L,O/OA10&8@2h8m%)U*SFk]m*f=[h,mn`F>PUMWA"aW*N:CI<mFVAB`I%38$*:2!rQqYWF@.GOQ;nf/DqF(e+1NV,D]bie](nUkpjO5E>^Efhqj5;+E.%kf/t_F&W2rh#uW]2e_UA#H%I4gfYN/TB#pM3"a=,Etg-=D=R&!T;*Aucc:Kpk?[(n[\'=F8T`VkmH<e(n*M)flB5+?CNemP_KXe\%1#LT.=SjpqJbP^>F*k'sAns<,@e$mtUU&=*"P\*[g![N0J@9NXU?H\#D<I8jfjjupSR\>DV4tfn*&T`W'MdEY#2S&0!GX^Zh6NsU%F$&RG9+Tc;-LM^rhp/:aRdJl*B<1eX[[XJ#5k"Td[[g2"$FGTU*295$gs5?oo%MBmpT*=o4!,T7\pIK43DA0Rk,<,8h?@QhXmI*B%5U.<:DD/i[c7uU@/^Uuu[c.j64#^K_^7Bc)!O(_E+"'oB^I/?R6E#>-CH$o_5<XNn<<#M5UCo-#Vj_&VV.iQ!#?4;tfs]lI5u,%W%("UF::_=LGm"\0jRdT]8E#k`__U/_5hq>Yd!tlK%Ap1A^P<MiaGe&]Kd[Hu1-8"Me!Lc[C-MaGXIi$@[l\JaI8?5]gk3@7X[ZkZs%SQ?)"nIW31#_[?Mbt=Pf;\XF]oZh:\jm8L^+(=gB\n6O97>%Ve=494\k+sB?PSUW==J*"fRnZ/&S@UVh5S<74p]+7U\@):jhdkK=%+IB6!^:PCXVu"4Fkp\/'2dFi#ZA5.`K<U%(j<;I/lH\k"'u@8(kdet2INOW-VlOP7dQqQ^JWruNlukonJ-tT2*#jQ$6#l2ffIkjK%$lR8_,[0=EE\6Xh&A$6r&k".P/2IfrO#EK0kVko?JbO(@&G$=UUlQ$o7^`nY+usFo3L5&S\jVDeT[9I0GnYfiC`n>se7lLBn!Ce[%_^OD=%M(PA2l(WR$?UdT=5?oZ9*`f;a)drI_t+6Dat$N,YGNjk31K1f<8e0O,R7FmdmU--2MOP8J4fDQ`mI1P5`q)n7>`Rjh#Q:.%G)!!<fob(QX,I3i=8+^^OQP4"PpLo;A$D6$HB`rAXbbBT;QQG@2j\2Q(DN%)@7sWX!E1=kIR9AQ9nh'(6I#9*EKenK%Si9edG:7(%L)1DTpoDBZ%)n/J:j;hr`krVUr*@:A*H15)3iSot8Fq#V$FLL\ROp_^XJWt?Y\MDG%#Ahe]Wt7_]u+blf?%UXP1j0c%0t4Q.t)pj%8["\H%A['adiTt91VY46F$eJC\b,4k8a-o)2FlUh5[G81./e:o^4:2<\c`Im7B:J5fil=/!SpuaAE9:XPi]5[/=`<]9P')0pWI+]%a5#ZbDi9#$fqS)V9=Dn._(X%Q;tl1W\LrR)HhJY4CkZ$rVMPM^?c4ToWF.^OUItJ(@$@W7R^sl>T"M-HX"<_dHHu]2Su@"H]Q.T)%LLhdk6f0eBD;tO$)U$.?LCa(I6!lA;Sdi0qO)DSRV]B;M[:/5Y0L]@=Ou:m3;_d"7r)m5TQc1/c9'9m:?LlAX)&dhmAeV]E!,?jO%&+.TQ]3#:T6##G3)!c\sbp@R1cZgChG_J-S",&U]IuN*Y'E6#W0`)j"eT;8BG>&dXE-_q:7N87CH`=EHY'7Xih7JTXe_Q;P<d0%3%5C%aFok;BYcIp4j_j>klT_`YKc-iq9aOrtOQ)t:8)29ID:1bY>,S!"D(tb&?fF$k!OEo,n0HQkr@dJ)@Kh^VBPSJG-NWtmAb$!o3%6YV==GB7u&Jj9h5*5j6B0OfBB8!0g"8u*aZ\4n!dX=fB"etq>F,4:QA+E!:!;BQA.!1<jQBMMdl3[>[>.+p%nfBSai;0)DB3g7jL%([Laee(l%Kn`eCt-E4B+h<CW1Xpg,eo=HU=LS%).9I:!U?.p&;OSeMWTr_(mm!p%n\VcR+(fR9ep1N@#!'8ucPNYAh$O`ujbt2Ku%_B0)067<g=U>DU=F]^a4OG!W\/'Qob[r![:TAGrWURnUan5*$g0aH'!cH@&&fq$WOG6,[5)BF@fiZZ:WI;4O.,135Ga96M^6s)IU%W8,>3D(`kriL,+t5-h9FJa@h@^S)G"g_nqq`?,EKiHEl'ILC;,PtQd0=$Uo),Xrkcco<JG8-e9"+:i4>pA#S*<$:*%YDlMp;Mtcn%BB7S1E.[rce9\Ss;k5GFY3IB$57am@#\3&I^:Nh?['K;S]h!9`TK7GUl6s%r%[+4H"@R]!PZAqP*Hs_P!FNQ/Ve9Kq'?\r*Gk+W5%;julR:CJt5OSV0bfipSXcr0lEhF2/aAg!`r<SV-Og_77[-ekIVa9W+@-D_GH556kkesmL$0L$-j/k"#R)&sSHJnqOV$?60^l<TAu%aIgkG0tFbLDsk1U("E2"?.oVc;dWOOaTR3GC%LVJZ)$pjq5YPZ;^_=O7B%g)^BtV18G9juFR):f#U/nsch6d1?SQ#]p!QT+Nb2qO%TG$=`#E0GkU_)RD^G(MA0/#F("AOF'I?3@bkBeGK@jtf:XpO(#i0h2V8&gh`rHlTqOU!#.Gkbje@l6?S'mtJ`4p5`>\TVVk^FgqA%`CK";hdNeY#d2CUinMihE[P2iF#$-+nShj&Jmq*<Si2Ws7UCt%?'9K[_Up"%Y&l_W5a6t?CfYH`"U$R\oso;[[Osk9GNBQ^8F6L/%BbcZF.LToBnq?6G:?k8$778CE65b)oDOZ5$*Q<4qfcYEU0QUX0"*](uH_HZG^J&a4+r(pe9qCJP`>YfmI3$h(ZacJQf.t3cjXcu-%<D1hd,=,*Y%l"l\[^uAf9cgRR2CaU-Jut$[lWL$O%]^VD'rMEUetG.)>Ii>K7!>4-\E@4*?a8=M?:>bf&2qNk'm.MDid4.m0bCX!%heR^TGF]9rArp\RFDgfD);F8YlAI/R@'**\Mo5-^-_qX\H24)%7>R"IQR10QKf:>>Kp%roIc[rt3MoT\S&IW?-q;Hd.;O%BF!.T'%70o63=g]_qWZ;h&SGo6cA/,[:m@#qEZK^/nA(T?_jQ2@C>chpX,1I\$_Af:\NDTA\:^r"S]R@=`5UhB@DseCAcDb)E/oO:#o^-W3%M]ucFZq6+FX!PMJL<B8un;h#ld!%0fY+h,WF8c8hNIXXnU=Cf8YYA)PFQjdJk%a9+TBVL7M:3!MlL6k)6`2&_ZmJ"P;3_gA9M6K5%[P^QVE372p"r`b24kk=,IN+[4_45<D5o5LD<1M>"D[Q;6([l(j56*PU&:q'4f9Ks>).KqSPe+=*T@ZLh)UcM_F`Y#]_j2OgS9qTA%[:eC^@cWo(g_!nuf7#:\HB+^DNpi9$p<s%OUPE,C`Dl$>:=Ru#P_5$i/3S?1E=%K-fYhp"5tKVlX^(85/aEP?7H8_[okFdsJGKa(%,d3_hlGIZgQPHDuW3$sFP<#bL&WD8AJ[(tr';.FqA5RFuL6k8(ADG1gh[Jf&m2!j+.G@pXFZir/]9I4g:rJ<d8\HMkIQi?AHE6I]%-El?Z8oa8DO#VZQjY4KXf^6hkU_mb(mYYT5.2<3ZD:%Z]5<s3<Gdh/0r."l@LSN]dhQ8Vagu;a\0e2r"9.?!^$GNGh+?#uXYsVcr%PA;@'c%EDB$[:cO+e?GAZlY[t/qd"8dhXaN5NmONj_%p_8fKH5a*cYkD:8&Te^-;*QA-C.m5Z<@_pZ@c2f2#Gg$7!g<kKMQK%$A]%VqGQke9#]15Z>,ZYbX1*!)O$K$->#X0?hgFX8pQNgDRO?0[IE&b$"jiOBKt]H?IfT^hF6S=kdMendCJIUPe*69g/M-aBWE!a"p+j%IJ-*U<3re6ZT,OiBj[2B6d]5c!WfI^TBYSY2f%;b0$pttXog^9SDPJEmIfQc=X\e77A=B0dP)2Fc)DXMM5OeLRVracE42iQ/TT6L%U>b@"q_Uo;)W<-T`^sYE"Q.a@Gce'JqS\fj',frt\`cGf;>8U9^bIiMU\1U*q`4!A8^f.=]R>+`C%hW0@UL3p^G(aU0i!4g16q)S%)9^WNT2n.D%j&R@pp>\G#[IQ#irdAY0qagqO[AL88aVbOLDLa^D!=\ZX(iF!TdVsWfllP=ZuZ-=G$>O`hJJoFJ@g[:=.p_)<p9lR%gn8adggB#jpo<f?C`k2>5[!+,".0o2!45AR:A]V#no\5p8.[B?/u&ZbB-:\FJK0%o+MGD?cAERPYZ3(CnZ;eV<QdsHDMT6-=2^_#%*.ao+/+%#*e>jmp9W\I*F,t]5)6O+gf9tuXZ>38qSpn8]Cm]3-W+'f#X7+q^i&5<[OB'+&7AotlEYg1K5$$OA9l/14d`Q[N(-P^4%eib"7=]caT)'!i27;tLDh?fI[)r/jln'Z]n6A0"l:KJ]kerP%-Tf$X%kS\Rd+2CR1+SEm*LU>=6H561&'<Wr4F`5i?<,NY$h),%W%gM^OjDlk.C^H;QkO[ees%D>UtnK$cONkhLme5uJ,"<,Vn<J\$Ile`h<M*H"tL/jI-"Kug/6[<#&KNe+j3LA:GD$7I=AX.iT7X?ue%M@n)eD9?.MdoVK14jKs+Lq'X?(<F;se>;ZKAQ;KEh*!\P7XV1^jbd+!*7.tnUP[udV/\*k,=Z`d>buL]1MihJr`pV^h\/nUE>`:X%%%K,U:kQF^P^i:1PEbMB_9P7<pOr<SF-BE'5%qhD(ZF>=Lat8>-MR&WofEac?Z)kM=gMh2^k@$`Sd@F3lmi8DCG*Qi$nMUH%LAX:%NfG(5GEa,T*<eZHDC>[HmGj4Y`8W)dV]CJ%LLY%K>])XaXnDB6cM5a=`Nb$L=WJ;^H<?7OS%@V1=rQlFd]kRoLbB/EKDea^;s/?U%P*SKbB4iTubVu1Ygs+K(Q3Dg,N@`PIq$b+ihZ[#`bS,?pk:`ljO#E5Z6f##>>Q]#4@uIThRTE+A\#\1BdK*Tj%e*JO-rqX19IoQT%gE5PmVTYL1QkU)-'=oH,MRJgu6MBgbC+T7fRk$tGrdk=F$9RQVC<qg_XQS7X9+bcBP;%-_^"s=:r+'3>e@Z-8r"3\9+Za=c[Fr.C%nXD1uhau-L%OQmA4EW6U@^Wui2t4"<I=pDB;TiHuc%J(X.!V..QA"0(NEG!rMoE8:DqFA([_(MFq=t--IrSi6k@kTL'i;\["ncTZ%(M!6>L3Yh3<mF['HE+5J?X*$oq,4OPh!FsdQ[dcbI,IT?D%G/C&NCMp0X/>h+;A)k].gbW]8rUo12gee(aX[nDWe4;ie<usmbuaI%C/0>E2ljVg*BkU5;@f^KO+KicT[4'lp/FW:^JJ-i`J@@^j5#RsU$m^/X7,FQ>22A/2/U^D?iK'23]1N\1M7lLPc,MF%;]q7AAh4n%0X_:4)cBkJ)NMXE,XB6tCQ1gaNlBUh\#.ZP#[uWVarjDI!WrVWs7+@p1#=Rc3&E`0S9CWX9KU*m#YeJ]U<k9Bap&$Q\pAsnggQ`-%/\$H>07lS38D5!lqMr<//OJUei.nbFNo05Sr)Ygr4^Cm(f_lg5@I,"2m=;!p?`dE!'2Q8JZ/CA!n0cep>Ra#k`in8"lQUC<#T7d"%ei6SEfF#hKN'%8C/@CeY)Z<:/,Kc%84t$ce-t0;YASnM'n_)97`H6LYKqUr]\XEU(&:M5sCe^9&:B[R&6NM#3[*RgU^HL>GF1mY)%ANQUqRV6m80)26kDKidW?(24;rt<PQMO(5A%F1m"5k050JHMp#E<?kgMnH=$!ulD+67&'F[\@@WU#\?7CF@Vh#SO?(!L0Bl/js'?%hd-VC7;K3'D?AXo-Rd'.j+dJJ['$c^(jiTJIFYO>@0]WtSog=GKC@]"4*u_s\@=g?c#qti"]Z$\6udT5Ya?(8AD`u[HW_R1:m%oS%6b5*WY\IqiP(0QU2i!E#]toAsmX@)VDstGUO=i+X=(&GB,&[<^>dLCFfc<],\u?EWQrQ\CoC\jhLdlPE^<I:GD-85I:n*fi;'RNK%icPWD;8Xo^Q'@PgO/9KgJd*Kr34tsrYK>iK5fnca/(A58Qa?mM(k[3d7PQ<O%C-3kY0PgBIcLSY(\*(:pXa4>L51Q=baO8_IIc)f%bR,Q;g'&ahQ%s'f3Q.MAWf=J=2aEs6D[#UJV>(8&#sVd(?=E+^lScFMK'QQsm?Fr]ed4STH#mpOaLo*k3@jZj:i<?7nc879%VRD)%7Cia*c"I5R.X\tnV7h5P)feCK?$=?LqI<e31qZ5:V-ObX-<1n]=pq9T0?-l]UNI9?PGq)F&7G333e:QIW(?@],8'>U6MC/thOb)^%\Yg&sB)O*EmE(3c(n9-%8bNV\%3em;"@]P,l[,;/BYms<)NP&5#POc<n@JJf`g)UTPP),#HsC>8h:,8#()?j)h$b'W`]`j@Zh]KH%(cb,;1E-/,ou-m/*_t6,Y>SdIOP*3%A8?dCo2UiCR5Q67XV3:_LHi@j)e-,qFV9_"C=8rbG`p%e?(ZV8/HT2t=tDZ5qm^@ll<l7a%X]h"Sk7Frs'bDXhmrshAK>-BBe`ugEmCK6iOYj6;!3OY`K/QBj]</X9fpmDC-1_!(4CJEeF(.LIl4_3GY9(iDPY-TiDHM0eA4nYh%hrT*_1/+)?jg%DXS]KHj90][R.%jQ2%Xgh\03]<ReIML\O-PR.7W1r+153&K^sMK4I"]<I3_rhp8KHX40jd,'I"#c)_U7M(8"`%O%oum%s5jM+1RpZ#Wj5BD3rq^Vr?sSHr?qb;5?QrEsr9/q$8W*@dV@Eo,bQ[[H?=ei-*Srn.:oAP&n8U%cj(1LL\,+N*M2X,#Om/Qq%b6X1]!<EQ%?hUQ8$^J+Vs(*hrkG0oXSYWr0)e*j-6*Zi#>0sIdmEg'#Fq]R?[C]0NX"5Ch/d^3cado;b5eP]0h)r&#R/3/n8pR>A%i2EJ1e@Ih3pB<0&&JS1MekY85GZol#9"G=S'+.LZY.W>$F(\3SHn@]n+SKJ>=A02M!,Jd>eZ"+V**MV:bp-Erop!4q)SCHkq-"@X%nd?X5QdKYM)@sWh#<P8?RY/;"8\dB>Aj`P(3jkdAZb["@?stI(RAIQl)N)er%0@nM'7U+R*J5=e*[@A!ZXFmNnU-H#Mu3+oZt<'!%?jQBn:-We0I`[<=-!+S`3WP#]W:j]F7R<=Ek&k\rO-4>[k)FEri@13pWaDrpl%l8ts4_UjUpqDA_Jig/f,31=*^6PJ%3,#WbiM`6%V/P`44jCkkQJ97(P=_h!2D"#D)G)]lC[J_&dpo,mk-c`k`2&i?6q1.cKC#aY:86V79f:>C,G]JEn.?5[U13+sWu5ZUbj7:+0dDgk%i[t\&I,eN.#F1^`*&CnD,JfJhqDnDX)2:%U:3Ea!6nJp#]r?;I+s)+ZZO>T3:nYYoT(B.b9E7=[?;C^)ag%6-@)e]!Mo#PcmH:hO%jen&M;andP5fj4A?h!Ph]3-I,q-f^7+BQLl*eMu&NjN4>[qroAM=iX4S)GUn?cD`6#&2F3PNuB=D"lWOG!k#fm[tWh^=dgbcee<U%X6s'efYd$Vj3CY)S4#`h)p#kZVeY@@DMXDbAD@nIE0HQsh$JbOUoiF%d3';-IDnUV*@U,%0ZKU<aSh;AkYJYCbTHlVf6hiKr\uqs%cT7b,S8/(]$4C4Uk:_>[nDOnmqr_nslgK<"rAW%D!Zl7XoWpJ@q<>*J2o#.e2c&?1jhhVthS&a,:]Bsp^]!ZZIe`V\+$]\mk-oj<%p<Oi;If'*<^]2clJ,8YilX/NJp4j0.r6t+aq!e!<s82Qj$KSe:S,_Os^\ERk^A5Om^M&u~>%AI9_PrivateDataEnd